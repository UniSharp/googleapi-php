<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: google/genomics/v1/datasets.proto
//   Date: 2017-06-13 04:25:32

namespace google\genomics\v1 {

  class Dataset extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $id = null;
    
    /**  @var string */
    public $project_id = null;
    
    /**  @var string */
    public $name = null;
    
    /**  @var \google\protobuf\Timestamp */
    public $create_time = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1.Dataset');

      // OPTIONAL STRING id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING project_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "project_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING name = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE create_time = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "create_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Timestamp';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <id> has a value
     *
     * @return boolean
     */
    public function hasId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <id> value
     *
     * @return \google\genomics\v1\Dataset
     */
    public function clearId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <id> value
     *
     * @return string
     */
    public function getId(){
      return $this->_get(1);
    }
    
    /**
     * Set <id> value
     *
     * @param string $value
     * @return \google\genomics\v1\Dataset
     */
    public function setId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <project_id> has a value
     *
     * @return boolean
     */
    public function hasProjectId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <project_id> value
     *
     * @return \google\genomics\v1\Dataset
     */
    public function clearProjectId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <project_id> value
     *
     * @return string
     */
    public function getProjectId(){
      return $this->_get(2);
    }
    
    /**
     * Set <project_id> value
     *
     * @param string $value
     * @return \google\genomics\v1\Dataset
     */
    public function setProjectId( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(3);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\genomics\v1\Dataset
     */
    public function clearName(){
      return $this->_clear(3);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(3);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\genomics\v1\Dataset
     */
    public function setName( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <create_time> has a value
     *
     * @return boolean
     */
    public function hasCreateTime(){
      return $this->_has(4);
    }
    
    /**
     * Clear <create_time> value
     *
     * @return \google\genomics\v1\Dataset
     */
    public function clearCreateTime(){
      return $this->_clear(4);
    }
    
    /**
     * Get <create_time> value
     *
     * @return \google\protobuf\Timestamp
     */
    public function getCreateTime(){
      return $this->_get(4);
    }
    
    /**
     * Set <create_time> value
     *
     * @param \google\protobuf\Timestamp $value
     * @return \google\genomics\v1\Dataset
     */
    public function setCreateTime(\google\protobuf\Timestamp $value){
      return $this->_set(4, $value);
    }
  }
}

namespace google\genomics\v1 {

  class ListDatasetsRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $project_id = null;
    
    /**  @var int */
    public $page_size = null;
    
    /**  @var string */
    public $page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1.ListDatasetsRequest');

      // OPTIONAL STRING project_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "project_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 page_size = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "page_size";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING page_token = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <project_id> has a value
     *
     * @return boolean
     */
    public function hasProjectId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <project_id> value
     *
     * @return \google\genomics\v1\ListDatasetsRequest
     */
    public function clearProjectId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <project_id> value
     *
     * @return string
     */
    public function getProjectId(){
      return $this->_get(1);
    }
    
    /**
     * Set <project_id> value
     *
     * @param string $value
     * @return \google\genomics\v1\ListDatasetsRequest
     */
    public function setProjectId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <page_size> has a value
     *
     * @return boolean
     */
    public function hasPageSize(){
      return $this->_has(2);
    }
    
    /**
     * Clear <page_size> value
     *
     * @return \google\genomics\v1\ListDatasetsRequest
     */
    public function clearPageSize(){
      return $this->_clear(2);
    }
    
    /**
     * Get <page_size> value
     *
     * @return int
     */
    public function getPageSize(){
      return $this->_get(2);
    }
    
    /**
     * Set <page_size> value
     *
     * @param int $value
     * @return \google\genomics\v1\ListDatasetsRequest
     */
    public function setPageSize( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <page_token> has a value
     *
     * @return boolean
     */
    public function hasPageToken(){
      return $this->_has(3);
    }
    
    /**
     * Clear <page_token> value
     *
     * @return \google\genomics\v1\ListDatasetsRequest
     */
    public function clearPageToken(){
      return $this->_clear(3);
    }
    
    /**
     * Get <page_token> value
     *
     * @return string
     */
    public function getPageToken(){
      return $this->_get(3);
    }
    
    /**
     * Set <page_token> value
     *
     * @param string $value
     * @return \google\genomics\v1\ListDatasetsRequest
     */
    public function setPageToken( $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\genomics\v1 {

  class ListDatasetsResponse extends \DrSlump\Protobuf\Message {

    /**  @var \google\genomics\v1\Dataset[]  */
    public $datasets = array();
    
    /**  @var string */
    public $next_page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1.ListDatasetsResponse');

      // REPEATED MESSAGE datasets = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "datasets";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\genomics\v1\Dataset';
      $descriptor->addField($f);

      // OPTIONAL STRING next_page_token = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "next_page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <datasets> has a value
     *
     * @return boolean
     */
    public function hasDatasets(){
      return $this->_has(1);
    }
    
    /**
     * Clear <datasets> value
     *
     * @return \google\genomics\v1\ListDatasetsResponse
     */
    public function clearDatasets(){
      return $this->_clear(1);
    }
    
    /**
     * Get <datasets> value
     *
     * @param int $idx
     * @return \google\genomics\v1\Dataset
     */
    public function getDatasets($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <datasets> value
     *
     * @param \google\genomics\v1\Dataset $value
     * @return \google\genomics\v1\ListDatasetsResponse
     */
    public function setDatasets(\google\genomics\v1\Dataset $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <datasets>
     *
     * @return \google\genomics\v1\Dataset[]
     */
    public function getDatasetsList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <datasets>
     *
     * @param \google\genomics\v1\Dataset $value
     * @return \google\genomics\v1\ListDatasetsResponse
     */
    public function addDatasets(\google\genomics\v1\Dataset $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <next_page_token> has a value
     *
     * @return boolean
     */
    public function hasNextPageToken(){
      return $this->_has(2);
    }
    
    /**
     * Clear <next_page_token> value
     *
     * @return \google\genomics\v1\ListDatasetsResponse
     */
    public function clearNextPageToken(){
      return $this->_clear(2);
    }
    
    /**
     * Get <next_page_token> value
     *
     * @return string
     */
    public function getNextPageToken(){
      return $this->_get(2);
    }
    
    /**
     * Set <next_page_token> value
     *
     * @param string $value
     * @return \google\genomics\v1\ListDatasetsResponse
     */
    public function setNextPageToken( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\genomics\v1 {

  class CreateDatasetRequest extends \DrSlump\Protobuf\Message {

    /**  @var \google\genomics\v1\Dataset */
    public $dataset = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1.CreateDatasetRequest');

      // OPTIONAL MESSAGE dataset = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "dataset";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\genomics\v1\Dataset';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <dataset> has a value
     *
     * @return boolean
     */
    public function hasDataset(){
      return $this->_has(1);
    }
    
    /**
     * Clear <dataset> value
     *
     * @return \google\genomics\v1\CreateDatasetRequest
     */
    public function clearDataset(){
      return $this->_clear(1);
    }
    
    /**
     * Get <dataset> value
     *
     * @return \google\genomics\v1\Dataset
     */
    public function getDataset(){
      return $this->_get(1);
    }
    
    /**
     * Set <dataset> value
     *
     * @param \google\genomics\v1\Dataset $value
     * @return \google\genomics\v1\CreateDatasetRequest
     */
    public function setDataset(\google\genomics\v1\Dataset $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\genomics\v1 {

  class UpdateDatasetRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $dataset_id = null;
    
    /**  @var \google\genomics\v1\Dataset */
    public $dataset = null;
    
    /**  @var \google\protobuf\FieldMask */
    public $update_mask = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1.UpdateDatasetRequest');

      // OPTIONAL STRING dataset_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "dataset_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE dataset = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "dataset";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\genomics\v1\Dataset';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE update_mask = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "update_mask";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\FieldMask';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <dataset_id> has a value
     *
     * @return boolean
     */
    public function hasDatasetId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <dataset_id> value
     *
     * @return \google\genomics\v1\UpdateDatasetRequest
     */
    public function clearDatasetId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <dataset_id> value
     *
     * @return string
     */
    public function getDatasetId(){
      return $this->_get(1);
    }
    
    /**
     * Set <dataset_id> value
     *
     * @param string $value
     * @return \google\genomics\v1\UpdateDatasetRequest
     */
    public function setDatasetId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <dataset> has a value
     *
     * @return boolean
     */
    public function hasDataset(){
      return $this->_has(2);
    }
    
    /**
     * Clear <dataset> value
     *
     * @return \google\genomics\v1\UpdateDatasetRequest
     */
    public function clearDataset(){
      return $this->_clear(2);
    }
    
    /**
     * Get <dataset> value
     *
     * @return \google\genomics\v1\Dataset
     */
    public function getDataset(){
      return $this->_get(2);
    }
    
    /**
     * Set <dataset> value
     *
     * @param \google\genomics\v1\Dataset $value
     * @return \google\genomics\v1\UpdateDatasetRequest
     */
    public function setDataset(\google\genomics\v1\Dataset $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <update_mask> has a value
     *
     * @return boolean
     */
    public function hasUpdateMask(){
      return $this->_has(3);
    }
    
    /**
     * Clear <update_mask> value
     *
     * @return \google\genomics\v1\UpdateDatasetRequest
     */
    public function clearUpdateMask(){
      return $this->_clear(3);
    }
    
    /**
     * Get <update_mask> value
     *
     * @return \google\protobuf\FieldMask
     */
    public function getUpdateMask(){
      return $this->_get(3);
    }
    
    /**
     * Set <update_mask> value
     *
     * @param \google\protobuf\FieldMask $value
     * @return \google\genomics\v1\UpdateDatasetRequest
     */
    public function setUpdateMask(\google\protobuf\FieldMask $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\genomics\v1 {

  class DeleteDatasetRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $dataset_id = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1.DeleteDatasetRequest');

      // OPTIONAL STRING dataset_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "dataset_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <dataset_id> has a value
     *
     * @return boolean
     */
    public function hasDatasetId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <dataset_id> value
     *
     * @return \google\genomics\v1\DeleteDatasetRequest
     */
    public function clearDatasetId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <dataset_id> value
     *
     * @return string
     */
    public function getDatasetId(){
      return $this->_get(1);
    }
    
    /**
     * Set <dataset_id> value
     *
     * @param string $value
     * @return \google\genomics\v1\DeleteDatasetRequest
     */
    public function setDatasetId( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\genomics\v1 {

  class UndeleteDatasetRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $dataset_id = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1.UndeleteDatasetRequest');

      // OPTIONAL STRING dataset_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "dataset_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <dataset_id> has a value
     *
     * @return boolean
     */
    public function hasDatasetId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <dataset_id> value
     *
     * @return \google\genomics\v1\UndeleteDatasetRequest
     */
    public function clearDatasetId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <dataset_id> value
     *
     * @return string
     */
    public function getDatasetId(){
      return $this->_get(1);
    }
    
    /**
     * Set <dataset_id> value
     *
     * @param string $value
     * @return \google\genomics\v1\UndeleteDatasetRequest
     */
    public function setDatasetId( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\genomics\v1 {

  class GetDatasetRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $dataset_id = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1.GetDatasetRequest');

      // OPTIONAL STRING dataset_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "dataset_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <dataset_id> has a value
     *
     * @return boolean
     */
    public function hasDatasetId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <dataset_id> value
     *
     * @return \google\genomics\v1\GetDatasetRequest
     */
    public function clearDatasetId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <dataset_id> value
     *
     * @return string
     */
    public function getDatasetId(){
      return $this->_get(1);
    }
    
    /**
     * Set <dataset_id> value
     *
     * @param string $value
     * @return \google\genomics\v1\GetDatasetRequest
     */
    public function setDatasetId( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\genomics\v1 {

  class DatasetServiceV1Client extends \Grpc\BaseStub {

    public function __construct($hostname, $opts, $channel = null) {
      parent::__construct($hostname, $opts, $channel);
    }
    /**
     * @param google\genomics\v1\ListDatasetsRequest $input
     */
    public function ListDatasets(\google\genomics\v1\ListDatasetsRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.genomics.v1.DatasetServiceV1/ListDatasets', $argument, '\google\genomics\v1\ListDatasetsResponse::deserialize', $metadata, $options);
    }
    /**
     * @param google\genomics\v1\CreateDatasetRequest $input
     */
    public function CreateDataset(\google\genomics\v1\CreateDatasetRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.genomics.v1.DatasetServiceV1/CreateDataset', $argument, '\google\genomics\v1\Dataset::deserialize', $metadata, $options);
    }
    /**
     * @param google\genomics\v1\GetDatasetRequest $input
     */
    public function GetDataset(\google\genomics\v1\GetDatasetRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.genomics.v1.DatasetServiceV1/GetDataset', $argument, '\google\genomics\v1\Dataset::deserialize', $metadata, $options);
    }
    /**
     * @param google\genomics\v1\UpdateDatasetRequest $input
     */
    public function UpdateDataset(\google\genomics\v1\UpdateDatasetRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.genomics.v1.DatasetServiceV1/UpdateDataset', $argument, '\google\genomics\v1\Dataset::deserialize', $metadata, $options);
    }
    /**
     * @param google\genomics\v1\DeleteDatasetRequest $input
     */
    public function DeleteDataset(\google\genomics\v1\DeleteDatasetRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.genomics.v1.DatasetServiceV1/DeleteDataset', $argument, '\google\protobuf\Empty::deserialize', $metadata, $options);
    }
    /**
     * @param google\genomics\v1\UndeleteDatasetRequest $input
     */
    public function UndeleteDataset(\google\genomics\v1\UndeleteDatasetRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.genomics.v1.DatasetServiceV1/UndeleteDataset', $argument, '\google\genomics\v1\Dataset::deserialize', $metadata, $options);
    }
    /**
     * @param google\iam\v1\SetIamPolicyRequest $input
     */
    public function SetIamPolicy(\google\iam\v1\SetIamPolicyRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.genomics.v1.DatasetServiceV1/SetIamPolicy', $argument, '\google\iam\v1\Policy::deserialize', $metadata, $options);
    }
    /**
     * @param google\iam\v1\GetIamPolicyRequest $input
     */
    public function GetIamPolicy(\google\iam\v1\GetIamPolicyRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.genomics.v1.DatasetServiceV1/GetIamPolicy', $argument, '\google\iam\v1\Policy::deserialize', $metadata, $options);
    }
    /**
     * @param google\iam\v1\TestIamPermissionsRequest $input
     */
    public function TestIamPermissions(\google\iam\v1\TestIamPermissionsRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.genomics.v1.DatasetServiceV1/TestIamPermissions', $argument, '\google\iam\v1\TestIamPermissionsResponse::deserialize', $metadata, $options);
    }
  }
}
