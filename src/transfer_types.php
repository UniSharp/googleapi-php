<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: google/storagetransfer/v1/transfer_types.proto
//   Date: 2017-06-13 04:26:44

namespace google\storagetransfer\v1 {

  class GoogleServiceAccount extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $account_email = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.storagetransfer.v1.GoogleServiceAccount');

      // OPTIONAL STRING account_email = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "account_email";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <account_email> has a value
     *
     * @return boolean
     */
    public function hasAccountEmail(){
      return $this->_has(1);
    }
    
    /**
     * Clear <account_email> value
     *
     * @return \google\storagetransfer\v1\GoogleServiceAccount
     */
    public function clearAccountEmail(){
      return $this->_clear(1);
    }
    
    /**
     * Get <account_email> value
     *
     * @return string
     */
    public function getAccountEmail(){
      return $this->_get(1);
    }
    
    /**
     * Set <account_email> value
     *
     * @param string $value
     * @return \google\storagetransfer\v1\GoogleServiceAccount
     */
    public function setAccountEmail( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\storagetransfer\v1 {

  class AwsAccessKey extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $access_key_id = null;
    
    /**  @var string */
    public $secret_access_key = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.storagetransfer.v1.AwsAccessKey');

      // OPTIONAL STRING access_key_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "access_key_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING secret_access_key = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "secret_access_key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <access_key_id> has a value
     *
     * @return boolean
     */
    public function hasAccessKeyId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <access_key_id> value
     *
     * @return \google\storagetransfer\v1\AwsAccessKey
     */
    public function clearAccessKeyId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <access_key_id> value
     *
     * @return string
     */
    public function getAccessKeyId(){
      return $this->_get(1);
    }
    
    /**
     * Set <access_key_id> value
     *
     * @param string $value
     * @return \google\storagetransfer\v1\AwsAccessKey
     */
    public function setAccessKeyId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <secret_access_key> has a value
     *
     * @return boolean
     */
    public function hasSecretAccessKey(){
      return $this->_has(2);
    }
    
    /**
     * Clear <secret_access_key> value
     *
     * @return \google\storagetransfer\v1\AwsAccessKey
     */
    public function clearSecretAccessKey(){
      return $this->_clear(2);
    }
    
    /**
     * Get <secret_access_key> value
     *
     * @return string
     */
    public function getSecretAccessKey(){
      return $this->_get(2);
    }
    
    /**
     * Set <secret_access_key> value
     *
     * @param string $value
     * @return \google\storagetransfer\v1\AwsAccessKey
     */
    public function setSecretAccessKey( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\storagetransfer\v1 {

  class ObjectConditions extends \DrSlump\Protobuf\Message {

    /**  @var \google\protobuf\Duration */
    public $min_time_elapsed_since_last_modification = null;
    
    /**  @var \google\protobuf\Duration */
    public $max_time_elapsed_since_last_modification = null;
    
    /**  @var string[]  */
    public $include_prefixes = array();
    
    /**  @var string[]  */
    public $exclude_prefixes = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.storagetransfer.v1.ObjectConditions');

      // OPTIONAL MESSAGE min_time_elapsed_since_last_modification = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "min_time_elapsed_since_last_modification";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Duration';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE max_time_elapsed_since_last_modification = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "max_time_elapsed_since_last_modification";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Duration';
      $descriptor->addField($f);

      // REPEATED STRING include_prefixes = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "include_prefixes";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // REPEATED STRING exclude_prefixes = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "exclude_prefixes";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <min_time_elapsed_since_last_modification> has a value
     *
     * @return boolean
     */
    public function hasMinTimeElapsedSinceLastModification(){
      return $this->_has(1);
    }
    
    /**
     * Clear <min_time_elapsed_since_last_modification> value
     *
     * @return \google\storagetransfer\v1\ObjectConditions
     */
    public function clearMinTimeElapsedSinceLastModification(){
      return $this->_clear(1);
    }
    
    /**
     * Get <min_time_elapsed_since_last_modification> value
     *
     * @return \google\protobuf\Duration
     */
    public function getMinTimeElapsedSinceLastModification(){
      return $this->_get(1);
    }
    
    /**
     * Set <min_time_elapsed_since_last_modification> value
     *
     * @param \google\protobuf\Duration $value
     * @return \google\storagetransfer\v1\ObjectConditions
     */
    public function setMinTimeElapsedSinceLastModification(\google\protobuf\Duration $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <max_time_elapsed_since_last_modification> has a value
     *
     * @return boolean
     */
    public function hasMaxTimeElapsedSinceLastModification(){
      return $this->_has(2);
    }
    
    /**
     * Clear <max_time_elapsed_since_last_modification> value
     *
     * @return \google\storagetransfer\v1\ObjectConditions
     */
    public function clearMaxTimeElapsedSinceLastModification(){
      return $this->_clear(2);
    }
    
    /**
     * Get <max_time_elapsed_since_last_modification> value
     *
     * @return \google\protobuf\Duration
     */
    public function getMaxTimeElapsedSinceLastModification(){
      return $this->_get(2);
    }
    
    /**
     * Set <max_time_elapsed_since_last_modification> value
     *
     * @param \google\protobuf\Duration $value
     * @return \google\storagetransfer\v1\ObjectConditions
     */
    public function setMaxTimeElapsedSinceLastModification(\google\protobuf\Duration $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <include_prefixes> has a value
     *
     * @return boolean
     */
    public function hasIncludePrefixes(){
      return $this->_has(3);
    }
    
    /**
     * Clear <include_prefixes> value
     *
     * @return \google\storagetransfer\v1\ObjectConditions
     */
    public function clearIncludePrefixes(){
      return $this->_clear(3);
    }
    
    /**
     * Get <include_prefixes> value
     *
     * @param int $idx
     * @return string
     */
    public function getIncludePrefixes($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <include_prefixes> value
     *
     * @param string $value
     * @return \google\storagetransfer\v1\ObjectConditions
     */
    public function setIncludePrefixes( $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <include_prefixes>
     *
     * @return string[]
     */
    public function getIncludePrefixesList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <include_prefixes>
     *
     * @param string $value
     * @return \google\storagetransfer\v1\ObjectConditions
     */
    public function addIncludePrefixes( $value){
     return $this->_add(3, $value);
    }
    
    /**
     * Check if <exclude_prefixes> has a value
     *
     * @return boolean
     */
    public function hasExcludePrefixes(){
      return $this->_has(4);
    }
    
    /**
     * Clear <exclude_prefixes> value
     *
     * @return \google\storagetransfer\v1\ObjectConditions
     */
    public function clearExcludePrefixes(){
      return $this->_clear(4);
    }
    
    /**
     * Get <exclude_prefixes> value
     *
     * @param int $idx
     * @return string
     */
    public function getExcludePrefixes($idx = NULL){
      return $this->_get(4, $idx);
    }
    
    /**
     * Set <exclude_prefixes> value
     *
     * @param string $value
     * @return \google\storagetransfer\v1\ObjectConditions
     */
    public function setExcludePrefixes( $value, $idx = NULL){
      return $this->_set(4, $value, $idx);
    }
    
    /**
     * Get all elements of <exclude_prefixes>
     *
     * @return string[]
     */
    public function getExcludePrefixesList(){
     return $this->_get(4);
    }
    
    /**
     * Add a new element to <exclude_prefixes>
     *
     * @param string $value
     * @return \google\storagetransfer\v1\ObjectConditions
     */
    public function addExcludePrefixes( $value){
     return $this->_add(4, $value);
    }
  }
}

namespace google\storagetransfer\v1 {

  class GcsData extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $bucket_name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.storagetransfer.v1.GcsData');

      // OPTIONAL STRING bucket_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "bucket_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <bucket_name> has a value
     *
     * @return boolean
     */
    public function hasBucketName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <bucket_name> value
     *
     * @return \google\storagetransfer\v1\GcsData
     */
    public function clearBucketName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <bucket_name> value
     *
     * @return string
     */
    public function getBucketName(){
      return $this->_get(1);
    }
    
    /**
     * Set <bucket_name> value
     *
     * @param string $value
     * @return \google\storagetransfer\v1\GcsData
     */
    public function setBucketName( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\storagetransfer\v1 {

  class AwsS3Data extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $bucket_name = null;
    
    /**  @var \google\storagetransfer\v1\AwsAccessKey */
    public $aws_access_key = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.storagetransfer.v1.AwsS3Data');

      // OPTIONAL STRING bucket_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "bucket_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE aws_access_key = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "aws_access_key";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\storagetransfer\v1\AwsAccessKey';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <bucket_name> has a value
     *
     * @return boolean
     */
    public function hasBucketName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <bucket_name> value
     *
     * @return \google\storagetransfer\v1\AwsS3Data
     */
    public function clearBucketName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <bucket_name> value
     *
     * @return string
     */
    public function getBucketName(){
      return $this->_get(1);
    }
    
    /**
     * Set <bucket_name> value
     *
     * @param string $value
     * @return \google\storagetransfer\v1\AwsS3Data
     */
    public function setBucketName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <aws_access_key> has a value
     *
     * @return boolean
     */
    public function hasAwsAccessKey(){
      return $this->_has(2);
    }
    
    /**
     * Clear <aws_access_key> value
     *
     * @return \google\storagetransfer\v1\AwsS3Data
     */
    public function clearAwsAccessKey(){
      return $this->_clear(2);
    }
    
    /**
     * Get <aws_access_key> value
     *
     * @return \google\storagetransfer\v1\AwsAccessKey
     */
    public function getAwsAccessKey(){
      return $this->_get(2);
    }
    
    /**
     * Set <aws_access_key> value
     *
     * @param \google\storagetransfer\v1\AwsAccessKey $value
     * @return \google\storagetransfer\v1\AwsS3Data
     */
    public function setAwsAccessKey(\google\storagetransfer\v1\AwsAccessKey $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\storagetransfer\v1 {

  class HttpData extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $list_url = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.storagetransfer.v1.HttpData');

      // OPTIONAL STRING list_url = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "list_url";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <list_url> has a value
     *
     * @return boolean
     */
    public function hasListUrl(){
      return $this->_has(1);
    }
    
    /**
     * Clear <list_url> value
     *
     * @return \google\storagetransfer\v1\HttpData
     */
    public function clearListUrl(){
      return $this->_clear(1);
    }
    
    /**
     * Get <list_url> value
     *
     * @return string
     */
    public function getListUrl(){
      return $this->_get(1);
    }
    
    /**
     * Set <list_url> value
     *
     * @param string $value
     * @return \google\storagetransfer\v1\HttpData
     */
    public function setListUrl( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\storagetransfer\v1 {

  class TransferOptions extends \DrSlump\Protobuf\Message {

    /**  @var boolean */
    public $overwrite_objects_already_existing_in_sink = null;
    
    /**  @var boolean */
    public $delete_objects_unique_in_sink = null;
    
    /**  @var boolean */
    public $delete_objects_from_source_after_transfer = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.storagetransfer.v1.TransferOptions');

      // OPTIONAL BOOL overwrite_objects_already_existing_in_sink = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "overwrite_objects_already_existing_in_sink";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL delete_objects_unique_in_sink = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "delete_objects_unique_in_sink";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL delete_objects_from_source_after_transfer = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "delete_objects_from_source_after_transfer";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <overwrite_objects_already_existing_in_sink> has a value
     *
     * @return boolean
     */
    public function hasOverwriteObjectsAlreadyExistingInSink(){
      return $this->_has(1);
    }
    
    /**
     * Clear <overwrite_objects_already_existing_in_sink> value
     *
     * @return \google\storagetransfer\v1\TransferOptions
     */
    public function clearOverwriteObjectsAlreadyExistingInSink(){
      return $this->_clear(1);
    }
    
    /**
     * Get <overwrite_objects_already_existing_in_sink> value
     *
     * @return boolean
     */
    public function getOverwriteObjectsAlreadyExistingInSink(){
      return $this->_get(1);
    }
    
    /**
     * Set <overwrite_objects_already_existing_in_sink> value
     *
     * @param boolean $value
     * @return \google\storagetransfer\v1\TransferOptions
     */
    public function setOverwriteObjectsAlreadyExistingInSink( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <delete_objects_unique_in_sink> has a value
     *
     * @return boolean
     */
    public function hasDeleteObjectsUniqueInSink(){
      return $this->_has(2);
    }
    
    /**
     * Clear <delete_objects_unique_in_sink> value
     *
     * @return \google\storagetransfer\v1\TransferOptions
     */
    public function clearDeleteObjectsUniqueInSink(){
      return $this->_clear(2);
    }
    
    /**
     * Get <delete_objects_unique_in_sink> value
     *
     * @return boolean
     */
    public function getDeleteObjectsUniqueInSink(){
      return $this->_get(2);
    }
    
    /**
     * Set <delete_objects_unique_in_sink> value
     *
     * @param boolean $value
     * @return \google\storagetransfer\v1\TransferOptions
     */
    public function setDeleteObjectsUniqueInSink( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <delete_objects_from_source_after_transfer> has a value
     *
     * @return boolean
     */
    public function hasDeleteObjectsFromSourceAfterTransfer(){
      return $this->_has(3);
    }
    
    /**
     * Clear <delete_objects_from_source_after_transfer> value
     *
     * @return \google\storagetransfer\v1\TransferOptions
     */
    public function clearDeleteObjectsFromSourceAfterTransfer(){
      return $this->_clear(3);
    }
    
    /**
     * Get <delete_objects_from_source_after_transfer> value
     *
     * @return boolean
     */
    public function getDeleteObjectsFromSourceAfterTransfer(){
      return $this->_get(3);
    }
    
    /**
     * Set <delete_objects_from_source_after_transfer> value
     *
     * @param boolean $value
     * @return \google\storagetransfer\v1\TransferOptions
     */
    public function setDeleteObjectsFromSourceAfterTransfer( $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\storagetransfer\v1 {

  class TransferSpec extends \DrSlump\Protobuf\Message {

    /**  @var \google\storagetransfer\v1\GcsData */
    public $gcs_data_source = null;
    
    /**  @var \google\storagetransfer\v1\AwsS3Data */
    public $aws_s3_data_source = null;
    
    /**  @var \google\storagetransfer\v1\HttpData */
    public $http_data_source = null;
    
    /**  @var \google\storagetransfer\v1\GcsData */
    public $gcs_data_sink = null;
    
    /**  @var \google\storagetransfer\v1\ObjectConditions */
    public $object_conditions = null;
    
    /**  @var \google\storagetransfer\v1\TransferOptions */
    public $transfer_options = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.storagetransfer.v1.TransferSpec');

      // OPTIONAL MESSAGE gcs_data_source = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "gcs_data_source";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\storagetransfer\v1\GcsData';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE aws_s3_data_source = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "aws_s3_data_source";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\storagetransfer\v1\AwsS3Data';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE http_data_source = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "http_data_source";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\storagetransfer\v1\HttpData';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE gcs_data_sink = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "gcs_data_sink";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\storagetransfer\v1\GcsData';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE object_conditions = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "object_conditions";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\storagetransfer\v1\ObjectConditions';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE transfer_options = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "transfer_options";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\storagetransfer\v1\TransferOptions';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <gcs_data_source> has a value
     *
     * @return boolean
     */
    public function hasGcsDataSource(){
      return $this->_has(1);
    }
    
    /**
     * Clear <gcs_data_source> value
     *
     * @return \google\storagetransfer\v1\TransferSpec
     */
    public function clearGcsDataSource(){
      return $this->_clear(1);
    }
    
    /**
     * Get <gcs_data_source> value
     *
     * @return \google\storagetransfer\v1\GcsData
     */
    public function getGcsDataSource(){
      return $this->_get(1);
    }
    
    /**
     * Set <gcs_data_source> value
     *
     * @param \google\storagetransfer\v1\GcsData $value
     * @return \google\storagetransfer\v1\TransferSpec
     */
    public function setGcsDataSource(\google\storagetransfer\v1\GcsData $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <aws_s3_data_source> has a value
     *
     * @return boolean
     */
    public function hasAwsS3DataSource(){
      return $this->_has(2);
    }
    
    /**
     * Clear <aws_s3_data_source> value
     *
     * @return \google\storagetransfer\v1\TransferSpec
     */
    public function clearAwsS3DataSource(){
      return $this->_clear(2);
    }
    
    /**
     * Get <aws_s3_data_source> value
     *
     * @return \google\storagetransfer\v1\AwsS3Data
     */
    public function getAwsS3DataSource(){
      return $this->_get(2);
    }
    
    /**
     * Set <aws_s3_data_source> value
     *
     * @param \google\storagetransfer\v1\AwsS3Data $value
     * @return \google\storagetransfer\v1\TransferSpec
     */
    public function setAwsS3DataSource(\google\storagetransfer\v1\AwsS3Data $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <http_data_source> has a value
     *
     * @return boolean
     */
    public function hasHttpDataSource(){
      return $this->_has(3);
    }
    
    /**
     * Clear <http_data_source> value
     *
     * @return \google\storagetransfer\v1\TransferSpec
     */
    public function clearHttpDataSource(){
      return $this->_clear(3);
    }
    
    /**
     * Get <http_data_source> value
     *
     * @return \google\storagetransfer\v1\HttpData
     */
    public function getHttpDataSource(){
      return $this->_get(3);
    }
    
    /**
     * Set <http_data_source> value
     *
     * @param \google\storagetransfer\v1\HttpData $value
     * @return \google\storagetransfer\v1\TransferSpec
     */
    public function setHttpDataSource(\google\storagetransfer\v1\HttpData $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <gcs_data_sink> has a value
     *
     * @return boolean
     */
    public function hasGcsDataSink(){
      return $this->_has(4);
    }
    
    /**
     * Clear <gcs_data_sink> value
     *
     * @return \google\storagetransfer\v1\TransferSpec
     */
    public function clearGcsDataSink(){
      return $this->_clear(4);
    }
    
    /**
     * Get <gcs_data_sink> value
     *
     * @return \google\storagetransfer\v1\GcsData
     */
    public function getGcsDataSink(){
      return $this->_get(4);
    }
    
    /**
     * Set <gcs_data_sink> value
     *
     * @param \google\storagetransfer\v1\GcsData $value
     * @return \google\storagetransfer\v1\TransferSpec
     */
    public function setGcsDataSink(\google\storagetransfer\v1\GcsData $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <object_conditions> has a value
     *
     * @return boolean
     */
    public function hasObjectConditions(){
      return $this->_has(5);
    }
    
    /**
     * Clear <object_conditions> value
     *
     * @return \google\storagetransfer\v1\TransferSpec
     */
    public function clearObjectConditions(){
      return $this->_clear(5);
    }
    
    /**
     * Get <object_conditions> value
     *
     * @return \google\storagetransfer\v1\ObjectConditions
     */
    public function getObjectConditions(){
      return $this->_get(5);
    }
    
    /**
     * Set <object_conditions> value
     *
     * @param \google\storagetransfer\v1\ObjectConditions $value
     * @return \google\storagetransfer\v1\TransferSpec
     */
    public function setObjectConditions(\google\storagetransfer\v1\ObjectConditions $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <transfer_options> has a value
     *
     * @return boolean
     */
    public function hasTransferOptions(){
      return $this->_has(6);
    }
    
    /**
     * Clear <transfer_options> value
     *
     * @return \google\storagetransfer\v1\TransferSpec
     */
    public function clearTransferOptions(){
      return $this->_clear(6);
    }
    
    /**
     * Get <transfer_options> value
     *
     * @return \google\storagetransfer\v1\TransferOptions
     */
    public function getTransferOptions(){
      return $this->_get(6);
    }
    
    /**
     * Set <transfer_options> value
     *
     * @param \google\storagetransfer\v1\TransferOptions $value
     * @return \google\storagetransfer\v1\TransferSpec
     */
    public function setTransferOptions(\google\storagetransfer\v1\TransferOptions $value){
      return $this->_set(6, $value);
    }
  }
}

namespace google\storagetransfer\v1 {

  class Schedule extends \DrSlump\Protobuf\Message {

    /**  @var \google\type\Date */
    public $schedule_start_date = null;
    
    /**  @var \google\type\Date */
    public $schedule_end_date = null;
    
    /**  @var \google\type\TimeOfDay */
    public $start_time_of_day = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.storagetransfer.v1.Schedule');

      // OPTIONAL MESSAGE schedule_start_date = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "schedule_start_date";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\type\Date';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE schedule_end_date = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "schedule_end_date";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\type\Date';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE start_time_of_day = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "start_time_of_day";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\type\TimeOfDay';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <schedule_start_date> has a value
     *
     * @return boolean
     */
    public function hasScheduleStartDate(){
      return $this->_has(1);
    }
    
    /**
     * Clear <schedule_start_date> value
     *
     * @return \google\storagetransfer\v1\Schedule
     */
    public function clearScheduleStartDate(){
      return $this->_clear(1);
    }
    
    /**
     * Get <schedule_start_date> value
     *
     * @return \google\type\Date
     */
    public function getScheduleStartDate(){
      return $this->_get(1);
    }
    
    /**
     * Set <schedule_start_date> value
     *
     * @param \google\type\Date $value
     * @return \google\storagetransfer\v1\Schedule
     */
    public function setScheduleStartDate(\google\type\Date $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <schedule_end_date> has a value
     *
     * @return boolean
     */
    public function hasScheduleEndDate(){
      return $this->_has(2);
    }
    
    /**
     * Clear <schedule_end_date> value
     *
     * @return \google\storagetransfer\v1\Schedule
     */
    public function clearScheduleEndDate(){
      return $this->_clear(2);
    }
    
    /**
     * Get <schedule_end_date> value
     *
     * @return \google\type\Date
     */
    public function getScheduleEndDate(){
      return $this->_get(2);
    }
    
    /**
     * Set <schedule_end_date> value
     *
     * @param \google\type\Date $value
     * @return \google\storagetransfer\v1\Schedule
     */
    public function setScheduleEndDate(\google\type\Date $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <start_time_of_day> has a value
     *
     * @return boolean
     */
    public function hasStartTimeOfDay(){
      return $this->_has(3);
    }
    
    /**
     * Clear <start_time_of_day> value
     *
     * @return \google\storagetransfer\v1\Schedule
     */
    public function clearStartTimeOfDay(){
      return $this->_clear(3);
    }
    
    /**
     * Get <start_time_of_day> value
     *
     * @return \google\type\TimeOfDay
     */
    public function getStartTimeOfDay(){
      return $this->_get(3);
    }
    
    /**
     * Set <start_time_of_day> value
     *
     * @param \google\type\TimeOfDay $value
     * @return \google\storagetransfer\v1\Schedule
     */
    public function setStartTimeOfDay(\google\type\TimeOfDay $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\storagetransfer\v1\TransferJob {

  class Status extends \DrSlump\Protobuf\Enum {
    const STATUS_UNSPECIFIED = 0;
    const ENABLED = 1;
    const DISABLED = 2;
    const DELETED = 3;
  }
}
namespace google\storagetransfer\v1 {

  class TransferJob extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var string */
    public $description = null;
    
    /**  @var string */
    public $project_id = null;
    
    /**  @var \google\storagetransfer\v1\TransferSpec */
    public $transfer_spec = null;
    
    /**  @var \google\storagetransfer\v1\Schedule */
    public $schedule = null;
    
    /**  @var int - \google\storagetransfer\v1\TransferJob\Status */
    public $status = null;
    
    /**  @var \google\protobuf\Timestamp */
    public $creation_time = null;
    
    /**  @var \google\protobuf\Timestamp */
    public $last_modification_time = null;
    
    /**  @var \google\protobuf\Timestamp */
    public $deletion_time = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.storagetransfer.v1.TransferJob');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING description = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "description";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING project_id = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "project_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE transfer_spec = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "transfer_spec";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\storagetransfer\v1\TransferSpec';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE schedule = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "schedule";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\storagetransfer\v1\Schedule';
      $descriptor->addField($f);

      // OPTIONAL ENUM status = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "status";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\storagetransfer\v1\TransferJob\Status';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE creation_time = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "creation_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Timestamp';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE last_modification_time = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "last_modification_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Timestamp';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE deletion_time = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "deletion_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Timestamp';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\storagetransfer\v1\TransferJob
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\storagetransfer\v1\TransferJob
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <description> has a value
     *
     * @return boolean
     */
    public function hasDescription(){
      return $this->_has(2);
    }
    
    /**
     * Clear <description> value
     *
     * @return \google\storagetransfer\v1\TransferJob
     */
    public function clearDescription(){
      return $this->_clear(2);
    }
    
    /**
     * Get <description> value
     *
     * @return string
     */
    public function getDescription(){
      return $this->_get(2);
    }
    
    /**
     * Set <description> value
     *
     * @param string $value
     * @return \google\storagetransfer\v1\TransferJob
     */
    public function setDescription( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <project_id> has a value
     *
     * @return boolean
     */
    public function hasProjectId(){
      return $this->_has(3);
    }
    
    /**
     * Clear <project_id> value
     *
     * @return \google\storagetransfer\v1\TransferJob
     */
    public function clearProjectId(){
      return $this->_clear(3);
    }
    
    /**
     * Get <project_id> value
     *
     * @return string
     */
    public function getProjectId(){
      return $this->_get(3);
    }
    
    /**
     * Set <project_id> value
     *
     * @param string $value
     * @return \google\storagetransfer\v1\TransferJob
     */
    public function setProjectId( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <transfer_spec> has a value
     *
     * @return boolean
     */
    public function hasTransferSpec(){
      return $this->_has(4);
    }
    
    /**
     * Clear <transfer_spec> value
     *
     * @return \google\storagetransfer\v1\TransferJob
     */
    public function clearTransferSpec(){
      return $this->_clear(4);
    }
    
    /**
     * Get <transfer_spec> value
     *
     * @return \google\storagetransfer\v1\TransferSpec
     */
    public function getTransferSpec(){
      return $this->_get(4);
    }
    
    /**
     * Set <transfer_spec> value
     *
     * @param \google\storagetransfer\v1\TransferSpec $value
     * @return \google\storagetransfer\v1\TransferJob
     */
    public function setTransferSpec(\google\storagetransfer\v1\TransferSpec $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <schedule> has a value
     *
     * @return boolean
     */
    public function hasSchedule(){
      return $this->_has(5);
    }
    
    /**
     * Clear <schedule> value
     *
     * @return \google\storagetransfer\v1\TransferJob
     */
    public function clearSchedule(){
      return $this->_clear(5);
    }
    
    /**
     * Get <schedule> value
     *
     * @return \google\storagetransfer\v1\Schedule
     */
    public function getSchedule(){
      return $this->_get(5);
    }
    
    /**
     * Set <schedule> value
     *
     * @param \google\storagetransfer\v1\Schedule $value
     * @return \google\storagetransfer\v1\TransferJob
     */
    public function setSchedule(\google\storagetransfer\v1\Schedule $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <status> has a value
     *
     * @return boolean
     */
    public function hasStatus(){
      return $this->_has(6);
    }
    
    /**
     * Clear <status> value
     *
     * @return \google\storagetransfer\v1\TransferJob
     */
    public function clearStatus(){
      return $this->_clear(6);
    }
    
    /**
     * Get <status> value
     *
     * @return int - \google\storagetransfer\v1\TransferJob\Status
     */
    public function getStatus(){
      return $this->_get(6);
    }
    
    /**
     * Set <status> value
     *
     * @param int - \google\storagetransfer\v1\TransferJob\Status $value
     * @return \google\storagetransfer\v1\TransferJob
     */
    public function setStatus( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <creation_time> has a value
     *
     * @return boolean
     */
    public function hasCreationTime(){
      return $this->_has(7);
    }
    
    /**
     * Clear <creation_time> value
     *
     * @return \google\storagetransfer\v1\TransferJob
     */
    public function clearCreationTime(){
      return $this->_clear(7);
    }
    
    /**
     * Get <creation_time> value
     *
     * @return \google\protobuf\Timestamp
     */
    public function getCreationTime(){
      return $this->_get(7);
    }
    
    /**
     * Set <creation_time> value
     *
     * @param \google\protobuf\Timestamp $value
     * @return \google\storagetransfer\v1\TransferJob
     */
    public function setCreationTime(\google\protobuf\Timestamp $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <last_modification_time> has a value
     *
     * @return boolean
     */
    public function hasLastModificationTime(){
      return $this->_has(8);
    }
    
    /**
     * Clear <last_modification_time> value
     *
     * @return \google\storagetransfer\v1\TransferJob
     */
    public function clearLastModificationTime(){
      return $this->_clear(8);
    }
    
    /**
     * Get <last_modification_time> value
     *
     * @return \google\protobuf\Timestamp
     */
    public function getLastModificationTime(){
      return $this->_get(8);
    }
    
    /**
     * Set <last_modification_time> value
     *
     * @param \google\protobuf\Timestamp $value
     * @return \google\storagetransfer\v1\TransferJob
     */
    public function setLastModificationTime(\google\protobuf\Timestamp $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <deletion_time> has a value
     *
     * @return boolean
     */
    public function hasDeletionTime(){
      return $this->_has(9);
    }
    
    /**
     * Clear <deletion_time> value
     *
     * @return \google\storagetransfer\v1\TransferJob
     */
    public function clearDeletionTime(){
      return $this->_clear(9);
    }
    
    /**
     * Get <deletion_time> value
     *
     * @return \google\protobuf\Timestamp
     */
    public function getDeletionTime(){
      return $this->_get(9);
    }
    
    /**
     * Set <deletion_time> value
     *
     * @param \google\protobuf\Timestamp $value
     * @return \google\storagetransfer\v1\TransferJob
     */
    public function setDeletionTime(\google\protobuf\Timestamp $value){
      return $this->_set(9, $value);
    }
  }
}

namespace google\storagetransfer\v1 {

  class ErrorLogEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $url = null;
    
    /**  @var string[]  */
    public $error_details = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.storagetransfer.v1.ErrorLogEntry');

      // OPTIONAL STRING url = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "url";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED STRING error_details = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "error_details";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <url> has a value
     *
     * @return boolean
     */
    public function hasUrl(){
      return $this->_has(1);
    }
    
    /**
     * Clear <url> value
     *
     * @return \google\storagetransfer\v1\ErrorLogEntry
     */
    public function clearUrl(){
      return $this->_clear(1);
    }
    
    /**
     * Get <url> value
     *
     * @return string
     */
    public function getUrl(){
      return $this->_get(1);
    }
    
    /**
     * Set <url> value
     *
     * @param string $value
     * @return \google\storagetransfer\v1\ErrorLogEntry
     */
    public function setUrl( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <error_details> has a value
     *
     * @return boolean
     */
    public function hasErrorDetails(){
      return $this->_has(3);
    }
    
    /**
     * Clear <error_details> value
     *
     * @return \google\storagetransfer\v1\ErrorLogEntry
     */
    public function clearErrorDetails(){
      return $this->_clear(3);
    }
    
    /**
     * Get <error_details> value
     *
     * @param int $idx
     * @return string
     */
    public function getErrorDetails($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <error_details> value
     *
     * @param string $value
     * @return \google\storagetransfer\v1\ErrorLogEntry
     */
    public function setErrorDetails( $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <error_details>
     *
     * @return string[]
     */
    public function getErrorDetailsList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <error_details>
     *
     * @param string $value
     * @return \google\storagetransfer\v1\ErrorLogEntry
     */
    public function addErrorDetails( $value){
     return $this->_add(3, $value);
    }
  }
}

namespace google\storagetransfer\v1 {

  class ErrorSummary extends \DrSlump\Protobuf\Message {

    /**  @var int - \google\rpc\Code */
    public $error_code = null;
    
    /**  @var int */
    public $error_count = null;
    
    /**  @var \google\storagetransfer\v1\ErrorLogEntry[]  */
    public $error_log_entries = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.storagetransfer.v1.ErrorSummary');

      // OPTIONAL ENUM error_code = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "error_code";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\rpc\Code';
      $descriptor->addField($f);

      // OPTIONAL INT64 error_count = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "error_count";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE error_log_entries = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "error_log_entries";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\storagetransfer\v1\ErrorLogEntry';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <error_code> has a value
     *
     * @return boolean
     */
    public function hasErrorCode(){
      return $this->_has(1);
    }
    
    /**
     * Clear <error_code> value
     *
     * @return \google\storagetransfer\v1\ErrorSummary
     */
    public function clearErrorCode(){
      return $this->_clear(1);
    }
    
    /**
     * Get <error_code> value
     *
     * @return int - \google\rpc\Code
     */
    public function getErrorCode(){
      return $this->_get(1);
    }
    
    /**
     * Set <error_code> value
     *
     * @param int - \google\rpc\Code $value
     * @return \google\storagetransfer\v1\ErrorSummary
     */
    public function setErrorCode( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <error_count> has a value
     *
     * @return boolean
     */
    public function hasErrorCount(){
      return $this->_has(2);
    }
    
    /**
     * Clear <error_count> value
     *
     * @return \google\storagetransfer\v1\ErrorSummary
     */
    public function clearErrorCount(){
      return $this->_clear(2);
    }
    
    /**
     * Get <error_count> value
     *
     * @return int
     */
    public function getErrorCount(){
      return $this->_get(2);
    }
    
    /**
     * Set <error_count> value
     *
     * @param int $value
     * @return \google\storagetransfer\v1\ErrorSummary
     */
    public function setErrorCount( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <error_log_entries> has a value
     *
     * @return boolean
     */
    public function hasErrorLogEntries(){
      return $this->_has(3);
    }
    
    /**
     * Clear <error_log_entries> value
     *
     * @return \google\storagetransfer\v1\ErrorSummary
     */
    public function clearErrorLogEntries(){
      return $this->_clear(3);
    }
    
    /**
     * Get <error_log_entries> value
     *
     * @param int $idx
     * @return \google\storagetransfer\v1\ErrorLogEntry
     */
    public function getErrorLogEntries($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <error_log_entries> value
     *
     * @param \google\storagetransfer\v1\ErrorLogEntry $value
     * @return \google\storagetransfer\v1\ErrorSummary
     */
    public function setErrorLogEntries(\google\storagetransfer\v1\ErrorLogEntry $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <error_log_entries>
     *
     * @return \google\storagetransfer\v1\ErrorLogEntry[]
     */
    public function getErrorLogEntriesList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <error_log_entries>
     *
     * @param \google\storagetransfer\v1\ErrorLogEntry $value
     * @return \google\storagetransfer\v1\ErrorSummary
     */
    public function addErrorLogEntries(\google\storagetransfer\v1\ErrorLogEntry $value){
     return $this->_add(3, $value);
    }
  }
}

namespace google\storagetransfer\v1 {

  class TransferCounters extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $objects_found_from_source = null;
    
    /**  @var int */
    public $bytes_found_from_source = null;
    
    /**  @var int */
    public $objects_found_only_from_sink = null;
    
    /**  @var int */
    public $bytes_found_only_from_sink = null;
    
    /**  @var int */
    public $objects_from_source_skipped_by_sync = null;
    
    /**  @var int */
    public $bytes_from_source_skipped_by_sync = null;
    
    /**  @var int */
    public $objects_copied_to_sink = null;
    
    /**  @var int */
    public $bytes_copied_to_sink = null;
    
    /**  @var int */
    public $objects_deleted_from_source = null;
    
    /**  @var int */
    public $bytes_deleted_from_source = null;
    
    /**  @var int */
    public $objects_deleted_from_sink = null;
    
    /**  @var int */
    public $bytes_deleted_from_sink = null;
    
    /**  @var int */
    public $objects_from_source_failed = null;
    
    /**  @var int */
    public $bytes_from_source_failed = null;
    
    /**  @var int */
    public $objects_failed_to_delete_from_sink = null;
    
    /**  @var int */
    public $bytes_failed_to_delete_from_sink = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.storagetransfer.v1.TransferCounters');

      // OPTIONAL INT64 objects_found_from_source = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "objects_found_from_source";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 bytes_found_from_source = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "bytes_found_from_source";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 objects_found_only_from_sink = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "objects_found_only_from_sink";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 bytes_found_only_from_sink = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "bytes_found_only_from_sink";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 objects_from_source_skipped_by_sync = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "objects_from_source_skipped_by_sync";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 bytes_from_source_skipped_by_sync = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "bytes_from_source_skipped_by_sync";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 objects_copied_to_sink = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "objects_copied_to_sink";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 bytes_copied_to_sink = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "bytes_copied_to_sink";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 objects_deleted_from_source = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "objects_deleted_from_source";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 bytes_deleted_from_source = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "bytes_deleted_from_source";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 objects_deleted_from_sink = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "objects_deleted_from_sink";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 bytes_deleted_from_sink = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "bytes_deleted_from_sink";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 objects_from_source_failed = 13
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 13;
      $f->name      = "objects_from_source_failed";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 bytes_from_source_failed = 14
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 14;
      $f->name      = "bytes_from_source_failed";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 objects_failed_to_delete_from_sink = 15
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 15;
      $f->name      = "objects_failed_to_delete_from_sink";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 bytes_failed_to_delete_from_sink = 16
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 16;
      $f->name      = "bytes_failed_to_delete_from_sink";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <objects_found_from_source> has a value
     *
     * @return boolean
     */
    public function hasObjectsFoundFromSource(){
      return $this->_has(1);
    }
    
    /**
     * Clear <objects_found_from_source> value
     *
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function clearObjectsFoundFromSource(){
      return $this->_clear(1);
    }
    
    /**
     * Get <objects_found_from_source> value
     *
     * @return int
     */
    public function getObjectsFoundFromSource(){
      return $this->_get(1);
    }
    
    /**
     * Set <objects_found_from_source> value
     *
     * @param int $value
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function setObjectsFoundFromSource( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <bytes_found_from_source> has a value
     *
     * @return boolean
     */
    public function hasBytesFoundFromSource(){
      return $this->_has(2);
    }
    
    /**
     * Clear <bytes_found_from_source> value
     *
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function clearBytesFoundFromSource(){
      return $this->_clear(2);
    }
    
    /**
     * Get <bytes_found_from_source> value
     *
     * @return int
     */
    public function getBytesFoundFromSource(){
      return $this->_get(2);
    }
    
    /**
     * Set <bytes_found_from_source> value
     *
     * @param int $value
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function setBytesFoundFromSource( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <objects_found_only_from_sink> has a value
     *
     * @return boolean
     */
    public function hasObjectsFoundOnlyFromSink(){
      return $this->_has(3);
    }
    
    /**
     * Clear <objects_found_only_from_sink> value
     *
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function clearObjectsFoundOnlyFromSink(){
      return $this->_clear(3);
    }
    
    /**
     * Get <objects_found_only_from_sink> value
     *
     * @return int
     */
    public function getObjectsFoundOnlyFromSink(){
      return $this->_get(3);
    }
    
    /**
     * Set <objects_found_only_from_sink> value
     *
     * @param int $value
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function setObjectsFoundOnlyFromSink( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <bytes_found_only_from_sink> has a value
     *
     * @return boolean
     */
    public function hasBytesFoundOnlyFromSink(){
      return $this->_has(4);
    }
    
    /**
     * Clear <bytes_found_only_from_sink> value
     *
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function clearBytesFoundOnlyFromSink(){
      return $this->_clear(4);
    }
    
    /**
     * Get <bytes_found_only_from_sink> value
     *
     * @return int
     */
    public function getBytesFoundOnlyFromSink(){
      return $this->_get(4);
    }
    
    /**
     * Set <bytes_found_only_from_sink> value
     *
     * @param int $value
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function setBytesFoundOnlyFromSink( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <objects_from_source_skipped_by_sync> has a value
     *
     * @return boolean
     */
    public function hasObjectsFromSourceSkippedBySync(){
      return $this->_has(5);
    }
    
    /**
     * Clear <objects_from_source_skipped_by_sync> value
     *
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function clearObjectsFromSourceSkippedBySync(){
      return $this->_clear(5);
    }
    
    /**
     * Get <objects_from_source_skipped_by_sync> value
     *
     * @return int
     */
    public function getObjectsFromSourceSkippedBySync(){
      return $this->_get(5);
    }
    
    /**
     * Set <objects_from_source_skipped_by_sync> value
     *
     * @param int $value
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function setObjectsFromSourceSkippedBySync( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <bytes_from_source_skipped_by_sync> has a value
     *
     * @return boolean
     */
    public function hasBytesFromSourceSkippedBySync(){
      return $this->_has(6);
    }
    
    /**
     * Clear <bytes_from_source_skipped_by_sync> value
     *
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function clearBytesFromSourceSkippedBySync(){
      return $this->_clear(6);
    }
    
    /**
     * Get <bytes_from_source_skipped_by_sync> value
     *
     * @return int
     */
    public function getBytesFromSourceSkippedBySync(){
      return $this->_get(6);
    }
    
    /**
     * Set <bytes_from_source_skipped_by_sync> value
     *
     * @param int $value
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function setBytesFromSourceSkippedBySync( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <objects_copied_to_sink> has a value
     *
     * @return boolean
     */
    public function hasObjectsCopiedToSink(){
      return $this->_has(7);
    }
    
    /**
     * Clear <objects_copied_to_sink> value
     *
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function clearObjectsCopiedToSink(){
      return $this->_clear(7);
    }
    
    /**
     * Get <objects_copied_to_sink> value
     *
     * @return int
     */
    public function getObjectsCopiedToSink(){
      return $this->_get(7);
    }
    
    /**
     * Set <objects_copied_to_sink> value
     *
     * @param int $value
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function setObjectsCopiedToSink( $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <bytes_copied_to_sink> has a value
     *
     * @return boolean
     */
    public function hasBytesCopiedToSink(){
      return $this->_has(8);
    }
    
    /**
     * Clear <bytes_copied_to_sink> value
     *
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function clearBytesCopiedToSink(){
      return $this->_clear(8);
    }
    
    /**
     * Get <bytes_copied_to_sink> value
     *
     * @return int
     */
    public function getBytesCopiedToSink(){
      return $this->_get(8);
    }
    
    /**
     * Set <bytes_copied_to_sink> value
     *
     * @param int $value
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function setBytesCopiedToSink( $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <objects_deleted_from_source> has a value
     *
     * @return boolean
     */
    public function hasObjectsDeletedFromSource(){
      return $this->_has(9);
    }
    
    /**
     * Clear <objects_deleted_from_source> value
     *
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function clearObjectsDeletedFromSource(){
      return $this->_clear(9);
    }
    
    /**
     * Get <objects_deleted_from_source> value
     *
     * @return int
     */
    public function getObjectsDeletedFromSource(){
      return $this->_get(9);
    }
    
    /**
     * Set <objects_deleted_from_source> value
     *
     * @param int $value
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function setObjectsDeletedFromSource( $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <bytes_deleted_from_source> has a value
     *
     * @return boolean
     */
    public function hasBytesDeletedFromSource(){
      return $this->_has(10);
    }
    
    /**
     * Clear <bytes_deleted_from_source> value
     *
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function clearBytesDeletedFromSource(){
      return $this->_clear(10);
    }
    
    /**
     * Get <bytes_deleted_from_source> value
     *
     * @return int
     */
    public function getBytesDeletedFromSource(){
      return $this->_get(10);
    }
    
    /**
     * Set <bytes_deleted_from_source> value
     *
     * @param int $value
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function setBytesDeletedFromSource( $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <objects_deleted_from_sink> has a value
     *
     * @return boolean
     */
    public function hasObjectsDeletedFromSink(){
      return $this->_has(11);
    }
    
    /**
     * Clear <objects_deleted_from_sink> value
     *
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function clearObjectsDeletedFromSink(){
      return $this->_clear(11);
    }
    
    /**
     * Get <objects_deleted_from_sink> value
     *
     * @return int
     */
    public function getObjectsDeletedFromSink(){
      return $this->_get(11);
    }
    
    /**
     * Set <objects_deleted_from_sink> value
     *
     * @param int $value
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function setObjectsDeletedFromSink( $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <bytes_deleted_from_sink> has a value
     *
     * @return boolean
     */
    public function hasBytesDeletedFromSink(){
      return $this->_has(12);
    }
    
    /**
     * Clear <bytes_deleted_from_sink> value
     *
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function clearBytesDeletedFromSink(){
      return $this->_clear(12);
    }
    
    /**
     * Get <bytes_deleted_from_sink> value
     *
     * @return int
     */
    public function getBytesDeletedFromSink(){
      return $this->_get(12);
    }
    
    /**
     * Set <bytes_deleted_from_sink> value
     *
     * @param int $value
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function setBytesDeletedFromSink( $value){
      return $this->_set(12, $value);
    }
    
    /**
     * Check if <objects_from_source_failed> has a value
     *
     * @return boolean
     */
    public function hasObjectsFromSourceFailed(){
      return $this->_has(13);
    }
    
    /**
     * Clear <objects_from_source_failed> value
     *
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function clearObjectsFromSourceFailed(){
      return $this->_clear(13);
    }
    
    /**
     * Get <objects_from_source_failed> value
     *
     * @return int
     */
    public function getObjectsFromSourceFailed(){
      return $this->_get(13);
    }
    
    /**
     * Set <objects_from_source_failed> value
     *
     * @param int $value
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function setObjectsFromSourceFailed( $value){
      return $this->_set(13, $value);
    }
    
    /**
     * Check if <bytes_from_source_failed> has a value
     *
     * @return boolean
     */
    public function hasBytesFromSourceFailed(){
      return $this->_has(14);
    }
    
    /**
     * Clear <bytes_from_source_failed> value
     *
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function clearBytesFromSourceFailed(){
      return $this->_clear(14);
    }
    
    /**
     * Get <bytes_from_source_failed> value
     *
     * @return int
     */
    public function getBytesFromSourceFailed(){
      return $this->_get(14);
    }
    
    /**
     * Set <bytes_from_source_failed> value
     *
     * @param int $value
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function setBytesFromSourceFailed( $value){
      return $this->_set(14, $value);
    }
    
    /**
     * Check if <objects_failed_to_delete_from_sink> has a value
     *
     * @return boolean
     */
    public function hasObjectsFailedToDeleteFromSink(){
      return $this->_has(15);
    }
    
    /**
     * Clear <objects_failed_to_delete_from_sink> value
     *
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function clearObjectsFailedToDeleteFromSink(){
      return $this->_clear(15);
    }
    
    /**
     * Get <objects_failed_to_delete_from_sink> value
     *
     * @return int
     */
    public function getObjectsFailedToDeleteFromSink(){
      return $this->_get(15);
    }
    
    /**
     * Set <objects_failed_to_delete_from_sink> value
     *
     * @param int $value
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function setObjectsFailedToDeleteFromSink( $value){
      return $this->_set(15, $value);
    }
    
    /**
     * Check if <bytes_failed_to_delete_from_sink> has a value
     *
     * @return boolean
     */
    public function hasBytesFailedToDeleteFromSink(){
      return $this->_has(16);
    }
    
    /**
     * Clear <bytes_failed_to_delete_from_sink> value
     *
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function clearBytesFailedToDeleteFromSink(){
      return $this->_clear(16);
    }
    
    /**
     * Get <bytes_failed_to_delete_from_sink> value
     *
     * @return int
     */
    public function getBytesFailedToDeleteFromSink(){
      return $this->_get(16);
    }
    
    /**
     * Set <bytes_failed_to_delete_from_sink> value
     *
     * @param int $value
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function setBytesFailedToDeleteFromSink( $value){
      return $this->_set(16, $value);
    }
  }
}

namespace google\storagetransfer\v1\TransferOperation {

  class Status extends \DrSlump\Protobuf\Enum {
    const STATUS_UNSPECIFIED = 0;
    const IN_PROGRESS = 1;
    const PAUSED = 2;
    const SUCCESS = 3;
    const FAILED = 4;
    const ABORTED = 5;
  }
}
namespace google\storagetransfer\v1 {

  class TransferOperation extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var string */
    public $project_id = null;
    
    /**  @var \google\storagetransfer\v1\TransferSpec */
    public $transfer_spec = null;
    
    /**  @var \google\protobuf\Timestamp */
    public $start_time = null;
    
    /**  @var \google\protobuf\Timestamp */
    public $end_time = null;
    
    /**  @var int - \google\storagetransfer\v1\TransferOperation\Status */
    public $status = null;
    
    /**  @var \google\storagetransfer\v1\TransferCounters */
    public $counters = null;
    
    /**  @var \google\storagetransfer\v1\ErrorSummary[]  */
    public $error_breakdowns = array();
    
    /**  @var string */
    public $transfer_job_name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.storagetransfer.v1.TransferOperation');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING project_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "project_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE transfer_spec = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "transfer_spec";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\storagetransfer\v1\TransferSpec';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE start_time = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "start_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Timestamp';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE end_time = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "end_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Timestamp';
      $descriptor->addField($f);

      // OPTIONAL ENUM status = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "status";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\storagetransfer\v1\TransferOperation\Status';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE counters = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "counters";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\storagetransfer\v1\TransferCounters';
      $descriptor->addField($f);

      // REPEATED MESSAGE error_breakdowns = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "error_breakdowns";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\storagetransfer\v1\ErrorSummary';
      $descriptor->addField($f);

      // OPTIONAL STRING transfer_job_name = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "transfer_job_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\storagetransfer\v1\TransferOperation
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\storagetransfer\v1\TransferOperation
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <project_id> has a value
     *
     * @return boolean
     */
    public function hasProjectId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <project_id> value
     *
     * @return \google\storagetransfer\v1\TransferOperation
     */
    public function clearProjectId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <project_id> value
     *
     * @return string
     */
    public function getProjectId(){
      return $this->_get(2);
    }
    
    /**
     * Set <project_id> value
     *
     * @param string $value
     * @return \google\storagetransfer\v1\TransferOperation
     */
    public function setProjectId( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <transfer_spec> has a value
     *
     * @return boolean
     */
    public function hasTransferSpec(){
      return $this->_has(3);
    }
    
    /**
     * Clear <transfer_spec> value
     *
     * @return \google\storagetransfer\v1\TransferOperation
     */
    public function clearTransferSpec(){
      return $this->_clear(3);
    }
    
    /**
     * Get <transfer_spec> value
     *
     * @return \google\storagetransfer\v1\TransferSpec
     */
    public function getTransferSpec(){
      return $this->_get(3);
    }
    
    /**
     * Set <transfer_spec> value
     *
     * @param \google\storagetransfer\v1\TransferSpec $value
     * @return \google\storagetransfer\v1\TransferOperation
     */
    public function setTransferSpec(\google\storagetransfer\v1\TransferSpec $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <start_time> has a value
     *
     * @return boolean
     */
    public function hasStartTime(){
      return $this->_has(4);
    }
    
    /**
     * Clear <start_time> value
     *
     * @return \google\storagetransfer\v1\TransferOperation
     */
    public function clearStartTime(){
      return $this->_clear(4);
    }
    
    /**
     * Get <start_time> value
     *
     * @return \google\protobuf\Timestamp
     */
    public function getStartTime(){
      return $this->_get(4);
    }
    
    /**
     * Set <start_time> value
     *
     * @param \google\protobuf\Timestamp $value
     * @return \google\storagetransfer\v1\TransferOperation
     */
    public function setStartTime(\google\protobuf\Timestamp $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <end_time> has a value
     *
     * @return boolean
     */
    public function hasEndTime(){
      return $this->_has(5);
    }
    
    /**
     * Clear <end_time> value
     *
     * @return \google\storagetransfer\v1\TransferOperation
     */
    public function clearEndTime(){
      return $this->_clear(5);
    }
    
    /**
     * Get <end_time> value
     *
     * @return \google\protobuf\Timestamp
     */
    public function getEndTime(){
      return $this->_get(5);
    }
    
    /**
     * Set <end_time> value
     *
     * @param \google\protobuf\Timestamp $value
     * @return \google\storagetransfer\v1\TransferOperation
     */
    public function setEndTime(\google\protobuf\Timestamp $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <status> has a value
     *
     * @return boolean
     */
    public function hasStatus(){
      return $this->_has(6);
    }
    
    /**
     * Clear <status> value
     *
     * @return \google\storagetransfer\v1\TransferOperation
     */
    public function clearStatus(){
      return $this->_clear(6);
    }
    
    /**
     * Get <status> value
     *
     * @return int - \google\storagetransfer\v1\TransferOperation\Status
     */
    public function getStatus(){
      return $this->_get(6);
    }
    
    /**
     * Set <status> value
     *
     * @param int - \google\storagetransfer\v1\TransferOperation\Status $value
     * @return \google\storagetransfer\v1\TransferOperation
     */
    public function setStatus( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <counters> has a value
     *
     * @return boolean
     */
    public function hasCounters(){
      return $this->_has(7);
    }
    
    /**
     * Clear <counters> value
     *
     * @return \google\storagetransfer\v1\TransferOperation
     */
    public function clearCounters(){
      return $this->_clear(7);
    }
    
    /**
     * Get <counters> value
     *
     * @return \google\storagetransfer\v1\TransferCounters
     */
    public function getCounters(){
      return $this->_get(7);
    }
    
    /**
     * Set <counters> value
     *
     * @param \google\storagetransfer\v1\TransferCounters $value
     * @return \google\storagetransfer\v1\TransferOperation
     */
    public function setCounters(\google\storagetransfer\v1\TransferCounters $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <error_breakdowns> has a value
     *
     * @return boolean
     */
    public function hasErrorBreakdowns(){
      return $this->_has(8);
    }
    
    /**
     * Clear <error_breakdowns> value
     *
     * @return \google\storagetransfer\v1\TransferOperation
     */
    public function clearErrorBreakdowns(){
      return $this->_clear(8);
    }
    
    /**
     * Get <error_breakdowns> value
     *
     * @param int $idx
     * @return \google\storagetransfer\v1\ErrorSummary
     */
    public function getErrorBreakdowns($idx = NULL){
      return $this->_get(8, $idx);
    }
    
    /**
     * Set <error_breakdowns> value
     *
     * @param \google\storagetransfer\v1\ErrorSummary $value
     * @return \google\storagetransfer\v1\TransferOperation
     */
    public function setErrorBreakdowns(\google\storagetransfer\v1\ErrorSummary $value, $idx = NULL){
      return $this->_set(8, $value, $idx);
    }
    
    /**
     * Get all elements of <error_breakdowns>
     *
     * @return \google\storagetransfer\v1\ErrorSummary[]
     */
    public function getErrorBreakdownsList(){
     return $this->_get(8);
    }
    
    /**
     * Add a new element to <error_breakdowns>
     *
     * @param \google\storagetransfer\v1\ErrorSummary $value
     * @return \google\storagetransfer\v1\TransferOperation
     */
    public function addErrorBreakdowns(\google\storagetransfer\v1\ErrorSummary $value){
     return $this->_add(8, $value);
    }
    
    /**
     * Check if <transfer_job_name> has a value
     *
     * @return boolean
     */
    public function hasTransferJobName(){
      return $this->_has(9);
    }
    
    /**
     * Clear <transfer_job_name> value
     *
     * @return \google\storagetransfer\v1\TransferOperation
     */
    public function clearTransferJobName(){
      return $this->_clear(9);
    }
    
    /**
     * Get <transfer_job_name> value
     *
     * @return string
     */
    public function getTransferJobName(){
      return $this->_get(9);
    }
    
    /**
     * Set <transfer_job_name> value
     *
     * @param string $value
     * @return \google\storagetransfer\v1\TransferOperation
     */
    public function setTransferJobName( $value){
      return $this->_set(9, $value);
    }
  }
}

