<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: google/genomics/v1/references.proto
//   Date: 2017-06-13 04:25:44

namespace google\genomics\v1 {

  class Reference extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $id = null;
    
    /**  @var int */
    public $length = null;
    
    /**  @var string */
    public $md5checksum = null;
    
    /**  @var string */
    public $name = null;
    
    /**  @var string */
    public $source_uri = null;
    
    /**  @var string[]  */
    public $source_accessions = array();
    
    /**  @var int */
    public $ncbi_taxon_id = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1.Reference');

      // OPTIONAL STRING id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 length = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "length";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING md5checksum = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "md5checksum";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING name = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING source_uri = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "source_uri";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED STRING source_accessions = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "source_accessions";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // OPTIONAL INT32 ncbi_taxon_id = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "ncbi_taxon_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <id> has a value
     *
     * @return boolean
     */
    public function hasId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <id> value
     *
     * @return \google\genomics\v1\Reference
     */
    public function clearId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <id> value
     *
     * @return string
     */
    public function getId(){
      return $this->_get(1);
    }
    
    /**
     * Set <id> value
     *
     * @param string $value
     * @return \google\genomics\v1\Reference
     */
    public function setId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <length> has a value
     *
     * @return boolean
     */
    public function hasLength(){
      return $this->_has(2);
    }
    
    /**
     * Clear <length> value
     *
     * @return \google\genomics\v1\Reference
     */
    public function clearLength(){
      return $this->_clear(2);
    }
    
    /**
     * Get <length> value
     *
     * @return int
     */
    public function getLength(){
      return $this->_get(2);
    }
    
    /**
     * Set <length> value
     *
     * @param int $value
     * @return \google\genomics\v1\Reference
     */
    public function setLength( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <md5checksum> has a value
     *
     * @return boolean
     */
    public function hasMd5checksum(){
      return $this->_has(3);
    }
    
    /**
     * Clear <md5checksum> value
     *
     * @return \google\genomics\v1\Reference
     */
    public function clearMd5checksum(){
      return $this->_clear(3);
    }
    
    /**
     * Get <md5checksum> value
     *
     * @return string
     */
    public function getMd5checksum(){
      return $this->_get(3);
    }
    
    /**
     * Set <md5checksum> value
     *
     * @param string $value
     * @return \google\genomics\v1\Reference
     */
    public function setMd5checksum( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(4);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\genomics\v1\Reference
     */
    public function clearName(){
      return $this->_clear(4);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(4);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\genomics\v1\Reference
     */
    public function setName( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <source_uri> has a value
     *
     * @return boolean
     */
    public function hasSourceUri(){
      return $this->_has(5);
    }
    
    /**
     * Clear <source_uri> value
     *
     * @return \google\genomics\v1\Reference
     */
    public function clearSourceUri(){
      return $this->_clear(5);
    }
    
    /**
     * Get <source_uri> value
     *
     * @return string
     */
    public function getSourceUri(){
      return $this->_get(5);
    }
    
    /**
     * Set <source_uri> value
     *
     * @param string $value
     * @return \google\genomics\v1\Reference
     */
    public function setSourceUri( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <source_accessions> has a value
     *
     * @return boolean
     */
    public function hasSourceAccessions(){
      return $this->_has(6);
    }
    
    /**
     * Clear <source_accessions> value
     *
     * @return \google\genomics\v1\Reference
     */
    public function clearSourceAccessions(){
      return $this->_clear(6);
    }
    
    /**
     * Get <source_accessions> value
     *
     * @param int $idx
     * @return string
     */
    public function getSourceAccessions($idx = NULL){
      return $this->_get(6, $idx);
    }
    
    /**
     * Set <source_accessions> value
     *
     * @param string $value
     * @return \google\genomics\v1\Reference
     */
    public function setSourceAccessions( $value, $idx = NULL){
      return $this->_set(6, $value, $idx);
    }
    
    /**
     * Get all elements of <source_accessions>
     *
     * @return string[]
     */
    public function getSourceAccessionsList(){
     return $this->_get(6);
    }
    
    /**
     * Add a new element to <source_accessions>
     *
     * @param string $value
     * @return \google\genomics\v1\Reference
     */
    public function addSourceAccessions( $value){
     return $this->_add(6, $value);
    }
    
    /**
     * Check if <ncbi_taxon_id> has a value
     *
     * @return boolean
     */
    public function hasNcbiTaxonId(){
      return $this->_has(7);
    }
    
    /**
     * Clear <ncbi_taxon_id> value
     *
     * @return \google\genomics\v1\Reference
     */
    public function clearNcbiTaxonId(){
      return $this->_clear(7);
    }
    
    /**
     * Get <ncbi_taxon_id> value
     *
     * @return int
     */
    public function getNcbiTaxonId(){
      return $this->_get(7);
    }
    
    /**
     * Set <ncbi_taxon_id> value
     *
     * @param int $value
     * @return \google\genomics\v1\Reference
     */
    public function setNcbiTaxonId( $value){
      return $this->_set(7, $value);
    }
  }
}

namespace google\genomics\v1 {

  class ReferenceSet extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $id = null;
    
    /**  @var string[]  */
    public $reference_ids = array();
    
    /**  @var string */
    public $md5checksum = null;
    
    /**  @var int */
    public $ncbi_taxon_id = null;
    
    /**  @var string */
    public $description = null;
    
    /**  @var string */
    public $assembly_id = null;
    
    /**  @var string */
    public $source_uri = null;
    
    /**  @var string[]  */
    public $source_accessions = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1.ReferenceSet');

      // OPTIONAL STRING id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED STRING reference_ids = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "reference_ids";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // OPTIONAL STRING md5checksum = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "md5checksum";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 ncbi_taxon_id = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "ncbi_taxon_id";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING description = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "description";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING assembly_id = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "assembly_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING source_uri = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "source_uri";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED STRING source_accessions = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "source_accessions";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <id> has a value
     *
     * @return boolean
     */
    public function hasId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <id> value
     *
     * @return \google\genomics\v1\ReferenceSet
     */
    public function clearId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <id> value
     *
     * @return string
     */
    public function getId(){
      return $this->_get(1);
    }
    
    /**
     * Set <id> value
     *
     * @param string $value
     * @return \google\genomics\v1\ReferenceSet
     */
    public function setId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <reference_ids> has a value
     *
     * @return boolean
     */
    public function hasReferenceIds(){
      return $this->_has(2);
    }
    
    /**
     * Clear <reference_ids> value
     *
     * @return \google\genomics\v1\ReferenceSet
     */
    public function clearReferenceIds(){
      return $this->_clear(2);
    }
    
    /**
     * Get <reference_ids> value
     *
     * @param int $idx
     * @return string
     */
    public function getReferenceIds($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <reference_ids> value
     *
     * @param string $value
     * @return \google\genomics\v1\ReferenceSet
     */
    public function setReferenceIds( $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <reference_ids>
     *
     * @return string[]
     */
    public function getReferenceIdsList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <reference_ids>
     *
     * @param string $value
     * @return \google\genomics\v1\ReferenceSet
     */
    public function addReferenceIds( $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <md5checksum> has a value
     *
     * @return boolean
     */
    public function hasMd5checksum(){
      return $this->_has(3);
    }
    
    /**
     * Clear <md5checksum> value
     *
     * @return \google\genomics\v1\ReferenceSet
     */
    public function clearMd5checksum(){
      return $this->_clear(3);
    }
    
    /**
     * Get <md5checksum> value
     *
     * @return string
     */
    public function getMd5checksum(){
      return $this->_get(3);
    }
    
    /**
     * Set <md5checksum> value
     *
     * @param string $value
     * @return \google\genomics\v1\ReferenceSet
     */
    public function setMd5checksum( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <ncbi_taxon_id> has a value
     *
     * @return boolean
     */
    public function hasNcbiTaxonId(){
      return $this->_has(4);
    }
    
    /**
     * Clear <ncbi_taxon_id> value
     *
     * @return \google\genomics\v1\ReferenceSet
     */
    public function clearNcbiTaxonId(){
      return $this->_clear(4);
    }
    
    /**
     * Get <ncbi_taxon_id> value
     *
     * @return int
     */
    public function getNcbiTaxonId(){
      return $this->_get(4);
    }
    
    /**
     * Set <ncbi_taxon_id> value
     *
     * @param int $value
     * @return \google\genomics\v1\ReferenceSet
     */
    public function setNcbiTaxonId( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <description> has a value
     *
     * @return boolean
     */
    public function hasDescription(){
      return $this->_has(5);
    }
    
    /**
     * Clear <description> value
     *
     * @return \google\genomics\v1\ReferenceSet
     */
    public function clearDescription(){
      return $this->_clear(5);
    }
    
    /**
     * Get <description> value
     *
     * @return string
     */
    public function getDescription(){
      return $this->_get(5);
    }
    
    /**
     * Set <description> value
     *
     * @param string $value
     * @return \google\genomics\v1\ReferenceSet
     */
    public function setDescription( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <assembly_id> has a value
     *
     * @return boolean
     */
    public function hasAssemblyId(){
      return $this->_has(6);
    }
    
    /**
     * Clear <assembly_id> value
     *
     * @return \google\genomics\v1\ReferenceSet
     */
    public function clearAssemblyId(){
      return $this->_clear(6);
    }
    
    /**
     * Get <assembly_id> value
     *
     * @return string
     */
    public function getAssemblyId(){
      return $this->_get(6);
    }
    
    /**
     * Set <assembly_id> value
     *
     * @param string $value
     * @return \google\genomics\v1\ReferenceSet
     */
    public function setAssemblyId( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <source_uri> has a value
     *
     * @return boolean
     */
    public function hasSourceUri(){
      return $this->_has(7);
    }
    
    /**
     * Clear <source_uri> value
     *
     * @return \google\genomics\v1\ReferenceSet
     */
    public function clearSourceUri(){
      return $this->_clear(7);
    }
    
    /**
     * Get <source_uri> value
     *
     * @return string
     */
    public function getSourceUri(){
      return $this->_get(7);
    }
    
    /**
     * Set <source_uri> value
     *
     * @param string $value
     * @return \google\genomics\v1\ReferenceSet
     */
    public function setSourceUri( $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <source_accessions> has a value
     *
     * @return boolean
     */
    public function hasSourceAccessions(){
      return $this->_has(8);
    }
    
    /**
     * Clear <source_accessions> value
     *
     * @return \google\genomics\v1\ReferenceSet
     */
    public function clearSourceAccessions(){
      return $this->_clear(8);
    }
    
    /**
     * Get <source_accessions> value
     *
     * @param int $idx
     * @return string
     */
    public function getSourceAccessions($idx = NULL){
      return $this->_get(8, $idx);
    }
    
    /**
     * Set <source_accessions> value
     *
     * @param string $value
     * @return \google\genomics\v1\ReferenceSet
     */
    public function setSourceAccessions( $value, $idx = NULL){
      return $this->_set(8, $value, $idx);
    }
    
    /**
     * Get all elements of <source_accessions>
     *
     * @return string[]
     */
    public function getSourceAccessionsList(){
     return $this->_get(8);
    }
    
    /**
     * Add a new element to <source_accessions>
     *
     * @param string $value
     * @return \google\genomics\v1\ReferenceSet
     */
    public function addSourceAccessions( $value){
     return $this->_add(8, $value);
    }
  }
}

namespace google\genomics\v1 {

  class SearchReferenceSetsRequest extends \DrSlump\Protobuf\Message {

    /**  @var string[]  */
    public $md5checksums = array();
    
    /**  @var string[]  */
    public $accessions = array();
    
    /**  @var string */
    public $assembly_id = null;
    
    /**  @var string */
    public $page_token = null;
    
    /**  @var int */
    public $page_size = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1.SearchReferenceSetsRequest');

      // REPEATED STRING md5checksums = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "md5checksums";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // REPEATED STRING accessions = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "accessions";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // OPTIONAL STRING assembly_id = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "assembly_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING page_token = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 page_size = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "page_size";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <md5checksums> has a value
     *
     * @return boolean
     */
    public function hasMd5checksums(){
      return $this->_has(1);
    }
    
    /**
     * Clear <md5checksums> value
     *
     * @return \google\genomics\v1\SearchReferenceSetsRequest
     */
    public function clearMd5checksums(){
      return $this->_clear(1);
    }
    
    /**
     * Get <md5checksums> value
     *
     * @param int $idx
     * @return string
     */
    public function getMd5checksums($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <md5checksums> value
     *
     * @param string $value
     * @return \google\genomics\v1\SearchReferenceSetsRequest
     */
    public function setMd5checksums( $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <md5checksums>
     *
     * @return string[]
     */
    public function getMd5checksumsList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <md5checksums>
     *
     * @param string $value
     * @return \google\genomics\v1\SearchReferenceSetsRequest
     */
    public function addMd5checksums( $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <accessions> has a value
     *
     * @return boolean
     */
    public function hasAccessions(){
      return $this->_has(2);
    }
    
    /**
     * Clear <accessions> value
     *
     * @return \google\genomics\v1\SearchReferenceSetsRequest
     */
    public function clearAccessions(){
      return $this->_clear(2);
    }
    
    /**
     * Get <accessions> value
     *
     * @param int $idx
     * @return string
     */
    public function getAccessions($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <accessions> value
     *
     * @param string $value
     * @return \google\genomics\v1\SearchReferenceSetsRequest
     */
    public function setAccessions( $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <accessions>
     *
     * @return string[]
     */
    public function getAccessionsList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <accessions>
     *
     * @param string $value
     * @return \google\genomics\v1\SearchReferenceSetsRequest
     */
    public function addAccessions( $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <assembly_id> has a value
     *
     * @return boolean
     */
    public function hasAssemblyId(){
      return $this->_has(3);
    }
    
    /**
     * Clear <assembly_id> value
     *
     * @return \google\genomics\v1\SearchReferenceSetsRequest
     */
    public function clearAssemblyId(){
      return $this->_clear(3);
    }
    
    /**
     * Get <assembly_id> value
     *
     * @return string
     */
    public function getAssemblyId(){
      return $this->_get(3);
    }
    
    /**
     * Set <assembly_id> value
     *
     * @param string $value
     * @return \google\genomics\v1\SearchReferenceSetsRequest
     */
    public function setAssemblyId( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <page_token> has a value
     *
     * @return boolean
     */
    public function hasPageToken(){
      return $this->_has(4);
    }
    
    /**
     * Clear <page_token> value
     *
     * @return \google\genomics\v1\SearchReferenceSetsRequest
     */
    public function clearPageToken(){
      return $this->_clear(4);
    }
    
    /**
     * Get <page_token> value
     *
     * @return string
     */
    public function getPageToken(){
      return $this->_get(4);
    }
    
    /**
     * Set <page_token> value
     *
     * @param string $value
     * @return \google\genomics\v1\SearchReferenceSetsRequest
     */
    public function setPageToken( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <page_size> has a value
     *
     * @return boolean
     */
    public function hasPageSize(){
      return $this->_has(5);
    }
    
    /**
     * Clear <page_size> value
     *
     * @return \google\genomics\v1\SearchReferenceSetsRequest
     */
    public function clearPageSize(){
      return $this->_clear(5);
    }
    
    /**
     * Get <page_size> value
     *
     * @return int
     */
    public function getPageSize(){
      return $this->_get(5);
    }
    
    /**
     * Set <page_size> value
     *
     * @param int $value
     * @return \google\genomics\v1\SearchReferenceSetsRequest
     */
    public function setPageSize( $value){
      return $this->_set(5, $value);
    }
  }
}

namespace google\genomics\v1 {

  class SearchReferenceSetsResponse extends \DrSlump\Protobuf\Message {

    /**  @var \google\genomics\v1\ReferenceSet[]  */
    public $reference_sets = array();
    
    /**  @var string */
    public $next_page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1.SearchReferenceSetsResponse');

      // REPEATED MESSAGE reference_sets = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "reference_sets";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\genomics\v1\ReferenceSet';
      $descriptor->addField($f);

      // OPTIONAL STRING next_page_token = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "next_page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <reference_sets> has a value
     *
     * @return boolean
     */
    public function hasReferenceSets(){
      return $this->_has(1);
    }
    
    /**
     * Clear <reference_sets> value
     *
     * @return \google\genomics\v1\SearchReferenceSetsResponse
     */
    public function clearReferenceSets(){
      return $this->_clear(1);
    }
    
    /**
     * Get <reference_sets> value
     *
     * @param int $idx
     * @return \google\genomics\v1\ReferenceSet
     */
    public function getReferenceSets($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <reference_sets> value
     *
     * @param \google\genomics\v1\ReferenceSet $value
     * @return \google\genomics\v1\SearchReferenceSetsResponse
     */
    public function setReferenceSets(\google\genomics\v1\ReferenceSet $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <reference_sets>
     *
     * @return \google\genomics\v1\ReferenceSet[]
     */
    public function getReferenceSetsList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <reference_sets>
     *
     * @param \google\genomics\v1\ReferenceSet $value
     * @return \google\genomics\v1\SearchReferenceSetsResponse
     */
    public function addReferenceSets(\google\genomics\v1\ReferenceSet $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <next_page_token> has a value
     *
     * @return boolean
     */
    public function hasNextPageToken(){
      return $this->_has(2);
    }
    
    /**
     * Clear <next_page_token> value
     *
     * @return \google\genomics\v1\SearchReferenceSetsResponse
     */
    public function clearNextPageToken(){
      return $this->_clear(2);
    }
    
    /**
     * Get <next_page_token> value
     *
     * @return string
     */
    public function getNextPageToken(){
      return $this->_get(2);
    }
    
    /**
     * Set <next_page_token> value
     *
     * @param string $value
     * @return \google\genomics\v1\SearchReferenceSetsResponse
     */
    public function setNextPageToken( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\genomics\v1 {

  class GetReferenceSetRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $reference_set_id = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1.GetReferenceSetRequest');

      // OPTIONAL STRING reference_set_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "reference_set_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <reference_set_id> has a value
     *
     * @return boolean
     */
    public function hasReferenceSetId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <reference_set_id> value
     *
     * @return \google\genomics\v1\GetReferenceSetRequest
     */
    public function clearReferenceSetId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <reference_set_id> value
     *
     * @return string
     */
    public function getReferenceSetId(){
      return $this->_get(1);
    }
    
    /**
     * Set <reference_set_id> value
     *
     * @param string $value
     * @return \google\genomics\v1\GetReferenceSetRequest
     */
    public function setReferenceSetId( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\genomics\v1 {

  class SearchReferencesRequest extends \DrSlump\Protobuf\Message {

    /**  @var string[]  */
    public $md5checksums = array();
    
    /**  @var string[]  */
    public $accessions = array();
    
    /**  @var string */
    public $reference_set_id = null;
    
    /**  @var string */
    public $page_token = null;
    
    /**  @var int */
    public $page_size = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1.SearchReferencesRequest');

      // REPEATED STRING md5checksums = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "md5checksums";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // REPEATED STRING accessions = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "accessions";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // OPTIONAL STRING reference_set_id = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "reference_set_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING page_token = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 page_size = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "page_size";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <md5checksums> has a value
     *
     * @return boolean
     */
    public function hasMd5checksums(){
      return $this->_has(1);
    }
    
    /**
     * Clear <md5checksums> value
     *
     * @return \google\genomics\v1\SearchReferencesRequest
     */
    public function clearMd5checksums(){
      return $this->_clear(1);
    }
    
    /**
     * Get <md5checksums> value
     *
     * @param int $idx
     * @return string
     */
    public function getMd5checksums($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <md5checksums> value
     *
     * @param string $value
     * @return \google\genomics\v1\SearchReferencesRequest
     */
    public function setMd5checksums( $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <md5checksums>
     *
     * @return string[]
     */
    public function getMd5checksumsList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <md5checksums>
     *
     * @param string $value
     * @return \google\genomics\v1\SearchReferencesRequest
     */
    public function addMd5checksums( $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <accessions> has a value
     *
     * @return boolean
     */
    public function hasAccessions(){
      return $this->_has(2);
    }
    
    /**
     * Clear <accessions> value
     *
     * @return \google\genomics\v1\SearchReferencesRequest
     */
    public function clearAccessions(){
      return $this->_clear(2);
    }
    
    /**
     * Get <accessions> value
     *
     * @param int $idx
     * @return string
     */
    public function getAccessions($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <accessions> value
     *
     * @param string $value
     * @return \google\genomics\v1\SearchReferencesRequest
     */
    public function setAccessions( $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <accessions>
     *
     * @return string[]
     */
    public function getAccessionsList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <accessions>
     *
     * @param string $value
     * @return \google\genomics\v1\SearchReferencesRequest
     */
    public function addAccessions( $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <reference_set_id> has a value
     *
     * @return boolean
     */
    public function hasReferenceSetId(){
      return $this->_has(3);
    }
    
    /**
     * Clear <reference_set_id> value
     *
     * @return \google\genomics\v1\SearchReferencesRequest
     */
    public function clearReferenceSetId(){
      return $this->_clear(3);
    }
    
    /**
     * Get <reference_set_id> value
     *
     * @return string
     */
    public function getReferenceSetId(){
      return $this->_get(3);
    }
    
    /**
     * Set <reference_set_id> value
     *
     * @param string $value
     * @return \google\genomics\v1\SearchReferencesRequest
     */
    public function setReferenceSetId( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <page_token> has a value
     *
     * @return boolean
     */
    public function hasPageToken(){
      return $this->_has(4);
    }
    
    /**
     * Clear <page_token> value
     *
     * @return \google\genomics\v1\SearchReferencesRequest
     */
    public function clearPageToken(){
      return $this->_clear(4);
    }
    
    /**
     * Get <page_token> value
     *
     * @return string
     */
    public function getPageToken(){
      return $this->_get(4);
    }
    
    /**
     * Set <page_token> value
     *
     * @param string $value
     * @return \google\genomics\v1\SearchReferencesRequest
     */
    public function setPageToken( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <page_size> has a value
     *
     * @return boolean
     */
    public function hasPageSize(){
      return $this->_has(5);
    }
    
    /**
     * Clear <page_size> value
     *
     * @return \google\genomics\v1\SearchReferencesRequest
     */
    public function clearPageSize(){
      return $this->_clear(5);
    }
    
    /**
     * Get <page_size> value
     *
     * @return int
     */
    public function getPageSize(){
      return $this->_get(5);
    }
    
    /**
     * Set <page_size> value
     *
     * @param int $value
     * @return \google\genomics\v1\SearchReferencesRequest
     */
    public function setPageSize( $value){
      return $this->_set(5, $value);
    }
  }
}

namespace google\genomics\v1 {

  class SearchReferencesResponse extends \DrSlump\Protobuf\Message {

    /**  @var \google\genomics\v1\Reference[]  */
    public $references = array();
    
    /**  @var string */
    public $next_page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1.SearchReferencesResponse');

      // REPEATED MESSAGE references = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "references";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\genomics\v1\Reference';
      $descriptor->addField($f);

      // OPTIONAL STRING next_page_token = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "next_page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <references> has a value
     *
     * @return boolean
     */
    public function hasReferences(){
      return $this->_has(1);
    }
    
    /**
     * Clear <references> value
     *
     * @return \google\genomics\v1\SearchReferencesResponse
     */
    public function clearReferences(){
      return $this->_clear(1);
    }
    
    /**
     * Get <references> value
     *
     * @param int $idx
     * @return \google\genomics\v1\Reference
     */
    public function getReferences($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <references> value
     *
     * @param \google\genomics\v1\Reference $value
     * @return \google\genomics\v1\SearchReferencesResponse
     */
    public function setReferences(\google\genomics\v1\Reference $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <references>
     *
     * @return \google\genomics\v1\Reference[]
     */
    public function getReferencesList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <references>
     *
     * @param \google\genomics\v1\Reference $value
     * @return \google\genomics\v1\SearchReferencesResponse
     */
    public function addReferences(\google\genomics\v1\Reference $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <next_page_token> has a value
     *
     * @return boolean
     */
    public function hasNextPageToken(){
      return $this->_has(2);
    }
    
    /**
     * Clear <next_page_token> value
     *
     * @return \google\genomics\v1\SearchReferencesResponse
     */
    public function clearNextPageToken(){
      return $this->_clear(2);
    }
    
    /**
     * Get <next_page_token> value
     *
     * @return string
     */
    public function getNextPageToken(){
      return $this->_get(2);
    }
    
    /**
     * Set <next_page_token> value
     *
     * @param string $value
     * @return \google\genomics\v1\SearchReferencesResponse
     */
    public function setNextPageToken( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\genomics\v1 {

  class GetReferenceRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $reference_id = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1.GetReferenceRequest');

      // OPTIONAL STRING reference_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "reference_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <reference_id> has a value
     *
     * @return boolean
     */
    public function hasReferenceId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <reference_id> value
     *
     * @return \google\genomics\v1\GetReferenceRequest
     */
    public function clearReferenceId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <reference_id> value
     *
     * @return string
     */
    public function getReferenceId(){
      return $this->_get(1);
    }
    
    /**
     * Set <reference_id> value
     *
     * @param string $value
     * @return \google\genomics\v1\GetReferenceRequest
     */
    public function setReferenceId( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\genomics\v1 {

  class ListBasesRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $reference_id = null;
    
    /**  @var int */
    public $start = null;
    
    /**  @var int */
    public $end = null;
    
    /**  @var string */
    public $page_token = null;
    
    /**  @var int */
    public $page_size = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1.ListBasesRequest');

      // OPTIONAL STRING reference_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "reference_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 start = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "start";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 end = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "end";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING page_token = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 page_size = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "page_size";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <reference_id> has a value
     *
     * @return boolean
     */
    public function hasReferenceId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <reference_id> value
     *
     * @return \google\genomics\v1\ListBasesRequest
     */
    public function clearReferenceId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <reference_id> value
     *
     * @return string
     */
    public function getReferenceId(){
      return $this->_get(1);
    }
    
    /**
     * Set <reference_id> value
     *
     * @param string $value
     * @return \google\genomics\v1\ListBasesRequest
     */
    public function setReferenceId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <start> has a value
     *
     * @return boolean
     */
    public function hasStart(){
      return $this->_has(2);
    }
    
    /**
     * Clear <start> value
     *
     * @return \google\genomics\v1\ListBasesRequest
     */
    public function clearStart(){
      return $this->_clear(2);
    }
    
    /**
     * Get <start> value
     *
     * @return int
     */
    public function getStart(){
      return $this->_get(2);
    }
    
    /**
     * Set <start> value
     *
     * @param int $value
     * @return \google\genomics\v1\ListBasesRequest
     */
    public function setStart( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <end> has a value
     *
     * @return boolean
     */
    public function hasEnd(){
      return $this->_has(3);
    }
    
    /**
     * Clear <end> value
     *
     * @return \google\genomics\v1\ListBasesRequest
     */
    public function clearEnd(){
      return $this->_clear(3);
    }
    
    /**
     * Get <end> value
     *
     * @return int
     */
    public function getEnd(){
      return $this->_get(3);
    }
    
    /**
     * Set <end> value
     *
     * @param int $value
     * @return \google\genomics\v1\ListBasesRequest
     */
    public function setEnd( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <page_token> has a value
     *
     * @return boolean
     */
    public function hasPageToken(){
      return $this->_has(4);
    }
    
    /**
     * Clear <page_token> value
     *
     * @return \google\genomics\v1\ListBasesRequest
     */
    public function clearPageToken(){
      return $this->_clear(4);
    }
    
    /**
     * Get <page_token> value
     *
     * @return string
     */
    public function getPageToken(){
      return $this->_get(4);
    }
    
    /**
     * Set <page_token> value
     *
     * @param string $value
     * @return \google\genomics\v1\ListBasesRequest
     */
    public function setPageToken( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <page_size> has a value
     *
     * @return boolean
     */
    public function hasPageSize(){
      return $this->_has(5);
    }
    
    /**
     * Clear <page_size> value
     *
     * @return \google\genomics\v1\ListBasesRequest
     */
    public function clearPageSize(){
      return $this->_clear(5);
    }
    
    /**
     * Get <page_size> value
     *
     * @return int
     */
    public function getPageSize(){
      return $this->_get(5);
    }
    
    /**
     * Set <page_size> value
     *
     * @param int $value
     * @return \google\genomics\v1\ListBasesRequest
     */
    public function setPageSize( $value){
      return $this->_set(5, $value);
    }
  }
}

namespace google\genomics\v1 {

  class ListBasesResponse extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $offset = null;
    
    /**  @var string */
    public $sequence = null;
    
    /**  @var string */
    public $next_page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1.ListBasesResponse');

      // OPTIONAL INT64 offset = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "offset";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING sequence = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "sequence";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING next_page_token = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "next_page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <offset> has a value
     *
     * @return boolean
     */
    public function hasOffset(){
      return $this->_has(1);
    }
    
    /**
     * Clear <offset> value
     *
     * @return \google\genomics\v1\ListBasesResponse
     */
    public function clearOffset(){
      return $this->_clear(1);
    }
    
    /**
     * Get <offset> value
     *
     * @return int
     */
    public function getOffset(){
      return $this->_get(1);
    }
    
    /**
     * Set <offset> value
     *
     * @param int $value
     * @return \google\genomics\v1\ListBasesResponse
     */
    public function setOffset( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <sequence> has a value
     *
     * @return boolean
     */
    public function hasSequence(){
      return $this->_has(2);
    }
    
    /**
     * Clear <sequence> value
     *
     * @return \google\genomics\v1\ListBasesResponse
     */
    public function clearSequence(){
      return $this->_clear(2);
    }
    
    /**
     * Get <sequence> value
     *
     * @return string
     */
    public function getSequence(){
      return $this->_get(2);
    }
    
    /**
     * Set <sequence> value
     *
     * @param string $value
     * @return \google\genomics\v1\ListBasesResponse
     */
    public function setSequence( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <next_page_token> has a value
     *
     * @return boolean
     */
    public function hasNextPageToken(){
      return $this->_has(3);
    }
    
    /**
     * Clear <next_page_token> value
     *
     * @return \google\genomics\v1\ListBasesResponse
     */
    public function clearNextPageToken(){
      return $this->_clear(3);
    }
    
    /**
     * Get <next_page_token> value
     *
     * @return string
     */
    public function getNextPageToken(){
      return $this->_get(3);
    }
    
    /**
     * Set <next_page_token> value
     *
     * @param string $value
     * @return \google\genomics\v1\ListBasesResponse
     */
    public function setNextPageToken( $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\genomics\v1 {

  class ReferenceServiceV1Client extends \Grpc\BaseStub {

    public function __construct($hostname, $opts, $channel = null) {
      parent::__construct($hostname, $opts, $channel);
    }
    /**
     * @param google\genomics\v1\SearchReferenceSetsRequest $input
     */
    public function SearchReferenceSets(\google\genomics\v1\SearchReferenceSetsRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.genomics.v1.ReferenceServiceV1/SearchReferenceSets', $argument, '\google\genomics\v1\SearchReferenceSetsResponse::deserialize', $metadata, $options);
    }
    /**
     * @param google\genomics\v1\GetReferenceSetRequest $input
     */
    public function GetReferenceSet(\google\genomics\v1\GetReferenceSetRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.genomics.v1.ReferenceServiceV1/GetReferenceSet', $argument, '\google\genomics\v1\ReferenceSet::deserialize', $metadata, $options);
    }
    /**
     * @param google\genomics\v1\SearchReferencesRequest $input
     */
    public function SearchReferences(\google\genomics\v1\SearchReferencesRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.genomics.v1.ReferenceServiceV1/SearchReferences', $argument, '\google\genomics\v1\SearchReferencesResponse::deserialize', $metadata, $options);
    }
    /**
     * @param google\genomics\v1\GetReferenceRequest $input
     */
    public function GetReference(\google\genomics\v1\GetReferenceRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.genomics.v1.ReferenceServiceV1/GetReference', $argument, '\google\genomics\v1\Reference::deserialize', $metadata, $options);
    }
    /**
     * @param google\genomics\v1\ListBasesRequest $input
     */
    public function ListBases(\google\genomics\v1\ListBasesRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.genomics.v1.ReferenceServiceV1/ListBases', $argument, '\google\genomics\v1\ListBasesResponse::deserialize', $metadata, $options);
    }
  }
}
