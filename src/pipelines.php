<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: google/genomics/v1alpha2/pipelines.proto
//   Date: 2017-06-13 04:25:49

namespace google\genomics\v1alpha2 {

  class ComputeEngine extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $instance_name = null;
    
    /**  @var string */
    public $zone = null;
    
    /**  @var string */
    public $machine_type = null;
    
    /**  @var string[]  */
    public $disk_names = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1alpha2.ComputeEngine');

      // OPTIONAL STRING instance_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "instance_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING zone = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "zone";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING machine_type = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "machine_type";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED STRING disk_names = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "disk_names";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <instance_name> has a value
     *
     * @return boolean
     */
    public function hasInstanceName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <instance_name> value
     *
     * @return \google\genomics\v1alpha2\ComputeEngine
     */
    public function clearInstanceName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <instance_name> value
     *
     * @return string
     */
    public function getInstanceName(){
      return $this->_get(1);
    }
    
    /**
     * Set <instance_name> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\ComputeEngine
     */
    public function setInstanceName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <zone> has a value
     *
     * @return boolean
     */
    public function hasZone(){
      return $this->_has(2);
    }
    
    /**
     * Clear <zone> value
     *
     * @return \google\genomics\v1alpha2\ComputeEngine
     */
    public function clearZone(){
      return $this->_clear(2);
    }
    
    /**
     * Get <zone> value
     *
     * @return string
     */
    public function getZone(){
      return $this->_get(2);
    }
    
    /**
     * Set <zone> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\ComputeEngine
     */
    public function setZone( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <machine_type> has a value
     *
     * @return boolean
     */
    public function hasMachineType(){
      return $this->_has(3);
    }
    
    /**
     * Clear <machine_type> value
     *
     * @return \google\genomics\v1alpha2\ComputeEngine
     */
    public function clearMachineType(){
      return $this->_clear(3);
    }
    
    /**
     * Get <machine_type> value
     *
     * @return string
     */
    public function getMachineType(){
      return $this->_get(3);
    }
    
    /**
     * Set <machine_type> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\ComputeEngine
     */
    public function setMachineType( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <disk_names> has a value
     *
     * @return boolean
     */
    public function hasDiskNames(){
      return $this->_has(4);
    }
    
    /**
     * Clear <disk_names> value
     *
     * @return \google\genomics\v1alpha2\ComputeEngine
     */
    public function clearDiskNames(){
      return $this->_clear(4);
    }
    
    /**
     * Get <disk_names> value
     *
     * @param int $idx
     * @return string
     */
    public function getDiskNames($idx = NULL){
      return $this->_get(4, $idx);
    }
    
    /**
     * Set <disk_names> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\ComputeEngine
     */
    public function setDiskNames( $value, $idx = NULL){
      return $this->_set(4, $value, $idx);
    }
    
    /**
     * Get all elements of <disk_names>
     *
     * @return string[]
     */
    public function getDiskNamesList(){
     return $this->_get(4);
    }
    
    /**
     * Add a new element to <disk_names>
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\ComputeEngine
     */
    public function addDiskNames( $value){
     return $this->_add(4, $value);
    }
  }
}

namespace google\genomics\v1alpha2 {

  class RuntimeMetadata extends \DrSlump\Protobuf\Message {

    /**  @var \google\genomics\v1alpha2\ComputeEngine */
    public $compute_engine = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1alpha2.RuntimeMetadata');

      // OPTIONAL MESSAGE compute_engine = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "compute_engine";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\genomics\v1alpha2\ComputeEngine';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <compute_engine> has a value
     *
     * @return boolean
     */
    public function hasComputeEngine(){
      return $this->_has(1);
    }
    
    /**
     * Clear <compute_engine> value
     *
     * @return \google\genomics\v1alpha2\RuntimeMetadata
     */
    public function clearComputeEngine(){
      return $this->_clear(1);
    }
    
    /**
     * Get <compute_engine> value
     *
     * @return \google\genomics\v1alpha2\ComputeEngine
     */
    public function getComputeEngine(){
      return $this->_get(1);
    }
    
    /**
     * Set <compute_engine> value
     *
     * @param \google\genomics\v1alpha2\ComputeEngine $value
     * @return \google\genomics\v1alpha2\RuntimeMetadata
     */
    public function setComputeEngine(\google\genomics\v1alpha2\ComputeEngine $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\genomics\v1alpha2 {

  class Pipeline extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $project_id = null;
    
    /**  @var string */
    public $name = null;
    
    /**  @var string */
    public $description = null;
    
    /**  @var \google\genomics\v1alpha2\PipelineParameter[]  */
    public $input_parameters = array();
    
    /**  @var \google\genomics\v1alpha2\PipelineParameter[]  */
    public $output_parameters = array();
    
    /**  @var \google\genomics\v1alpha2\DockerExecutor */
    public $docker = null;
    
    /**  @var \google\genomics\v1alpha2\PipelineResources */
    public $resources = null;
    
    /**  @var string */
    public $pipeline_id = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1alpha2.Pipeline');

      // OPTIONAL STRING project_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "project_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING name = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING description = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "description";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE input_parameters = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "input_parameters";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\genomics\v1alpha2\PipelineParameter';
      $descriptor->addField($f);

      // REPEATED MESSAGE output_parameters = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "output_parameters";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\genomics\v1alpha2\PipelineParameter';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE docker = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "docker";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\genomics\v1alpha2\DockerExecutor';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE resources = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "resources";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\genomics\v1alpha2\PipelineResources';
      $descriptor->addField($f);

      // OPTIONAL STRING pipeline_id = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "pipeline_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <project_id> has a value
     *
     * @return boolean
     */
    public function hasProjectId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <project_id> value
     *
     * @return \google\genomics\v1alpha2\Pipeline
     */
    public function clearProjectId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <project_id> value
     *
     * @return string
     */
    public function getProjectId(){
      return $this->_get(1);
    }
    
    /**
     * Set <project_id> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\Pipeline
     */
    public function setProjectId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(2);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\genomics\v1alpha2\Pipeline
     */
    public function clearName(){
      return $this->_clear(2);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(2);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\Pipeline
     */
    public function setName( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <description> has a value
     *
     * @return boolean
     */
    public function hasDescription(){
      return $this->_has(3);
    }
    
    /**
     * Clear <description> value
     *
     * @return \google\genomics\v1alpha2\Pipeline
     */
    public function clearDescription(){
      return $this->_clear(3);
    }
    
    /**
     * Get <description> value
     *
     * @return string
     */
    public function getDescription(){
      return $this->_get(3);
    }
    
    /**
     * Set <description> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\Pipeline
     */
    public function setDescription( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <input_parameters> has a value
     *
     * @return boolean
     */
    public function hasInputParameters(){
      return $this->_has(8);
    }
    
    /**
     * Clear <input_parameters> value
     *
     * @return \google\genomics\v1alpha2\Pipeline
     */
    public function clearInputParameters(){
      return $this->_clear(8);
    }
    
    /**
     * Get <input_parameters> value
     *
     * @param int $idx
     * @return \google\genomics\v1alpha2\PipelineParameter
     */
    public function getInputParameters($idx = NULL){
      return $this->_get(8, $idx);
    }
    
    /**
     * Set <input_parameters> value
     *
     * @param \google\genomics\v1alpha2\PipelineParameter $value
     * @return \google\genomics\v1alpha2\Pipeline
     */
    public function setInputParameters(\google\genomics\v1alpha2\PipelineParameter $value, $idx = NULL){
      return $this->_set(8, $value, $idx);
    }
    
    /**
     * Get all elements of <input_parameters>
     *
     * @return \google\genomics\v1alpha2\PipelineParameter[]
     */
    public function getInputParametersList(){
     return $this->_get(8);
    }
    
    /**
     * Add a new element to <input_parameters>
     *
     * @param \google\genomics\v1alpha2\PipelineParameter $value
     * @return \google\genomics\v1alpha2\Pipeline
     */
    public function addInputParameters(\google\genomics\v1alpha2\PipelineParameter $value){
     return $this->_add(8, $value);
    }
    
    /**
     * Check if <output_parameters> has a value
     *
     * @return boolean
     */
    public function hasOutputParameters(){
      return $this->_has(9);
    }
    
    /**
     * Clear <output_parameters> value
     *
     * @return \google\genomics\v1alpha2\Pipeline
     */
    public function clearOutputParameters(){
      return $this->_clear(9);
    }
    
    /**
     * Get <output_parameters> value
     *
     * @param int $idx
     * @return \google\genomics\v1alpha2\PipelineParameter
     */
    public function getOutputParameters($idx = NULL){
      return $this->_get(9, $idx);
    }
    
    /**
     * Set <output_parameters> value
     *
     * @param \google\genomics\v1alpha2\PipelineParameter $value
     * @return \google\genomics\v1alpha2\Pipeline
     */
    public function setOutputParameters(\google\genomics\v1alpha2\PipelineParameter $value, $idx = NULL){
      return $this->_set(9, $value, $idx);
    }
    
    /**
     * Get all elements of <output_parameters>
     *
     * @return \google\genomics\v1alpha2\PipelineParameter[]
     */
    public function getOutputParametersList(){
     return $this->_get(9);
    }
    
    /**
     * Add a new element to <output_parameters>
     *
     * @param \google\genomics\v1alpha2\PipelineParameter $value
     * @return \google\genomics\v1alpha2\Pipeline
     */
    public function addOutputParameters(\google\genomics\v1alpha2\PipelineParameter $value){
     return $this->_add(9, $value);
    }
    
    /**
     * Check if <docker> has a value
     *
     * @return boolean
     */
    public function hasDocker(){
      return $this->_has(5);
    }
    
    /**
     * Clear <docker> value
     *
     * @return \google\genomics\v1alpha2\Pipeline
     */
    public function clearDocker(){
      return $this->_clear(5);
    }
    
    /**
     * Get <docker> value
     *
     * @return \google\genomics\v1alpha2\DockerExecutor
     */
    public function getDocker(){
      return $this->_get(5);
    }
    
    /**
     * Set <docker> value
     *
     * @param \google\genomics\v1alpha2\DockerExecutor $value
     * @return \google\genomics\v1alpha2\Pipeline
     */
    public function setDocker(\google\genomics\v1alpha2\DockerExecutor $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <resources> has a value
     *
     * @return boolean
     */
    public function hasResources(){
      return $this->_has(6);
    }
    
    /**
     * Clear <resources> value
     *
     * @return \google\genomics\v1alpha2\Pipeline
     */
    public function clearResources(){
      return $this->_clear(6);
    }
    
    /**
     * Get <resources> value
     *
     * @return \google\genomics\v1alpha2\PipelineResources
     */
    public function getResources(){
      return $this->_get(6);
    }
    
    /**
     * Set <resources> value
     *
     * @param \google\genomics\v1alpha2\PipelineResources $value
     * @return \google\genomics\v1alpha2\Pipeline
     */
    public function setResources(\google\genomics\v1alpha2\PipelineResources $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <pipeline_id> has a value
     *
     * @return boolean
     */
    public function hasPipelineId(){
      return $this->_has(7);
    }
    
    /**
     * Clear <pipeline_id> value
     *
     * @return \google\genomics\v1alpha2\Pipeline
     */
    public function clearPipelineId(){
      return $this->_clear(7);
    }
    
    /**
     * Get <pipeline_id> value
     *
     * @return string
     */
    public function getPipelineId(){
      return $this->_get(7);
    }
    
    /**
     * Set <pipeline_id> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\Pipeline
     */
    public function setPipelineId( $value){
      return $this->_set(7, $value);
    }
  }
}

namespace google\genomics\v1alpha2 {

  class CreatePipelineRequest extends \DrSlump\Protobuf\Message {

    /**  @var \google\genomics\v1alpha2\Pipeline */
    public $pipeline = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1alpha2.CreatePipelineRequest');

      // OPTIONAL MESSAGE pipeline = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "pipeline";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\genomics\v1alpha2\Pipeline';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <pipeline> has a value
     *
     * @return boolean
     */
    public function hasPipeline(){
      return $this->_has(1);
    }
    
    /**
     * Clear <pipeline> value
     *
     * @return \google\genomics\v1alpha2\CreatePipelineRequest
     */
    public function clearPipeline(){
      return $this->_clear(1);
    }
    
    /**
     * Get <pipeline> value
     *
     * @return \google\genomics\v1alpha2\Pipeline
     */
    public function getPipeline(){
      return $this->_get(1);
    }
    
    /**
     * Set <pipeline> value
     *
     * @param \google\genomics\v1alpha2\Pipeline $value
     * @return \google\genomics\v1alpha2\CreatePipelineRequest
     */
    public function setPipeline(\google\genomics\v1alpha2\Pipeline $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\genomics\v1alpha2\RunPipelineArgs {

  class InputsEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $key = null;
    
    /**  @var string */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1alpha2.RunPipelineArgs.InputsEntry');

      // OPTIONAL STRING key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <key> has a value
     *
     * @return boolean
     */
    public function hasKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <key> value
     *
     * @return \google\genomics\v1alpha2\RunPipelineArgs\InputsEntry
     */
    public function clearKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <key> value
     *
     * @return string
     */
    public function getKey(){
      return $this->_get(1);
    }
    
    /**
     * Set <key> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\RunPipelineArgs\InputsEntry
     */
    public function setKey( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\genomics\v1alpha2\RunPipelineArgs\InputsEntry
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return string
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\RunPipelineArgs\InputsEntry
     */
    public function setValue( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\genomics\v1alpha2\RunPipelineArgs {

  class OutputsEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $key = null;
    
    /**  @var string */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1alpha2.RunPipelineArgs.OutputsEntry');

      // OPTIONAL STRING key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <key> has a value
     *
     * @return boolean
     */
    public function hasKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <key> value
     *
     * @return \google\genomics\v1alpha2\RunPipelineArgs\OutputsEntry
     */
    public function clearKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <key> value
     *
     * @return string
     */
    public function getKey(){
      return $this->_get(1);
    }
    
    /**
     * Set <key> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\RunPipelineArgs\OutputsEntry
     */
    public function setKey( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\genomics\v1alpha2\RunPipelineArgs\OutputsEntry
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return string
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\RunPipelineArgs\OutputsEntry
     */
    public function setValue( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\genomics\v1alpha2\RunPipelineArgs {

  class LabelsEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $key = null;
    
    /**  @var string */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1alpha2.RunPipelineArgs.LabelsEntry');

      // OPTIONAL STRING key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <key> has a value
     *
     * @return boolean
     */
    public function hasKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <key> value
     *
     * @return \google\genomics\v1alpha2\RunPipelineArgs\LabelsEntry
     */
    public function clearKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <key> value
     *
     * @return string
     */
    public function getKey(){
      return $this->_get(1);
    }
    
    /**
     * Set <key> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\RunPipelineArgs\LabelsEntry
     */
    public function setKey( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\genomics\v1alpha2\RunPipelineArgs\LabelsEntry
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return string
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\RunPipelineArgs\LabelsEntry
     */
    public function setValue( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\genomics\v1alpha2 {

  class RunPipelineArgs extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $project_id = null;
    
    /**  @var \google\genomics\v1alpha2\RunPipelineArgs\InputsEntry[]  */
    public $inputs = array();
    
    /**  @var \google\genomics\v1alpha2\RunPipelineArgs\OutputsEntry[]  */
    public $outputs = array();
    
    /**  @var \google\genomics\v1alpha2\ServiceAccount */
    public $service_account = null;
    
    /**  @var string */
    public $client_id = null;
    
    /**  @var \google\genomics\v1alpha2\PipelineResources */
    public $resources = null;
    
    /**  @var \google\genomics\v1alpha2\LoggingOptions */
    public $logging = null;
    
    /**  @var \google\protobuf\Duration */
    public $keep_vm_alive_on_failure_duration = null;
    
    /**  @var \google\genomics\v1alpha2\RunPipelineArgs\LabelsEntry[]  */
    public $labels = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1alpha2.RunPipelineArgs');

      // OPTIONAL STRING project_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "project_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE inputs = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "inputs";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\genomics\v1alpha2\RunPipelineArgs\InputsEntry';
      $descriptor->addField($f);

      // REPEATED MESSAGE outputs = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "outputs";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\genomics\v1alpha2\RunPipelineArgs\OutputsEntry';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE service_account = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "service_account";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\genomics\v1alpha2\ServiceAccount';
      $descriptor->addField($f);

      // OPTIONAL STRING client_id = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "client_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE resources = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "resources";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\genomics\v1alpha2\PipelineResources';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE logging = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "logging";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\genomics\v1alpha2\LoggingOptions';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE keep_vm_alive_on_failure_duration = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "keep_vm_alive_on_failure_duration";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Duration';
      $descriptor->addField($f);

      // REPEATED MESSAGE labels = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "labels";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\genomics\v1alpha2\RunPipelineArgs\LabelsEntry';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <project_id> has a value
     *
     * @return boolean
     */
    public function hasProjectId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <project_id> value
     *
     * @return \google\genomics\v1alpha2\RunPipelineArgs
     */
    public function clearProjectId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <project_id> value
     *
     * @return string
     */
    public function getProjectId(){
      return $this->_get(1);
    }
    
    /**
     * Set <project_id> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\RunPipelineArgs
     */
    public function setProjectId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <inputs> has a value
     *
     * @return boolean
     */
    public function hasInputs(){
      return $this->_has(2);
    }
    
    /**
     * Clear <inputs> value
     *
     * @return \google\genomics\v1alpha2\RunPipelineArgs
     */
    public function clearInputs(){
      return $this->_clear(2);
    }
    
    /**
     * Get <inputs> value
     *
     * @param int $idx
     * @return \google\genomics\v1alpha2\RunPipelineArgs\InputsEntry
     */
    public function getInputs($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <inputs> value
     *
     * @param \google\genomics\v1alpha2\RunPipelineArgs\InputsEntry $value
     * @return \google\genomics\v1alpha2\RunPipelineArgs
     */
    public function setInputs(\google\genomics\v1alpha2\RunPipelineArgs\InputsEntry $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <inputs>
     *
     * @return \google\genomics\v1alpha2\RunPipelineArgs\InputsEntry[]
     */
    public function getInputsList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <inputs>
     *
     * @param \google\genomics\v1alpha2\RunPipelineArgs\InputsEntry $value
     * @return \google\genomics\v1alpha2\RunPipelineArgs
     */
    public function addInputs(\google\genomics\v1alpha2\RunPipelineArgs\InputsEntry $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <outputs> has a value
     *
     * @return boolean
     */
    public function hasOutputs(){
      return $this->_has(3);
    }
    
    /**
     * Clear <outputs> value
     *
     * @return \google\genomics\v1alpha2\RunPipelineArgs
     */
    public function clearOutputs(){
      return $this->_clear(3);
    }
    
    /**
     * Get <outputs> value
     *
     * @param int $idx
     * @return \google\genomics\v1alpha2\RunPipelineArgs\OutputsEntry
     */
    public function getOutputs($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <outputs> value
     *
     * @param \google\genomics\v1alpha2\RunPipelineArgs\OutputsEntry $value
     * @return \google\genomics\v1alpha2\RunPipelineArgs
     */
    public function setOutputs(\google\genomics\v1alpha2\RunPipelineArgs\OutputsEntry $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <outputs>
     *
     * @return \google\genomics\v1alpha2\RunPipelineArgs\OutputsEntry[]
     */
    public function getOutputsList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <outputs>
     *
     * @param \google\genomics\v1alpha2\RunPipelineArgs\OutputsEntry $value
     * @return \google\genomics\v1alpha2\RunPipelineArgs
     */
    public function addOutputs(\google\genomics\v1alpha2\RunPipelineArgs\OutputsEntry $value){
     return $this->_add(3, $value);
    }
    
    /**
     * Check if <service_account> has a value
     *
     * @return boolean
     */
    public function hasServiceAccount(){
      return $this->_has(4);
    }
    
    /**
     * Clear <service_account> value
     *
     * @return \google\genomics\v1alpha2\RunPipelineArgs
     */
    public function clearServiceAccount(){
      return $this->_clear(4);
    }
    
    /**
     * Get <service_account> value
     *
     * @return \google\genomics\v1alpha2\ServiceAccount
     */
    public function getServiceAccount(){
      return $this->_get(4);
    }
    
    /**
     * Set <service_account> value
     *
     * @param \google\genomics\v1alpha2\ServiceAccount $value
     * @return \google\genomics\v1alpha2\RunPipelineArgs
     */
    public function setServiceAccount(\google\genomics\v1alpha2\ServiceAccount $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <client_id> has a value
     *
     * @return boolean
     */
    public function hasClientId(){
      return $this->_has(5);
    }
    
    /**
     * Clear <client_id> value
     *
     * @return \google\genomics\v1alpha2\RunPipelineArgs
     */
    public function clearClientId(){
      return $this->_clear(5);
    }
    
    /**
     * Get <client_id> value
     *
     * @return string
     */
    public function getClientId(){
      return $this->_get(5);
    }
    
    /**
     * Set <client_id> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\RunPipelineArgs
     */
    public function setClientId( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <resources> has a value
     *
     * @return boolean
     */
    public function hasResources(){
      return $this->_has(6);
    }
    
    /**
     * Clear <resources> value
     *
     * @return \google\genomics\v1alpha2\RunPipelineArgs
     */
    public function clearResources(){
      return $this->_clear(6);
    }
    
    /**
     * Get <resources> value
     *
     * @return \google\genomics\v1alpha2\PipelineResources
     */
    public function getResources(){
      return $this->_get(6);
    }
    
    /**
     * Set <resources> value
     *
     * @param \google\genomics\v1alpha2\PipelineResources $value
     * @return \google\genomics\v1alpha2\RunPipelineArgs
     */
    public function setResources(\google\genomics\v1alpha2\PipelineResources $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <logging> has a value
     *
     * @return boolean
     */
    public function hasLogging(){
      return $this->_has(7);
    }
    
    /**
     * Clear <logging> value
     *
     * @return \google\genomics\v1alpha2\RunPipelineArgs
     */
    public function clearLogging(){
      return $this->_clear(7);
    }
    
    /**
     * Get <logging> value
     *
     * @return \google\genomics\v1alpha2\LoggingOptions
     */
    public function getLogging(){
      return $this->_get(7);
    }
    
    /**
     * Set <logging> value
     *
     * @param \google\genomics\v1alpha2\LoggingOptions $value
     * @return \google\genomics\v1alpha2\RunPipelineArgs
     */
    public function setLogging(\google\genomics\v1alpha2\LoggingOptions $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <keep_vm_alive_on_failure_duration> has a value
     *
     * @return boolean
     */
    public function hasKeepVmAliveOnFailureDuration(){
      return $this->_has(8);
    }
    
    /**
     * Clear <keep_vm_alive_on_failure_duration> value
     *
     * @return \google\genomics\v1alpha2\RunPipelineArgs
     */
    public function clearKeepVmAliveOnFailureDuration(){
      return $this->_clear(8);
    }
    
    /**
     * Get <keep_vm_alive_on_failure_duration> value
     *
     * @return \google\protobuf\Duration
     */
    public function getKeepVmAliveOnFailureDuration(){
      return $this->_get(8);
    }
    
    /**
     * Set <keep_vm_alive_on_failure_duration> value
     *
     * @param \google\protobuf\Duration $value
     * @return \google\genomics\v1alpha2\RunPipelineArgs
     */
    public function setKeepVmAliveOnFailureDuration(\google\protobuf\Duration $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <labels> has a value
     *
     * @return boolean
     */
    public function hasLabels(){
      return $this->_has(9);
    }
    
    /**
     * Clear <labels> value
     *
     * @return \google\genomics\v1alpha2\RunPipelineArgs
     */
    public function clearLabels(){
      return $this->_clear(9);
    }
    
    /**
     * Get <labels> value
     *
     * @param int $idx
     * @return \google\genomics\v1alpha2\RunPipelineArgs\LabelsEntry
     */
    public function getLabels($idx = NULL){
      return $this->_get(9, $idx);
    }
    
    /**
     * Set <labels> value
     *
     * @param \google\genomics\v1alpha2\RunPipelineArgs\LabelsEntry $value
     * @return \google\genomics\v1alpha2\RunPipelineArgs
     */
    public function setLabels(\google\genomics\v1alpha2\RunPipelineArgs\LabelsEntry $value, $idx = NULL){
      return $this->_set(9, $value, $idx);
    }
    
    /**
     * Get all elements of <labels>
     *
     * @return \google\genomics\v1alpha2\RunPipelineArgs\LabelsEntry[]
     */
    public function getLabelsList(){
     return $this->_get(9);
    }
    
    /**
     * Add a new element to <labels>
     *
     * @param \google\genomics\v1alpha2\RunPipelineArgs\LabelsEntry $value
     * @return \google\genomics\v1alpha2\RunPipelineArgs
     */
    public function addLabels(\google\genomics\v1alpha2\RunPipelineArgs\LabelsEntry $value){
     return $this->_add(9, $value);
    }
  }
}

namespace google\genomics\v1alpha2 {

  class RunPipelineRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $pipeline_id = null;
    
    /**  @var \google\genomics\v1alpha2\Pipeline */
    public $ephemeral_pipeline = null;
    
    /**  @var \google\genomics\v1alpha2\RunPipelineArgs */
    public $pipeline_args = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1alpha2.RunPipelineRequest');

      // OPTIONAL STRING pipeline_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "pipeline_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE ephemeral_pipeline = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "ephemeral_pipeline";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\genomics\v1alpha2\Pipeline';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE pipeline_args = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "pipeline_args";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\genomics\v1alpha2\RunPipelineArgs';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <pipeline_id> has a value
     *
     * @return boolean
     */
    public function hasPipelineId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <pipeline_id> value
     *
     * @return \google\genomics\v1alpha2\RunPipelineRequest
     */
    public function clearPipelineId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <pipeline_id> value
     *
     * @return string
     */
    public function getPipelineId(){
      return $this->_get(1);
    }
    
    /**
     * Set <pipeline_id> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\RunPipelineRequest
     */
    public function setPipelineId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <ephemeral_pipeline> has a value
     *
     * @return boolean
     */
    public function hasEphemeralPipeline(){
      return $this->_has(2);
    }
    
    /**
     * Clear <ephemeral_pipeline> value
     *
     * @return \google\genomics\v1alpha2\RunPipelineRequest
     */
    public function clearEphemeralPipeline(){
      return $this->_clear(2);
    }
    
    /**
     * Get <ephemeral_pipeline> value
     *
     * @return \google\genomics\v1alpha2\Pipeline
     */
    public function getEphemeralPipeline(){
      return $this->_get(2);
    }
    
    /**
     * Set <ephemeral_pipeline> value
     *
     * @param \google\genomics\v1alpha2\Pipeline $value
     * @return \google\genomics\v1alpha2\RunPipelineRequest
     */
    public function setEphemeralPipeline(\google\genomics\v1alpha2\Pipeline $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <pipeline_args> has a value
     *
     * @return boolean
     */
    public function hasPipelineArgs(){
      return $this->_has(3);
    }
    
    /**
     * Clear <pipeline_args> value
     *
     * @return \google\genomics\v1alpha2\RunPipelineRequest
     */
    public function clearPipelineArgs(){
      return $this->_clear(3);
    }
    
    /**
     * Get <pipeline_args> value
     *
     * @return \google\genomics\v1alpha2\RunPipelineArgs
     */
    public function getPipelineArgs(){
      return $this->_get(3);
    }
    
    /**
     * Set <pipeline_args> value
     *
     * @param \google\genomics\v1alpha2\RunPipelineArgs $value
     * @return \google\genomics\v1alpha2\RunPipelineRequest
     */
    public function setPipelineArgs(\google\genomics\v1alpha2\RunPipelineArgs $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\genomics\v1alpha2 {

  class GetPipelineRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $pipeline_id = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1alpha2.GetPipelineRequest');

      // OPTIONAL STRING pipeline_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "pipeline_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <pipeline_id> has a value
     *
     * @return boolean
     */
    public function hasPipelineId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <pipeline_id> value
     *
     * @return \google\genomics\v1alpha2\GetPipelineRequest
     */
    public function clearPipelineId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <pipeline_id> value
     *
     * @return string
     */
    public function getPipelineId(){
      return $this->_get(1);
    }
    
    /**
     * Set <pipeline_id> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\GetPipelineRequest
     */
    public function setPipelineId( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\genomics\v1alpha2 {

  class ListPipelinesRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $project_id = null;
    
    /**  @var string */
    public $name_prefix = null;
    
    /**  @var int */
    public $page_size = null;
    
    /**  @var string */
    public $page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1alpha2.ListPipelinesRequest');

      // OPTIONAL STRING project_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "project_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING name_prefix = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "name_prefix";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 page_size = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "page_size";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING page_token = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <project_id> has a value
     *
     * @return boolean
     */
    public function hasProjectId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <project_id> value
     *
     * @return \google\genomics\v1alpha2\ListPipelinesRequest
     */
    public function clearProjectId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <project_id> value
     *
     * @return string
     */
    public function getProjectId(){
      return $this->_get(1);
    }
    
    /**
     * Set <project_id> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\ListPipelinesRequest
     */
    public function setProjectId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <name_prefix> has a value
     *
     * @return boolean
     */
    public function hasNamePrefix(){
      return $this->_has(2);
    }
    
    /**
     * Clear <name_prefix> value
     *
     * @return \google\genomics\v1alpha2\ListPipelinesRequest
     */
    public function clearNamePrefix(){
      return $this->_clear(2);
    }
    
    /**
     * Get <name_prefix> value
     *
     * @return string
     */
    public function getNamePrefix(){
      return $this->_get(2);
    }
    
    /**
     * Set <name_prefix> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\ListPipelinesRequest
     */
    public function setNamePrefix( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <page_size> has a value
     *
     * @return boolean
     */
    public function hasPageSize(){
      return $this->_has(3);
    }
    
    /**
     * Clear <page_size> value
     *
     * @return \google\genomics\v1alpha2\ListPipelinesRequest
     */
    public function clearPageSize(){
      return $this->_clear(3);
    }
    
    /**
     * Get <page_size> value
     *
     * @return int
     */
    public function getPageSize(){
      return $this->_get(3);
    }
    
    /**
     * Set <page_size> value
     *
     * @param int $value
     * @return \google\genomics\v1alpha2\ListPipelinesRequest
     */
    public function setPageSize( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <page_token> has a value
     *
     * @return boolean
     */
    public function hasPageToken(){
      return $this->_has(4);
    }
    
    /**
     * Clear <page_token> value
     *
     * @return \google\genomics\v1alpha2\ListPipelinesRequest
     */
    public function clearPageToken(){
      return $this->_clear(4);
    }
    
    /**
     * Get <page_token> value
     *
     * @return string
     */
    public function getPageToken(){
      return $this->_get(4);
    }
    
    /**
     * Set <page_token> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\ListPipelinesRequest
     */
    public function setPageToken( $value){
      return $this->_set(4, $value);
    }
  }
}

namespace google\genomics\v1alpha2 {

  class ListPipelinesResponse extends \DrSlump\Protobuf\Message {

    /**  @var \google\genomics\v1alpha2\Pipeline[]  */
    public $pipelines = array();
    
    /**  @var string */
    public $next_page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1alpha2.ListPipelinesResponse');

      // REPEATED MESSAGE pipelines = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "pipelines";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\genomics\v1alpha2\Pipeline';
      $descriptor->addField($f);

      // OPTIONAL STRING next_page_token = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "next_page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <pipelines> has a value
     *
     * @return boolean
     */
    public function hasPipelines(){
      return $this->_has(1);
    }
    
    /**
     * Clear <pipelines> value
     *
     * @return \google\genomics\v1alpha2\ListPipelinesResponse
     */
    public function clearPipelines(){
      return $this->_clear(1);
    }
    
    /**
     * Get <pipelines> value
     *
     * @param int $idx
     * @return \google\genomics\v1alpha2\Pipeline
     */
    public function getPipelines($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <pipelines> value
     *
     * @param \google\genomics\v1alpha2\Pipeline $value
     * @return \google\genomics\v1alpha2\ListPipelinesResponse
     */
    public function setPipelines(\google\genomics\v1alpha2\Pipeline $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <pipelines>
     *
     * @return \google\genomics\v1alpha2\Pipeline[]
     */
    public function getPipelinesList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <pipelines>
     *
     * @param \google\genomics\v1alpha2\Pipeline $value
     * @return \google\genomics\v1alpha2\ListPipelinesResponse
     */
    public function addPipelines(\google\genomics\v1alpha2\Pipeline $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <next_page_token> has a value
     *
     * @return boolean
     */
    public function hasNextPageToken(){
      return $this->_has(2);
    }
    
    /**
     * Clear <next_page_token> value
     *
     * @return \google\genomics\v1alpha2\ListPipelinesResponse
     */
    public function clearNextPageToken(){
      return $this->_clear(2);
    }
    
    /**
     * Get <next_page_token> value
     *
     * @return string
     */
    public function getNextPageToken(){
      return $this->_get(2);
    }
    
    /**
     * Set <next_page_token> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\ListPipelinesResponse
     */
    public function setNextPageToken( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\genomics\v1alpha2 {

  class DeletePipelineRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $pipeline_id = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1alpha2.DeletePipelineRequest');

      // OPTIONAL STRING pipeline_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "pipeline_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <pipeline_id> has a value
     *
     * @return boolean
     */
    public function hasPipelineId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <pipeline_id> value
     *
     * @return \google\genomics\v1alpha2\DeletePipelineRequest
     */
    public function clearPipelineId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <pipeline_id> value
     *
     * @return string
     */
    public function getPipelineId(){
      return $this->_get(1);
    }
    
    /**
     * Set <pipeline_id> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\DeletePipelineRequest
     */
    public function setPipelineId( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\genomics\v1alpha2 {

  class GetControllerConfigRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $operation_id = null;
    
    /**  @var int */
    public $validation_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1alpha2.GetControllerConfigRequest');

      // OPTIONAL STRING operation_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "operation_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT64 validation_token = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "validation_token";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <operation_id> has a value
     *
     * @return boolean
     */
    public function hasOperationId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <operation_id> value
     *
     * @return \google\genomics\v1alpha2\GetControllerConfigRequest
     */
    public function clearOperationId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <operation_id> value
     *
     * @return string
     */
    public function getOperationId(){
      return $this->_get(1);
    }
    
    /**
     * Set <operation_id> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\GetControllerConfigRequest
     */
    public function setOperationId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <validation_token> has a value
     *
     * @return boolean
     */
    public function hasValidationToken(){
      return $this->_has(2);
    }
    
    /**
     * Clear <validation_token> value
     *
     * @return \google\genomics\v1alpha2\GetControllerConfigRequest
     */
    public function clearValidationToken(){
      return $this->_clear(2);
    }
    
    /**
     * Get <validation_token> value
     *
     * @return int
     */
    public function getValidationToken(){
      return $this->_get(2);
    }
    
    /**
     * Set <validation_token> value
     *
     * @param int $value
     * @return \google\genomics\v1alpha2\GetControllerConfigRequest
     */
    public function setValidationToken( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\genomics\v1alpha2\ControllerConfig {

  class RepeatedString extends \DrSlump\Protobuf\Message {

    /**  @var string[]  */
    public $values = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1alpha2.ControllerConfig.RepeatedString');

      // REPEATED STRING values = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "values";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <values> has a value
     *
     * @return boolean
     */
    public function hasValues(){
      return $this->_has(1);
    }
    
    /**
     * Clear <values> value
     *
     * @return \google\genomics\v1alpha2\ControllerConfig\RepeatedString
     */
    public function clearValues(){
      return $this->_clear(1);
    }
    
    /**
     * Get <values> value
     *
     * @param int $idx
     * @return string
     */
    public function getValues($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <values> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\ControllerConfig\RepeatedString
     */
    public function setValues( $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <values>
     *
     * @return string[]
     */
    public function getValuesList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <values>
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\ControllerConfig\RepeatedString
     */
    public function addValues( $value){
     return $this->_add(1, $value);
    }
  }
}

namespace google\genomics\v1alpha2\ControllerConfig {

  class VarsEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $key = null;
    
    /**  @var string */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1alpha2.ControllerConfig.VarsEntry');

      // OPTIONAL STRING key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <key> has a value
     *
     * @return boolean
     */
    public function hasKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <key> value
     *
     * @return \google\genomics\v1alpha2\ControllerConfig\VarsEntry
     */
    public function clearKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <key> value
     *
     * @return string
     */
    public function getKey(){
      return $this->_get(1);
    }
    
    /**
     * Set <key> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\ControllerConfig\VarsEntry
     */
    public function setKey( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\genomics\v1alpha2\ControllerConfig\VarsEntry
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return string
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\ControllerConfig\VarsEntry
     */
    public function setValue( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\genomics\v1alpha2\ControllerConfig {

  class DisksEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $key = null;
    
    /**  @var string */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1alpha2.ControllerConfig.DisksEntry');

      // OPTIONAL STRING key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <key> has a value
     *
     * @return boolean
     */
    public function hasKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <key> value
     *
     * @return \google\genomics\v1alpha2\ControllerConfig\DisksEntry
     */
    public function clearKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <key> value
     *
     * @return string
     */
    public function getKey(){
      return $this->_get(1);
    }
    
    /**
     * Set <key> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\ControllerConfig\DisksEntry
     */
    public function setKey( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\genomics\v1alpha2\ControllerConfig\DisksEntry
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return string
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\ControllerConfig\DisksEntry
     */
    public function setValue( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\genomics\v1alpha2\ControllerConfig {

  class GcsSourcesEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $key = null;
    
    /**  @var \google\genomics\v1alpha2\ControllerConfig\RepeatedString */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1alpha2.ControllerConfig.GcsSourcesEntry');

      // OPTIONAL STRING key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\genomics\v1alpha2\ControllerConfig\RepeatedString';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <key> has a value
     *
     * @return boolean
     */
    public function hasKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <key> value
     *
     * @return \google\genomics\v1alpha2\ControllerConfig\GcsSourcesEntry
     */
    public function clearKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <key> value
     *
     * @return string
     */
    public function getKey(){
      return $this->_get(1);
    }
    
    /**
     * Set <key> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\ControllerConfig\GcsSourcesEntry
     */
    public function setKey( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\genomics\v1alpha2\ControllerConfig\GcsSourcesEntry
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return \google\genomics\v1alpha2\ControllerConfig\RepeatedString
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param \google\genomics\v1alpha2\ControllerConfig\RepeatedString $value
     * @return \google\genomics\v1alpha2\ControllerConfig\GcsSourcesEntry
     */
    public function setValue(\google\genomics\v1alpha2\ControllerConfig\RepeatedString $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\genomics\v1alpha2\ControllerConfig {

  class GcsSinksEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $key = null;
    
    /**  @var \google\genomics\v1alpha2\ControllerConfig\RepeatedString */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1alpha2.ControllerConfig.GcsSinksEntry');

      // OPTIONAL STRING key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\genomics\v1alpha2\ControllerConfig\RepeatedString';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <key> has a value
     *
     * @return boolean
     */
    public function hasKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <key> value
     *
     * @return \google\genomics\v1alpha2\ControllerConfig\GcsSinksEntry
     */
    public function clearKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <key> value
     *
     * @return string
     */
    public function getKey(){
      return $this->_get(1);
    }
    
    /**
     * Set <key> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\ControllerConfig\GcsSinksEntry
     */
    public function setKey( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\genomics\v1alpha2\ControllerConfig\GcsSinksEntry
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return \google\genomics\v1alpha2\ControllerConfig\RepeatedString
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param \google\genomics\v1alpha2\ControllerConfig\RepeatedString $value
     * @return \google\genomics\v1alpha2\ControllerConfig\GcsSinksEntry
     */
    public function setValue(\google\genomics\v1alpha2\ControllerConfig\RepeatedString $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\genomics\v1alpha2 {

  class ControllerConfig extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $image = null;
    
    /**  @var string */
    public $cmd = null;
    
    /**  @var string */
    public $gcs_log_path = null;
    
    /**  @var string */
    public $machine_type = null;
    
    /**  @var \google\genomics\v1alpha2\ControllerConfig\VarsEntry[]  */
    public $vars = array();
    
    /**  @var \google\genomics\v1alpha2\ControllerConfig\DisksEntry[]  */
    public $disks = array();
    
    /**  @var \google\genomics\v1alpha2\ControllerConfig\GcsSourcesEntry[]  */
    public $gcs_sources = array();
    
    /**  @var \google\genomics\v1alpha2\ControllerConfig\GcsSinksEntry[]  */
    public $gcs_sinks = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1alpha2.ControllerConfig');

      // OPTIONAL STRING image = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "image";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING cmd = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "cmd";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING gcs_log_path = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "gcs_log_path";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING machine_type = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "machine_type";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE vars = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "vars";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\genomics\v1alpha2\ControllerConfig\VarsEntry';
      $descriptor->addField($f);

      // REPEATED MESSAGE disks = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "disks";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\genomics\v1alpha2\ControllerConfig\DisksEntry';
      $descriptor->addField($f);

      // REPEATED MESSAGE gcs_sources = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "gcs_sources";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\genomics\v1alpha2\ControllerConfig\GcsSourcesEntry';
      $descriptor->addField($f);

      // REPEATED MESSAGE gcs_sinks = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "gcs_sinks";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\genomics\v1alpha2\ControllerConfig\GcsSinksEntry';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <image> has a value
     *
     * @return boolean
     */
    public function hasImage(){
      return $this->_has(1);
    }
    
    /**
     * Clear <image> value
     *
     * @return \google\genomics\v1alpha2\ControllerConfig
     */
    public function clearImage(){
      return $this->_clear(1);
    }
    
    /**
     * Get <image> value
     *
     * @return string
     */
    public function getImage(){
      return $this->_get(1);
    }
    
    /**
     * Set <image> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\ControllerConfig
     */
    public function setImage( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <cmd> has a value
     *
     * @return boolean
     */
    public function hasCmd(){
      return $this->_has(2);
    }
    
    /**
     * Clear <cmd> value
     *
     * @return \google\genomics\v1alpha2\ControllerConfig
     */
    public function clearCmd(){
      return $this->_clear(2);
    }
    
    /**
     * Get <cmd> value
     *
     * @return string
     */
    public function getCmd(){
      return $this->_get(2);
    }
    
    /**
     * Set <cmd> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\ControllerConfig
     */
    public function setCmd( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <gcs_log_path> has a value
     *
     * @return boolean
     */
    public function hasGcsLogPath(){
      return $this->_has(3);
    }
    
    /**
     * Clear <gcs_log_path> value
     *
     * @return \google\genomics\v1alpha2\ControllerConfig
     */
    public function clearGcsLogPath(){
      return $this->_clear(3);
    }
    
    /**
     * Get <gcs_log_path> value
     *
     * @return string
     */
    public function getGcsLogPath(){
      return $this->_get(3);
    }
    
    /**
     * Set <gcs_log_path> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\ControllerConfig
     */
    public function setGcsLogPath( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <machine_type> has a value
     *
     * @return boolean
     */
    public function hasMachineType(){
      return $this->_has(4);
    }
    
    /**
     * Clear <machine_type> value
     *
     * @return \google\genomics\v1alpha2\ControllerConfig
     */
    public function clearMachineType(){
      return $this->_clear(4);
    }
    
    /**
     * Get <machine_type> value
     *
     * @return string
     */
    public function getMachineType(){
      return $this->_get(4);
    }
    
    /**
     * Set <machine_type> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\ControllerConfig
     */
    public function setMachineType( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <vars> has a value
     *
     * @return boolean
     */
    public function hasVars(){
      return $this->_has(5);
    }
    
    /**
     * Clear <vars> value
     *
     * @return \google\genomics\v1alpha2\ControllerConfig
     */
    public function clearVars(){
      return $this->_clear(5);
    }
    
    /**
     * Get <vars> value
     *
     * @param int $idx
     * @return \google\genomics\v1alpha2\ControllerConfig\VarsEntry
     */
    public function getVars($idx = NULL){
      return $this->_get(5, $idx);
    }
    
    /**
     * Set <vars> value
     *
     * @param \google\genomics\v1alpha2\ControllerConfig\VarsEntry $value
     * @return \google\genomics\v1alpha2\ControllerConfig
     */
    public function setVars(\google\genomics\v1alpha2\ControllerConfig\VarsEntry $value, $idx = NULL){
      return $this->_set(5, $value, $idx);
    }
    
    /**
     * Get all elements of <vars>
     *
     * @return \google\genomics\v1alpha2\ControllerConfig\VarsEntry[]
     */
    public function getVarsList(){
     return $this->_get(5);
    }
    
    /**
     * Add a new element to <vars>
     *
     * @param \google\genomics\v1alpha2\ControllerConfig\VarsEntry $value
     * @return \google\genomics\v1alpha2\ControllerConfig
     */
    public function addVars(\google\genomics\v1alpha2\ControllerConfig\VarsEntry $value){
     return $this->_add(5, $value);
    }
    
    /**
     * Check if <disks> has a value
     *
     * @return boolean
     */
    public function hasDisks(){
      return $this->_has(6);
    }
    
    /**
     * Clear <disks> value
     *
     * @return \google\genomics\v1alpha2\ControllerConfig
     */
    public function clearDisks(){
      return $this->_clear(6);
    }
    
    /**
     * Get <disks> value
     *
     * @param int $idx
     * @return \google\genomics\v1alpha2\ControllerConfig\DisksEntry
     */
    public function getDisks($idx = NULL){
      return $this->_get(6, $idx);
    }
    
    /**
     * Set <disks> value
     *
     * @param \google\genomics\v1alpha2\ControllerConfig\DisksEntry $value
     * @return \google\genomics\v1alpha2\ControllerConfig
     */
    public function setDisks(\google\genomics\v1alpha2\ControllerConfig\DisksEntry $value, $idx = NULL){
      return $this->_set(6, $value, $idx);
    }
    
    /**
     * Get all elements of <disks>
     *
     * @return \google\genomics\v1alpha2\ControllerConfig\DisksEntry[]
     */
    public function getDisksList(){
     return $this->_get(6);
    }
    
    /**
     * Add a new element to <disks>
     *
     * @param \google\genomics\v1alpha2\ControllerConfig\DisksEntry $value
     * @return \google\genomics\v1alpha2\ControllerConfig
     */
    public function addDisks(\google\genomics\v1alpha2\ControllerConfig\DisksEntry $value){
     return $this->_add(6, $value);
    }
    
    /**
     * Check if <gcs_sources> has a value
     *
     * @return boolean
     */
    public function hasGcsSources(){
      return $this->_has(7);
    }
    
    /**
     * Clear <gcs_sources> value
     *
     * @return \google\genomics\v1alpha2\ControllerConfig
     */
    public function clearGcsSources(){
      return $this->_clear(7);
    }
    
    /**
     * Get <gcs_sources> value
     *
     * @param int $idx
     * @return \google\genomics\v1alpha2\ControllerConfig\GcsSourcesEntry
     */
    public function getGcsSources($idx = NULL){
      return $this->_get(7, $idx);
    }
    
    /**
     * Set <gcs_sources> value
     *
     * @param \google\genomics\v1alpha2\ControllerConfig\GcsSourcesEntry $value
     * @return \google\genomics\v1alpha2\ControllerConfig
     */
    public function setGcsSources(\google\genomics\v1alpha2\ControllerConfig\GcsSourcesEntry $value, $idx = NULL){
      return $this->_set(7, $value, $idx);
    }
    
    /**
     * Get all elements of <gcs_sources>
     *
     * @return \google\genomics\v1alpha2\ControllerConfig\GcsSourcesEntry[]
     */
    public function getGcsSourcesList(){
     return $this->_get(7);
    }
    
    /**
     * Add a new element to <gcs_sources>
     *
     * @param \google\genomics\v1alpha2\ControllerConfig\GcsSourcesEntry $value
     * @return \google\genomics\v1alpha2\ControllerConfig
     */
    public function addGcsSources(\google\genomics\v1alpha2\ControllerConfig\GcsSourcesEntry $value){
     return $this->_add(7, $value);
    }
    
    /**
     * Check if <gcs_sinks> has a value
     *
     * @return boolean
     */
    public function hasGcsSinks(){
      return $this->_has(8);
    }
    
    /**
     * Clear <gcs_sinks> value
     *
     * @return \google\genomics\v1alpha2\ControllerConfig
     */
    public function clearGcsSinks(){
      return $this->_clear(8);
    }
    
    /**
     * Get <gcs_sinks> value
     *
     * @param int $idx
     * @return \google\genomics\v1alpha2\ControllerConfig\GcsSinksEntry
     */
    public function getGcsSinks($idx = NULL){
      return $this->_get(8, $idx);
    }
    
    /**
     * Set <gcs_sinks> value
     *
     * @param \google\genomics\v1alpha2\ControllerConfig\GcsSinksEntry $value
     * @return \google\genomics\v1alpha2\ControllerConfig
     */
    public function setGcsSinks(\google\genomics\v1alpha2\ControllerConfig\GcsSinksEntry $value, $idx = NULL){
      return $this->_set(8, $value, $idx);
    }
    
    /**
     * Get all elements of <gcs_sinks>
     *
     * @return \google\genomics\v1alpha2\ControllerConfig\GcsSinksEntry[]
     */
    public function getGcsSinksList(){
     return $this->_get(8);
    }
    
    /**
     * Add a new element to <gcs_sinks>
     *
     * @param \google\genomics\v1alpha2\ControllerConfig\GcsSinksEntry $value
     * @return \google\genomics\v1alpha2\ControllerConfig
     */
    public function addGcsSinks(\google\genomics\v1alpha2\ControllerConfig\GcsSinksEntry $value){
     return $this->_add(8, $value);
    }
  }
}

namespace google\genomics\v1alpha2 {

  class TimestampEvent extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $description = null;
    
    /**  @var \google\protobuf\Timestamp */
    public $timestamp = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1alpha2.TimestampEvent');

      // OPTIONAL STRING description = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "description";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE timestamp = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "timestamp";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Timestamp';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <description> has a value
     *
     * @return boolean
     */
    public function hasDescription(){
      return $this->_has(1);
    }
    
    /**
     * Clear <description> value
     *
     * @return \google\genomics\v1alpha2\TimestampEvent
     */
    public function clearDescription(){
      return $this->_clear(1);
    }
    
    /**
     * Get <description> value
     *
     * @return string
     */
    public function getDescription(){
      return $this->_get(1);
    }
    
    /**
     * Set <description> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\TimestampEvent
     */
    public function setDescription( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <timestamp> has a value
     *
     * @return boolean
     */
    public function hasTimestamp(){
      return $this->_has(2);
    }
    
    /**
     * Clear <timestamp> value
     *
     * @return \google\genomics\v1alpha2\TimestampEvent
     */
    public function clearTimestamp(){
      return $this->_clear(2);
    }
    
    /**
     * Get <timestamp> value
     *
     * @return \google\protobuf\Timestamp
     */
    public function getTimestamp(){
      return $this->_get(2);
    }
    
    /**
     * Set <timestamp> value
     *
     * @param \google\protobuf\Timestamp $value
     * @return \google\genomics\v1alpha2\TimestampEvent
     */
    public function setTimestamp(\google\protobuf\Timestamp $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\genomics\v1alpha2 {

  class SetOperationStatusRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $operation_id = null;
    
    /**  @var \google\genomics\v1alpha2\TimestampEvent[]  */
    public $timestamp_events = array();
    
    /**  @var int - \google\rpc\Code */
    public $error_code = null;
    
    /**  @var string */
    public $error_message = null;
    
    /**  @var int */
    public $validation_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1alpha2.SetOperationStatusRequest');

      // OPTIONAL STRING operation_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "operation_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE timestamp_events = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "timestamp_events";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\genomics\v1alpha2\TimestampEvent';
      $descriptor->addField($f);

      // OPTIONAL ENUM error_code = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "error_code";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\rpc\Code';
      $descriptor->addField($f);

      // OPTIONAL STRING error_message = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "error_message";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL UINT64 validation_token = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "validation_token";
      $f->type      = \DrSlump\Protobuf::TYPE_UINT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <operation_id> has a value
     *
     * @return boolean
     */
    public function hasOperationId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <operation_id> value
     *
     * @return \google\genomics\v1alpha2\SetOperationStatusRequest
     */
    public function clearOperationId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <operation_id> value
     *
     * @return string
     */
    public function getOperationId(){
      return $this->_get(1);
    }
    
    /**
     * Set <operation_id> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\SetOperationStatusRequest
     */
    public function setOperationId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <timestamp_events> has a value
     *
     * @return boolean
     */
    public function hasTimestampEvents(){
      return $this->_has(2);
    }
    
    /**
     * Clear <timestamp_events> value
     *
     * @return \google\genomics\v1alpha2\SetOperationStatusRequest
     */
    public function clearTimestampEvents(){
      return $this->_clear(2);
    }
    
    /**
     * Get <timestamp_events> value
     *
     * @param int $idx
     * @return \google\genomics\v1alpha2\TimestampEvent
     */
    public function getTimestampEvents($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <timestamp_events> value
     *
     * @param \google\genomics\v1alpha2\TimestampEvent $value
     * @return \google\genomics\v1alpha2\SetOperationStatusRequest
     */
    public function setTimestampEvents(\google\genomics\v1alpha2\TimestampEvent $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <timestamp_events>
     *
     * @return \google\genomics\v1alpha2\TimestampEvent[]
     */
    public function getTimestampEventsList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <timestamp_events>
     *
     * @param \google\genomics\v1alpha2\TimestampEvent $value
     * @return \google\genomics\v1alpha2\SetOperationStatusRequest
     */
    public function addTimestampEvents(\google\genomics\v1alpha2\TimestampEvent $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <error_code> has a value
     *
     * @return boolean
     */
    public function hasErrorCode(){
      return $this->_has(3);
    }
    
    /**
     * Clear <error_code> value
     *
     * @return \google\genomics\v1alpha2\SetOperationStatusRequest
     */
    public function clearErrorCode(){
      return $this->_clear(3);
    }
    
    /**
     * Get <error_code> value
     *
     * @return int - \google\rpc\Code
     */
    public function getErrorCode(){
      return $this->_get(3);
    }
    
    /**
     * Set <error_code> value
     *
     * @param int - \google\rpc\Code $value
     * @return \google\genomics\v1alpha2\SetOperationStatusRequest
     */
    public function setErrorCode( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <error_message> has a value
     *
     * @return boolean
     */
    public function hasErrorMessage(){
      return $this->_has(4);
    }
    
    /**
     * Clear <error_message> value
     *
     * @return \google\genomics\v1alpha2\SetOperationStatusRequest
     */
    public function clearErrorMessage(){
      return $this->_clear(4);
    }
    
    /**
     * Get <error_message> value
     *
     * @return string
     */
    public function getErrorMessage(){
      return $this->_get(4);
    }
    
    /**
     * Set <error_message> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\SetOperationStatusRequest
     */
    public function setErrorMessage( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <validation_token> has a value
     *
     * @return boolean
     */
    public function hasValidationToken(){
      return $this->_has(5);
    }
    
    /**
     * Clear <validation_token> value
     *
     * @return \google\genomics\v1alpha2\SetOperationStatusRequest
     */
    public function clearValidationToken(){
      return $this->_clear(5);
    }
    
    /**
     * Get <validation_token> value
     *
     * @return int
     */
    public function getValidationToken(){
      return $this->_get(5);
    }
    
    /**
     * Set <validation_token> value
     *
     * @param int $value
     * @return \google\genomics\v1alpha2\SetOperationStatusRequest
     */
    public function setValidationToken( $value){
      return $this->_set(5, $value);
    }
  }
}

namespace google\genomics\v1alpha2 {

  class ServiceAccount extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $email = null;
    
    /**  @var string[]  */
    public $scopes = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1alpha2.ServiceAccount');

      // OPTIONAL STRING email = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "email";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED STRING scopes = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "scopes";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <email> has a value
     *
     * @return boolean
     */
    public function hasEmail(){
      return $this->_has(1);
    }
    
    /**
     * Clear <email> value
     *
     * @return \google\genomics\v1alpha2\ServiceAccount
     */
    public function clearEmail(){
      return $this->_clear(1);
    }
    
    /**
     * Get <email> value
     *
     * @return string
     */
    public function getEmail(){
      return $this->_get(1);
    }
    
    /**
     * Set <email> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\ServiceAccount
     */
    public function setEmail( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <scopes> has a value
     *
     * @return boolean
     */
    public function hasScopes(){
      return $this->_has(2);
    }
    
    /**
     * Clear <scopes> value
     *
     * @return \google\genomics\v1alpha2\ServiceAccount
     */
    public function clearScopes(){
      return $this->_clear(2);
    }
    
    /**
     * Get <scopes> value
     *
     * @param int $idx
     * @return string
     */
    public function getScopes($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <scopes> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\ServiceAccount
     */
    public function setScopes( $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <scopes>
     *
     * @return string[]
     */
    public function getScopesList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <scopes>
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\ServiceAccount
     */
    public function addScopes( $value){
     return $this->_add(2, $value);
    }
  }
}

namespace google\genomics\v1alpha2 {

  class LoggingOptions extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $gcs_path = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1alpha2.LoggingOptions');

      // OPTIONAL STRING gcs_path = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "gcs_path";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <gcs_path> has a value
     *
     * @return boolean
     */
    public function hasGcsPath(){
      return $this->_has(1);
    }
    
    /**
     * Clear <gcs_path> value
     *
     * @return \google\genomics\v1alpha2\LoggingOptions
     */
    public function clearGcsPath(){
      return $this->_clear(1);
    }
    
    /**
     * Get <gcs_path> value
     *
     * @return string
     */
    public function getGcsPath(){
      return $this->_get(1);
    }
    
    /**
     * Set <gcs_path> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\LoggingOptions
     */
    public function setGcsPath( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\genomics\v1alpha2\PipelineResources\Disk {

  class Type extends \DrSlump\Protobuf\Enum {
    const TYPE_UNSPECIFIED = 0;
    const PERSISTENT_HDD = 1;
    const PERSISTENT_SSD = 2;
    const LOCAL_SSD = 3;
  }
}
namespace google\genomics\v1alpha2\PipelineResources {

  class Disk extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var int - \google\genomics\v1alpha2\PipelineResources\Disk\Type */
    public $type = null;
    
    /**  @var int */
    public $size_gb = null;
    
    /**  @var string */
    public $source = null;
    
    /**  @var boolean */
    public $auto_delete = null;
    
    /**  @var string */
    public $mount_point = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1alpha2.PipelineResources.Disk');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL ENUM type = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "type";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\genomics\v1alpha2\PipelineResources\Disk\Type';
      $descriptor->addField($f);

      // OPTIONAL INT32 size_gb = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "size_gb";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING source = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "source";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL auto_delete = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "auto_delete";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING mount_point = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "mount_point";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\genomics\v1alpha2\PipelineResources\Disk
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\PipelineResources\Disk
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <type> has a value
     *
     * @return boolean
     */
    public function hasType(){
      return $this->_has(2);
    }
    
    /**
     * Clear <type> value
     *
     * @return \google\genomics\v1alpha2\PipelineResources\Disk
     */
    public function clearType(){
      return $this->_clear(2);
    }
    
    /**
     * Get <type> value
     *
     * @return int - \google\genomics\v1alpha2\PipelineResources\Disk\Type
     */
    public function getType(){
      return $this->_get(2);
    }
    
    /**
     * Set <type> value
     *
     * @param int - \google\genomics\v1alpha2\PipelineResources\Disk\Type $value
     * @return \google\genomics\v1alpha2\PipelineResources\Disk
     */
    public function setType( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <size_gb> has a value
     *
     * @return boolean
     */
    public function hasSizeGb(){
      return $this->_has(3);
    }
    
    /**
     * Clear <size_gb> value
     *
     * @return \google\genomics\v1alpha2\PipelineResources\Disk
     */
    public function clearSizeGb(){
      return $this->_clear(3);
    }
    
    /**
     * Get <size_gb> value
     *
     * @return int
     */
    public function getSizeGb(){
      return $this->_get(3);
    }
    
    /**
     * Set <size_gb> value
     *
     * @param int $value
     * @return \google\genomics\v1alpha2\PipelineResources\Disk
     */
    public function setSizeGb( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <source> has a value
     *
     * @return boolean
     */
    public function hasSource(){
      return $this->_has(4);
    }
    
    /**
     * Clear <source> value
     *
     * @return \google\genomics\v1alpha2\PipelineResources\Disk
     */
    public function clearSource(){
      return $this->_clear(4);
    }
    
    /**
     * Get <source> value
     *
     * @return string
     */
    public function getSource(){
      return $this->_get(4);
    }
    
    /**
     * Set <source> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\PipelineResources\Disk
     */
    public function setSource( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <auto_delete> has a value
     *
     * @return boolean
     */
    public function hasAutoDelete(){
      return $this->_has(6);
    }
    
    /**
     * Clear <auto_delete> value
     *
     * @return \google\genomics\v1alpha2\PipelineResources\Disk
     */
    public function clearAutoDelete(){
      return $this->_clear(6);
    }
    
    /**
     * Get <auto_delete> value
     *
     * @return boolean
     */
    public function getAutoDelete(){
      return $this->_get(6);
    }
    
    /**
     * Set <auto_delete> value
     *
     * @param boolean $value
     * @return \google\genomics\v1alpha2\PipelineResources\Disk
     */
    public function setAutoDelete( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <mount_point> has a value
     *
     * @return boolean
     */
    public function hasMountPoint(){
      return $this->_has(8);
    }
    
    /**
     * Clear <mount_point> value
     *
     * @return \google\genomics\v1alpha2\PipelineResources\Disk
     */
    public function clearMountPoint(){
      return $this->_clear(8);
    }
    
    /**
     * Get <mount_point> value
     *
     * @return string
     */
    public function getMountPoint(){
      return $this->_get(8);
    }
    
    /**
     * Set <mount_point> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\PipelineResources\Disk
     */
    public function setMountPoint( $value){
      return $this->_set(8, $value);
    }
  }
}

namespace google\genomics\v1alpha2 {

  class PipelineResources extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $minimum_cpu_cores = null;
    
    /**  @var boolean */
    public $preemptible = null;
    
    /**  @var float */
    public $minimum_ram_gb = null;
    
    /**  @var \google\genomics\v1alpha2\PipelineResources\Disk[]  */
    public $disks = array();
    
    /**  @var string[]  */
    public $zones = array();
    
    /**  @var int */
    public $boot_disk_size_gb = null;
    
    /**  @var boolean */
    public $no_address = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1alpha2.PipelineResources');

      // OPTIONAL INT32 minimum_cpu_cores = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "minimum_cpu_cores";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL preemptible = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "preemptible";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL DOUBLE minimum_ram_gb = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "minimum_ram_gb";
      $f->type      = \DrSlump\Protobuf::TYPE_DOUBLE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE disks = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "disks";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\genomics\v1alpha2\PipelineResources\Disk';
      $descriptor->addField($f);

      // REPEATED STRING zones = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "zones";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // OPTIONAL INT32 boot_disk_size_gb = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "boot_disk_size_gb";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL no_address = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "no_address";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <minimum_cpu_cores> has a value
     *
     * @return boolean
     */
    public function hasMinimumCpuCores(){
      return $this->_has(1);
    }
    
    /**
     * Clear <minimum_cpu_cores> value
     *
     * @return \google\genomics\v1alpha2\PipelineResources
     */
    public function clearMinimumCpuCores(){
      return $this->_clear(1);
    }
    
    /**
     * Get <minimum_cpu_cores> value
     *
     * @return int
     */
    public function getMinimumCpuCores(){
      return $this->_get(1);
    }
    
    /**
     * Set <minimum_cpu_cores> value
     *
     * @param int $value
     * @return \google\genomics\v1alpha2\PipelineResources
     */
    public function setMinimumCpuCores( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <preemptible> has a value
     *
     * @return boolean
     */
    public function hasPreemptible(){
      return $this->_has(2);
    }
    
    /**
     * Clear <preemptible> value
     *
     * @return \google\genomics\v1alpha2\PipelineResources
     */
    public function clearPreemptible(){
      return $this->_clear(2);
    }
    
    /**
     * Get <preemptible> value
     *
     * @return boolean
     */
    public function getPreemptible(){
      return $this->_get(2);
    }
    
    /**
     * Set <preemptible> value
     *
     * @param boolean $value
     * @return \google\genomics\v1alpha2\PipelineResources
     */
    public function setPreemptible( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <minimum_ram_gb> has a value
     *
     * @return boolean
     */
    public function hasMinimumRamGb(){
      return $this->_has(3);
    }
    
    /**
     * Clear <minimum_ram_gb> value
     *
     * @return \google\genomics\v1alpha2\PipelineResources
     */
    public function clearMinimumRamGb(){
      return $this->_clear(3);
    }
    
    /**
     * Get <minimum_ram_gb> value
     *
     * @return float
     */
    public function getMinimumRamGb(){
      return $this->_get(3);
    }
    
    /**
     * Set <minimum_ram_gb> value
     *
     * @param float $value
     * @return \google\genomics\v1alpha2\PipelineResources
     */
    public function setMinimumRamGb( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <disks> has a value
     *
     * @return boolean
     */
    public function hasDisks(){
      return $this->_has(4);
    }
    
    /**
     * Clear <disks> value
     *
     * @return \google\genomics\v1alpha2\PipelineResources
     */
    public function clearDisks(){
      return $this->_clear(4);
    }
    
    /**
     * Get <disks> value
     *
     * @param int $idx
     * @return \google\genomics\v1alpha2\PipelineResources\Disk
     */
    public function getDisks($idx = NULL){
      return $this->_get(4, $idx);
    }
    
    /**
     * Set <disks> value
     *
     * @param \google\genomics\v1alpha2\PipelineResources\Disk $value
     * @return \google\genomics\v1alpha2\PipelineResources
     */
    public function setDisks(\google\genomics\v1alpha2\PipelineResources\Disk $value, $idx = NULL){
      return $this->_set(4, $value, $idx);
    }
    
    /**
     * Get all elements of <disks>
     *
     * @return \google\genomics\v1alpha2\PipelineResources\Disk[]
     */
    public function getDisksList(){
     return $this->_get(4);
    }
    
    /**
     * Add a new element to <disks>
     *
     * @param \google\genomics\v1alpha2\PipelineResources\Disk $value
     * @return \google\genomics\v1alpha2\PipelineResources
     */
    public function addDisks(\google\genomics\v1alpha2\PipelineResources\Disk $value){
     return $this->_add(4, $value);
    }
    
    /**
     * Check if <zones> has a value
     *
     * @return boolean
     */
    public function hasZones(){
      return $this->_has(5);
    }
    
    /**
     * Clear <zones> value
     *
     * @return \google\genomics\v1alpha2\PipelineResources
     */
    public function clearZones(){
      return $this->_clear(5);
    }
    
    /**
     * Get <zones> value
     *
     * @param int $idx
     * @return string
     */
    public function getZones($idx = NULL){
      return $this->_get(5, $idx);
    }
    
    /**
     * Set <zones> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\PipelineResources
     */
    public function setZones( $value, $idx = NULL){
      return $this->_set(5, $value, $idx);
    }
    
    /**
     * Get all elements of <zones>
     *
     * @return string[]
     */
    public function getZonesList(){
     return $this->_get(5);
    }
    
    /**
     * Add a new element to <zones>
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\PipelineResources
     */
    public function addZones( $value){
     return $this->_add(5, $value);
    }
    
    /**
     * Check if <boot_disk_size_gb> has a value
     *
     * @return boolean
     */
    public function hasBootDiskSizeGb(){
      return $this->_has(6);
    }
    
    /**
     * Clear <boot_disk_size_gb> value
     *
     * @return \google\genomics\v1alpha2\PipelineResources
     */
    public function clearBootDiskSizeGb(){
      return $this->_clear(6);
    }
    
    /**
     * Get <boot_disk_size_gb> value
     *
     * @return int
     */
    public function getBootDiskSizeGb(){
      return $this->_get(6);
    }
    
    /**
     * Set <boot_disk_size_gb> value
     *
     * @param int $value
     * @return \google\genomics\v1alpha2\PipelineResources
     */
    public function setBootDiskSizeGb( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <no_address> has a value
     *
     * @return boolean
     */
    public function hasNoAddress(){
      return $this->_has(7);
    }
    
    /**
     * Clear <no_address> value
     *
     * @return \google\genomics\v1alpha2\PipelineResources
     */
    public function clearNoAddress(){
      return $this->_clear(7);
    }
    
    /**
     * Get <no_address> value
     *
     * @return boolean
     */
    public function getNoAddress(){
      return $this->_get(7);
    }
    
    /**
     * Set <no_address> value
     *
     * @param boolean $value
     * @return \google\genomics\v1alpha2\PipelineResources
     */
    public function setNoAddress( $value){
      return $this->_set(7, $value);
    }
  }
}

namespace google\genomics\v1alpha2\PipelineParameter {

  class LocalCopy extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $path = null;
    
    /**  @var string */
    public $disk = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1alpha2.PipelineParameter.LocalCopy');

      // OPTIONAL STRING path = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "path";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING disk = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "disk";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <path> has a value
     *
     * @return boolean
     */
    public function hasPath(){
      return $this->_has(1);
    }
    
    /**
     * Clear <path> value
     *
     * @return \google\genomics\v1alpha2\PipelineParameter\LocalCopy
     */
    public function clearPath(){
      return $this->_clear(1);
    }
    
    /**
     * Get <path> value
     *
     * @return string
     */
    public function getPath(){
      return $this->_get(1);
    }
    
    /**
     * Set <path> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\PipelineParameter\LocalCopy
     */
    public function setPath( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <disk> has a value
     *
     * @return boolean
     */
    public function hasDisk(){
      return $this->_has(2);
    }
    
    /**
     * Clear <disk> value
     *
     * @return \google\genomics\v1alpha2\PipelineParameter\LocalCopy
     */
    public function clearDisk(){
      return $this->_clear(2);
    }
    
    /**
     * Get <disk> value
     *
     * @return string
     */
    public function getDisk(){
      return $this->_get(2);
    }
    
    /**
     * Set <disk> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\PipelineParameter\LocalCopy
     */
    public function setDisk( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\genomics\v1alpha2 {

  class PipelineParameter extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var string */
    public $description = null;
    
    /**  @var string */
    public $default_value = null;
    
    /**  @var \google\genomics\v1alpha2\PipelineParameter\LocalCopy */
    public $local_copy = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1alpha2.PipelineParameter');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING description = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "description";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING default_value = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "default_value";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE local_copy = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "local_copy";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\genomics\v1alpha2\PipelineParameter\LocalCopy';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\genomics\v1alpha2\PipelineParameter
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\PipelineParameter
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <description> has a value
     *
     * @return boolean
     */
    public function hasDescription(){
      return $this->_has(2);
    }
    
    /**
     * Clear <description> value
     *
     * @return \google\genomics\v1alpha2\PipelineParameter
     */
    public function clearDescription(){
      return $this->_clear(2);
    }
    
    /**
     * Get <description> value
     *
     * @return string
     */
    public function getDescription(){
      return $this->_get(2);
    }
    
    /**
     * Set <description> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\PipelineParameter
     */
    public function setDescription( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <default_value> has a value
     *
     * @return boolean
     */
    public function hasDefaultValue(){
      return $this->_has(5);
    }
    
    /**
     * Clear <default_value> value
     *
     * @return \google\genomics\v1alpha2\PipelineParameter
     */
    public function clearDefaultValue(){
      return $this->_clear(5);
    }
    
    /**
     * Get <default_value> value
     *
     * @return string
     */
    public function getDefaultValue(){
      return $this->_get(5);
    }
    
    /**
     * Set <default_value> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\PipelineParameter
     */
    public function setDefaultValue( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <local_copy> has a value
     *
     * @return boolean
     */
    public function hasLocalCopy(){
      return $this->_has(6);
    }
    
    /**
     * Clear <local_copy> value
     *
     * @return \google\genomics\v1alpha2\PipelineParameter
     */
    public function clearLocalCopy(){
      return $this->_clear(6);
    }
    
    /**
     * Get <local_copy> value
     *
     * @return \google\genomics\v1alpha2\PipelineParameter\LocalCopy
     */
    public function getLocalCopy(){
      return $this->_get(6);
    }
    
    /**
     * Set <local_copy> value
     *
     * @param \google\genomics\v1alpha2\PipelineParameter\LocalCopy $value
     * @return \google\genomics\v1alpha2\PipelineParameter
     */
    public function setLocalCopy(\google\genomics\v1alpha2\PipelineParameter\LocalCopy $value){
      return $this->_set(6, $value);
    }
  }
}

namespace google\genomics\v1alpha2 {

  class DockerExecutor extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $image_name = null;
    
    /**  @var string */
    public $cmd = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1alpha2.DockerExecutor');

      // OPTIONAL STRING image_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "image_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING cmd = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "cmd";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <image_name> has a value
     *
     * @return boolean
     */
    public function hasImageName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <image_name> value
     *
     * @return \google\genomics\v1alpha2\DockerExecutor
     */
    public function clearImageName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <image_name> value
     *
     * @return string
     */
    public function getImageName(){
      return $this->_get(1);
    }
    
    /**
     * Set <image_name> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\DockerExecutor
     */
    public function setImageName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <cmd> has a value
     *
     * @return boolean
     */
    public function hasCmd(){
      return $this->_has(2);
    }
    
    /**
     * Clear <cmd> value
     *
     * @return \google\genomics\v1alpha2\DockerExecutor
     */
    public function clearCmd(){
      return $this->_clear(2);
    }
    
    /**
     * Get <cmd> value
     *
     * @return string
     */
    public function getCmd(){
      return $this->_get(2);
    }
    
    /**
     * Set <cmd> value
     *
     * @param string $value
     * @return \google\genomics\v1alpha2\DockerExecutor
     */
    public function setCmd( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\genomics\v1alpha2 {

  class PipelinesV1Alpha2Client extends \Grpc\BaseStub {

    public function __construct($hostname, $opts, $channel = null) {
      parent::__construct($hostname, $opts, $channel);
    }
    /**
     * @param google\genomics\v1alpha2\CreatePipelineRequest $input
     */
    public function CreatePipeline(\google\genomics\v1alpha2\CreatePipelineRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.genomics.v1alpha2.PipelinesV1Alpha2/CreatePipeline', $argument, '\google\genomics\v1alpha2\Pipeline::deserialize', $metadata, $options);
    }
    /**
     * @param google\genomics\v1alpha2\RunPipelineRequest $input
     */
    public function RunPipeline(\google\genomics\v1alpha2\RunPipelineRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.genomics.v1alpha2.PipelinesV1Alpha2/RunPipeline', $argument, '\google\longrunning\Operation::deserialize', $metadata, $options);
    }
    /**
     * @param google\genomics\v1alpha2\GetPipelineRequest $input
     */
    public function GetPipeline(\google\genomics\v1alpha2\GetPipelineRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.genomics.v1alpha2.PipelinesV1Alpha2/GetPipeline', $argument, '\google\genomics\v1alpha2\Pipeline::deserialize', $metadata, $options);
    }
    /**
     * @param google\genomics\v1alpha2\ListPipelinesRequest $input
     */
    public function ListPipelines(\google\genomics\v1alpha2\ListPipelinesRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.genomics.v1alpha2.PipelinesV1Alpha2/ListPipelines', $argument, '\google\genomics\v1alpha2\ListPipelinesResponse::deserialize', $metadata, $options);
    }
    /**
     * @param google\genomics\v1alpha2\DeletePipelineRequest $input
     */
    public function DeletePipeline(\google\genomics\v1alpha2\DeletePipelineRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.genomics.v1alpha2.PipelinesV1Alpha2/DeletePipeline', $argument, '\google\protobuf\Empty::deserialize', $metadata, $options);
    }
    /**
     * @param google\genomics\v1alpha2\GetControllerConfigRequest $input
     */
    public function GetControllerConfig(\google\genomics\v1alpha2\GetControllerConfigRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.genomics.v1alpha2.PipelinesV1Alpha2/GetControllerConfig', $argument, '\google\genomics\v1alpha2\ControllerConfig::deserialize', $metadata, $options);
    }
    /**
     * @param google\genomics\v1alpha2\SetOperationStatusRequest $input
     */
    public function SetOperationStatus(\google\genomics\v1alpha2\SetOperationStatusRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.genomics.v1alpha2.PipelinesV1Alpha2/SetOperationStatus', $argument, '\google\protobuf\Empty::deserialize', $metadata, $options);
    }
  }
}
