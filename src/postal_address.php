<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: google/type/postal_address.proto
//   Date: 2017-06-13 04:26:46

namespace google\type {

  class PostalAddress extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $revision = null;
    
    /**  @var string */
    public $region_code = null;
    
    /**  @var string */
    public $language_code = null;
    
    /**  @var string */
    public $postal_code = null;
    
    /**  @var string */
    public $sorting_code = null;
    
    /**  @var string */
    public $administrative_area = null;
    
    /**  @var string */
    public $locality = null;
    
    /**  @var string */
    public $sublocality = null;
    
    /**  @var string[]  */
    public $address_lines = array();
    
    /**  @var string[]  */
    public $recipients = array();
    
    /**  @var string */
    public $organization = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.type.PostalAddress');

      // OPTIONAL INT32 revision = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "revision";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING region_code = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "region_code";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING language_code = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "language_code";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING postal_code = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "postal_code";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING sorting_code = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "sorting_code";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING administrative_area = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "administrative_area";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING locality = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "locality";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING sublocality = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "sublocality";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED STRING address_lines = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "address_lines";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // REPEATED STRING recipients = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "recipients";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // OPTIONAL STRING organization = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "organization";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <revision> has a value
     *
     * @return boolean
     */
    public function hasRevision(){
      return $this->_has(1);
    }
    
    /**
     * Clear <revision> value
     *
     * @return \google\type\PostalAddress
     */
    public function clearRevision(){
      return $this->_clear(1);
    }
    
    /**
     * Get <revision> value
     *
     * @return int
     */
    public function getRevision(){
      return $this->_get(1);
    }
    
    /**
     * Set <revision> value
     *
     * @param int $value
     * @return \google\type\PostalAddress
     */
    public function setRevision( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <region_code> has a value
     *
     * @return boolean
     */
    public function hasRegionCode(){
      return $this->_has(2);
    }
    
    /**
     * Clear <region_code> value
     *
     * @return \google\type\PostalAddress
     */
    public function clearRegionCode(){
      return $this->_clear(2);
    }
    
    /**
     * Get <region_code> value
     *
     * @return string
     */
    public function getRegionCode(){
      return $this->_get(2);
    }
    
    /**
     * Set <region_code> value
     *
     * @param string $value
     * @return \google\type\PostalAddress
     */
    public function setRegionCode( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <language_code> has a value
     *
     * @return boolean
     */
    public function hasLanguageCode(){
      return $this->_has(3);
    }
    
    /**
     * Clear <language_code> value
     *
     * @return \google\type\PostalAddress
     */
    public function clearLanguageCode(){
      return $this->_clear(3);
    }
    
    /**
     * Get <language_code> value
     *
     * @return string
     */
    public function getLanguageCode(){
      return $this->_get(3);
    }
    
    /**
     * Set <language_code> value
     *
     * @param string $value
     * @return \google\type\PostalAddress
     */
    public function setLanguageCode( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <postal_code> has a value
     *
     * @return boolean
     */
    public function hasPostalCode(){
      return $this->_has(4);
    }
    
    /**
     * Clear <postal_code> value
     *
     * @return \google\type\PostalAddress
     */
    public function clearPostalCode(){
      return $this->_clear(4);
    }
    
    /**
     * Get <postal_code> value
     *
     * @return string
     */
    public function getPostalCode(){
      return $this->_get(4);
    }
    
    /**
     * Set <postal_code> value
     *
     * @param string $value
     * @return \google\type\PostalAddress
     */
    public function setPostalCode( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <sorting_code> has a value
     *
     * @return boolean
     */
    public function hasSortingCode(){
      return $this->_has(5);
    }
    
    /**
     * Clear <sorting_code> value
     *
     * @return \google\type\PostalAddress
     */
    public function clearSortingCode(){
      return $this->_clear(5);
    }
    
    /**
     * Get <sorting_code> value
     *
     * @return string
     */
    public function getSortingCode(){
      return $this->_get(5);
    }
    
    /**
     * Set <sorting_code> value
     *
     * @param string $value
     * @return \google\type\PostalAddress
     */
    public function setSortingCode( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <administrative_area> has a value
     *
     * @return boolean
     */
    public function hasAdministrativeArea(){
      return $this->_has(6);
    }
    
    /**
     * Clear <administrative_area> value
     *
     * @return \google\type\PostalAddress
     */
    public function clearAdministrativeArea(){
      return $this->_clear(6);
    }
    
    /**
     * Get <administrative_area> value
     *
     * @return string
     */
    public function getAdministrativeArea(){
      return $this->_get(6);
    }
    
    /**
     * Set <administrative_area> value
     *
     * @param string $value
     * @return \google\type\PostalAddress
     */
    public function setAdministrativeArea( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <locality> has a value
     *
     * @return boolean
     */
    public function hasLocality(){
      return $this->_has(7);
    }
    
    /**
     * Clear <locality> value
     *
     * @return \google\type\PostalAddress
     */
    public function clearLocality(){
      return $this->_clear(7);
    }
    
    /**
     * Get <locality> value
     *
     * @return string
     */
    public function getLocality(){
      return $this->_get(7);
    }
    
    /**
     * Set <locality> value
     *
     * @param string $value
     * @return \google\type\PostalAddress
     */
    public function setLocality( $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <sublocality> has a value
     *
     * @return boolean
     */
    public function hasSublocality(){
      return $this->_has(8);
    }
    
    /**
     * Clear <sublocality> value
     *
     * @return \google\type\PostalAddress
     */
    public function clearSublocality(){
      return $this->_clear(8);
    }
    
    /**
     * Get <sublocality> value
     *
     * @return string
     */
    public function getSublocality(){
      return $this->_get(8);
    }
    
    /**
     * Set <sublocality> value
     *
     * @param string $value
     * @return \google\type\PostalAddress
     */
    public function setSublocality( $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <address_lines> has a value
     *
     * @return boolean
     */
    public function hasAddressLines(){
      return $this->_has(9);
    }
    
    /**
     * Clear <address_lines> value
     *
     * @return \google\type\PostalAddress
     */
    public function clearAddressLines(){
      return $this->_clear(9);
    }
    
    /**
     * Get <address_lines> value
     *
     * @param int $idx
     * @return string
     */
    public function getAddressLines($idx = NULL){
      return $this->_get(9, $idx);
    }
    
    /**
     * Set <address_lines> value
     *
     * @param string $value
     * @return \google\type\PostalAddress
     */
    public function setAddressLines( $value, $idx = NULL){
      return $this->_set(9, $value, $idx);
    }
    
    /**
     * Get all elements of <address_lines>
     *
     * @return string[]
     */
    public function getAddressLinesList(){
     return $this->_get(9);
    }
    
    /**
     * Add a new element to <address_lines>
     *
     * @param string $value
     * @return \google\type\PostalAddress
     */
    public function addAddressLines( $value){
     return $this->_add(9, $value);
    }
    
    /**
     * Check if <recipients> has a value
     *
     * @return boolean
     */
    public function hasRecipients(){
      return $this->_has(10);
    }
    
    /**
     * Clear <recipients> value
     *
     * @return \google\type\PostalAddress
     */
    public function clearRecipients(){
      return $this->_clear(10);
    }
    
    /**
     * Get <recipients> value
     *
     * @param int $idx
     * @return string
     */
    public function getRecipients($idx = NULL){
      return $this->_get(10, $idx);
    }
    
    /**
     * Set <recipients> value
     *
     * @param string $value
     * @return \google\type\PostalAddress
     */
    public function setRecipients( $value, $idx = NULL){
      return $this->_set(10, $value, $idx);
    }
    
    /**
     * Get all elements of <recipients>
     *
     * @return string[]
     */
    public function getRecipientsList(){
     return $this->_get(10);
    }
    
    /**
     * Add a new element to <recipients>
     *
     * @param string $value
     * @return \google\type\PostalAddress
     */
    public function addRecipients( $value){
     return $this->_add(10, $value);
    }
    
    /**
     * Check if <organization> has a value
     *
     * @return boolean
     */
    public function hasOrganization(){
      return $this->_has(11);
    }
    
    /**
     * Clear <organization> value
     *
     * @return \google\type\PostalAddress
     */
    public function clearOrganization(){
      return $this->_clear(11);
    }
    
    /**
     * Get <organization> value
     *
     * @return string
     */
    public function getOrganization(){
      return $this->_get(11);
    }
    
    /**
     * Set <organization> value
     *
     * @param string $value
     * @return \google\type\PostalAddress
     */
    public function setOrganization( $value){
      return $this->_set(11, $value);
    }
  }
}

