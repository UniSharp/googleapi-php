<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: google/appengine/logging/v1/request_log.proto
//   Date: 2017-06-13 04:23:10

namespace google\appengine\logging\v1 {

  class LogLine extends \DrSlump\Protobuf\Message {

    /**  @var \google\protobuf\Timestamp */
    public $time = null;
    
    /**  @var int - \google\logging\type\LogSeverity */
    public $severity = null;
    
    /**  @var string */
    public $log_message = null;
    
    /**  @var \google\appengine\logging\v1\SourceLocation */
    public $source_location = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.logging.v1.LogLine');

      // OPTIONAL MESSAGE time = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Timestamp';
      $descriptor->addField($f);

      // OPTIONAL ENUM severity = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "severity";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\logging\type\LogSeverity';
      $descriptor->addField($f);

      // OPTIONAL STRING log_message = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "log_message";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE source_location = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "source_location";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\appengine\logging\v1\SourceLocation';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <time> has a value
     *
     * @return boolean
     */
    public function hasTime(){
      return $this->_has(1);
    }
    
    /**
     * Clear <time> value
     *
     * @return \google\appengine\logging\v1\LogLine
     */
    public function clearTime(){
      return $this->_clear(1);
    }
    
    /**
     * Get <time> value
     *
     * @return \google\protobuf\Timestamp
     */
    public function getTime(){
      return $this->_get(1);
    }
    
    /**
     * Set <time> value
     *
     * @param \google\protobuf\Timestamp $value
     * @return \google\appengine\logging\v1\LogLine
     */
    public function setTime(\google\protobuf\Timestamp $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <severity> has a value
     *
     * @return boolean
     */
    public function hasSeverity(){
      return $this->_has(2);
    }
    
    /**
     * Clear <severity> value
     *
     * @return \google\appengine\logging\v1\LogLine
     */
    public function clearSeverity(){
      return $this->_clear(2);
    }
    
    /**
     * Get <severity> value
     *
     * @return int - \google\logging\type\LogSeverity
     */
    public function getSeverity(){
      return $this->_get(2);
    }
    
    /**
     * Set <severity> value
     *
     * @param int - \google\logging\type\LogSeverity $value
     * @return \google\appengine\logging\v1\LogLine
     */
    public function setSeverity( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <log_message> has a value
     *
     * @return boolean
     */
    public function hasLogMessage(){
      return $this->_has(3);
    }
    
    /**
     * Clear <log_message> value
     *
     * @return \google\appengine\logging\v1\LogLine
     */
    public function clearLogMessage(){
      return $this->_clear(3);
    }
    
    /**
     * Get <log_message> value
     *
     * @return string
     */
    public function getLogMessage(){
      return $this->_get(3);
    }
    
    /**
     * Set <log_message> value
     *
     * @param string $value
     * @return \google\appengine\logging\v1\LogLine
     */
    public function setLogMessage( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <source_location> has a value
     *
     * @return boolean
     */
    public function hasSourceLocation(){
      return $this->_has(4);
    }
    
    /**
     * Clear <source_location> value
     *
     * @return \google\appengine\logging\v1\LogLine
     */
    public function clearSourceLocation(){
      return $this->_clear(4);
    }
    
    /**
     * Get <source_location> value
     *
     * @return \google\appengine\logging\v1\SourceLocation
     */
    public function getSourceLocation(){
      return $this->_get(4);
    }
    
    /**
     * Set <source_location> value
     *
     * @param \google\appengine\logging\v1\SourceLocation $value
     * @return \google\appengine\logging\v1\LogLine
     */
    public function setSourceLocation(\google\appengine\logging\v1\SourceLocation $value){
      return $this->_set(4, $value);
    }
  }
}

namespace google\appengine\logging\v1 {

  class SourceLocation extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $file = null;
    
    /**  @var int */
    public $line = null;
    
    /**  @var string */
    public $function_name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.logging.v1.SourceLocation');

      // OPTIONAL STRING file = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "file";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 line = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "line";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING function_name = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "function_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <file> has a value
     *
     * @return boolean
     */
    public function hasFile(){
      return $this->_has(1);
    }
    
    /**
     * Clear <file> value
     *
     * @return \google\appengine\logging\v1\SourceLocation
     */
    public function clearFile(){
      return $this->_clear(1);
    }
    
    /**
     * Get <file> value
     *
     * @return string
     */
    public function getFile(){
      return $this->_get(1);
    }
    
    /**
     * Set <file> value
     *
     * @param string $value
     * @return \google\appengine\logging\v1\SourceLocation
     */
    public function setFile( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <line> has a value
     *
     * @return boolean
     */
    public function hasLine(){
      return $this->_has(2);
    }
    
    /**
     * Clear <line> value
     *
     * @return \google\appengine\logging\v1\SourceLocation
     */
    public function clearLine(){
      return $this->_clear(2);
    }
    
    /**
     * Get <line> value
     *
     * @return int
     */
    public function getLine(){
      return $this->_get(2);
    }
    
    /**
     * Set <line> value
     *
     * @param int $value
     * @return \google\appengine\logging\v1\SourceLocation
     */
    public function setLine( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <function_name> has a value
     *
     * @return boolean
     */
    public function hasFunctionName(){
      return $this->_has(3);
    }
    
    /**
     * Clear <function_name> value
     *
     * @return \google\appengine\logging\v1\SourceLocation
     */
    public function clearFunctionName(){
      return $this->_clear(3);
    }
    
    /**
     * Get <function_name> value
     *
     * @return string
     */
    public function getFunctionName(){
      return $this->_get(3);
    }
    
    /**
     * Set <function_name> value
     *
     * @param string $value
     * @return \google\appengine\logging\v1\SourceLocation
     */
    public function setFunctionName( $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\appengine\logging\v1 {

  class SourceReference extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $repository = null;
    
    /**  @var string */
    public $revision_id = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.logging.v1.SourceReference');

      // OPTIONAL STRING repository = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "repository";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING revision_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "revision_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <repository> has a value
     *
     * @return boolean
     */
    public function hasRepository(){
      return $this->_has(1);
    }
    
    /**
     * Clear <repository> value
     *
     * @return \google\appengine\logging\v1\SourceReference
     */
    public function clearRepository(){
      return $this->_clear(1);
    }
    
    /**
     * Get <repository> value
     *
     * @return string
     */
    public function getRepository(){
      return $this->_get(1);
    }
    
    /**
     * Set <repository> value
     *
     * @param string $value
     * @return \google\appengine\logging\v1\SourceReference
     */
    public function setRepository( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <revision_id> has a value
     *
     * @return boolean
     */
    public function hasRevisionId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <revision_id> value
     *
     * @return \google\appengine\logging\v1\SourceReference
     */
    public function clearRevisionId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <revision_id> value
     *
     * @return string
     */
    public function getRevisionId(){
      return $this->_get(2);
    }
    
    /**
     * Set <revision_id> value
     *
     * @param string $value
     * @return \google\appengine\logging\v1\SourceReference
     */
    public function setRevisionId( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\appengine\logging\v1 {

  class RequestLog extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $app_id = null;
    
    /**  @var string */
    public $module_id = null;
    
    /**  @var string */
    public $version_id = null;
    
    /**  @var string */
    public $request_id = null;
    
    /**  @var string */
    public $ip = null;
    
    /**  @var \google\protobuf\Timestamp */
    public $start_time = null;
    
    /**  @var \google\protobuf\Timestamp */
    public $end_time = null;
    
    /**  @var \google\protobuf\Duration */
    public $latency = null;
    
    /**  @var int */
    public $mega_cycles = null;
    
    /**  @var string */
    public $method = null;
    
    /**  @var string */
    public $resource = null;
    
    /**  @var string */
    public $http_version = null;
    
    /**  @var int */
    public $status = null;
    
    /**  @var int */
    public $response_size = null;
    
    /**  @var string */
    public $referrer = null;
    
    /**  @var string */
    public $user_agent = null;
    
    /**  @var string */
    public $nickname = null;
    
    /**  @var string */
    public $url_map_entry = null;
    
    /**  @var string */
    public $host = null;
    
    /**  @var float */
    public $cost = null;
    
    /**  @var string */
    public $task_queue_name = null;
    
    /**  @var string */
    public $task_name = null;
    
    /**  @var boolean */
    public $was_loading_request = null;
    
    /**  @var \google\protobuf\Duration */
    public $pending_time = null;
    
    /**  @var int */
    public $instance_index = null;
    
    /**  @var boolean */
    public $finished = null;
    
    /**  @var boolean */
    public $first = null;
    
    /**  @var string */
    public $instance_id = null;
    
    /**  @var \google\appengine\logging\v1\LogLine[]  */
    public $line = array();
    
    /**  @var string */
    public $app_engine_release = null;
    
    /**  @var string */
    public $trace_id = null;
    
    /**  @var \google\appengine\logging\v1\SourceReference[]  */
    public $source_reference = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.logging.v1.RequestLog');

      // OPTIONAL STRING app_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "app_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING module_id = 37
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 37;
      $f->name      = "module_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING version_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "version_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING request_id = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "request_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING ip = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "ip";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE start_time = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "start_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Timestamp';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE end_time = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "end_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Timestamp';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE latency = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "latency";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Duration';
      $descriptor->addField($f);

      // OPTIONAL INT64 mega_cycles = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "mega_cycles";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING method = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "method";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING resource = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "resource";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING http_version = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "http_version";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 status = 13
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 13;
      $f->name      = "status";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 response_size = 14
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 14;
      $f->name      = "response_size";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING referrer = 15
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 15;
      $f->name      = "referrer";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING user_agent = 16
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 16;
      $f->name      = "user_agent";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING nickname = 40
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 40;
      $f->name      = "nickname";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING url_map_entry = 17
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 17;
      $f->name      = "url_map_entry";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING host = 20
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 20;
      $f->name      = "host";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL DOUBLE cost = 21
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 21;
      $f->name      = "cost";
      $f->type      = \DrSlump\Protobuf::TYPE_DOUBLE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING task_queue_name = 22
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 22;
      $f->name      = "task_queue_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING task_name = 23
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 23;
      $f->name      = "task_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL was_loading_request = 24
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 24;
      $f->name      = "was_loading_request";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE pending_time = 25
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 25;
      $f->name      = "pending_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Duration';
      $descriptor->addField($f);

      // OPTIONAL INT32 instance_index = 26
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 26;
      $f->name      = "instance_index";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL finished = 27
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 27;
      $f->name      = "finished";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL first = 42
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 42;
      $f->name      = "first";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING instance_id = 28
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 28;
      $f->name      = "instance_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE line = 29
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 29;
      $f->name      = "line";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\appengine\logging\v1\LogLine';
      $descriptor->addField($f);

      // OPTIONAL STRING app_engine_release = 38
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 38;
      $f->name      = "app_engine_release";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING trace_id = 39
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 39;
      $f->name      = "trace_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE source_reference = 41
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 41;
      $f->name      = "source_reference";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\appengine\logging\v1\SourceReference';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <app_id> has a value
     *
     * @return boolean
     */
    public function hasAppId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <app_id> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearAppId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <app_id> value
     *
     * @return string
     */
    public function getAppId(){
      return $this->_get(1);
    }
    
    /**
     * Set <app_id> value
     *
     * @param string $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setAppId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <module_id> has a value
     *
     * @return boolean
     */
    public function hasModuleId(){
      return $this->_has(37);
    }
    
    /**
     * Clear <module_id> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearModuleId(){
      return $this->_clear(37);
    }
    
    /**
     * Get <module_id> value
     *
     * @return string
     */
    public function getModuleId(){
      return $this->_get(37);
    }
    
    /**
     * Set <module_id> value
     *
     * @param string $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setModuleId( $value){
      return $this->_set(37, $value);
    }
    
    /**
     * Check if <version_id> has a value
     *
     * @return boolean
     */
    public function hasVersionId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <version_id> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearVersionId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <version_id> value
     *
     * @return string
     */
    public function getVersionId(){
      return $this->_get(2);
    }
    
    /**
     * Set <version_id> value
     *
     * @param string $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setVersionId( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <request_id> has a value
     *
     * @return boolean
     */
    public function hasRequestId(){
      return $this->_has(3);
    }
    
    /**
     * Clear <request_id> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearRequestId(){
      return $this->_clear(3);
    }
    
    /**
     * Get <request_id> value
     *
     * @return string
     */
    public function getRequestId(){
      return $this->_get(3);
    }
    
    /**
     * Set <request_id> value
     *
     * @param string $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setRequestId( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <ip> has a value
     *
     * @return boolean
     */
    public function hasIp(){
      return $this->_has(4);
    }
    
    /**
     * Clear <ip> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearIp(){
      return $this->_clear(4);
    }
    
    /**
     * Get <ip> value
     *
     * @return string
     */
    public function getIp(){
      return $this->_get(4);
    }
    
    /**
     * Set <ip> value
     *
     * @param string $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setIp( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <start_time> has a value
     *
     * @return boolean
     */
    public function hasStartTime(){
      return $this->_has(6);
    }
    
    /**
     * Clear <start_time> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearStartTime(){
      return $this->_clear(6);
    }
    
    /**
     * Get <start_time> value
     *
     * @return \google\protobuf\Timestamp
     */
    public function getStartTime(){
      return $this->_get(6);
    }
    
    /**
     * Set <start_time> value
     *
     * @param \google\protobuf\Timestamp $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setStartTime(\google\protobuf\Timestamp $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <end_time> has a value
     *
     * @return boolean
     */
    public function hasEndTime(){
      return $this->_has(7);
    }
    
    /**
     * Clear <end_time> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearEndTime(){
      return $this->_clear(7);
    }
    
    /**
     * Get <end_time> value
     *
     * @return \google\protobuf\Timestamp
     */
    public function getEndTime(){
      return $this->_get(7);
    }
    
    /**
     * Set <end_time> value
     *
     * @param \google\protobuf\Timestamp $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setEndTime(\google\protobuf\Timestamp $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <latency> has a value
     *
     * @return boolean
     */
    public function hasLatency(){
      return $this->_has(8);
    }
    
    /**
     * Clear <latency> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearLatency(){
      return $this->_clear(8);
    }
    
    /**
     * Get <latency> value
     *
     * @return \google\protobuf\Duration
     */
    public function getLatency(){
      return $this->_get(8);
    }
    
    /**
     * Set <latency> value
     *
     * @param \google\protobuf\Duration $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setLatency(\google\protobuf\Duration $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <mega_cycles> has a value
     *
     * @return boolean
     */
    public function hasMegaCycles(){
      return $this->_has(9);
    }
    
    /**
     * Clear <mega_cycles> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearMegaCycles(){
      return $this->_clear(9);
    }
    
    /**
     * Get <mega_cycles> value
     *
     * @return int
     */
    public function getMegaCycles(){
      return $this->_get(9);
    }
    
    /**
     * Set <mega_cycles> value
     *
     * @param int $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setMegaCycles( $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <method> has a value
     *
     * @return boolean
     */
    public function hasMethod(){
      return $this->_has(10);
    }
    
    /**
     * Clear <method> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearMethod(){
      return $this->_clear(10);
    }
    
    /**
     * Get <method> value
     *
     * @return string
     */
    public function getMethod(){
      return $this->_get(10);
    }
    
    /**
     * Set <method> value
     *
     * @param string $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setMethod( $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <resource> has a value
     *
     * @return boolean
     */
    public function hasResource(){
      return $this->_has(11);
    }
    
    /**
     * Clear <resource> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearResource(){
      return $this->_clear(11);
    }
    
    /**
     * Get <resource> value
     *
     * @return string
     */
    public function getResource(){
      return $this->_get(11);
    }
    
    /**
     * Set <resource> value
     *
     * @param string $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setResource( $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <http_version> has a value
     *
     * @return boolean
     */
    public function hasHttpVersion(){
      return $this->_has(12);
    }
    
    /**
     * Clear <http_version> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearHttpVersion(){
      return $this->_clear(12);
    }
    
    /**
     * Get <http_version> value
     *
     * @return string
     */
    public function getHttpVersion(){
      return $this->_get(12);
    }
    
    /**
     * Set <http_version> value
     *
     * @param string $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setHttpVersion( $value){
      return $this->_set(12, $value);
    }
    
    /**
     * Check if <status> has a value
     *
     * @return boolean
     */
    public function hasStatus(){
      return $this->_has(13);
    }
    
    /**
     * Clear <status> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearStatus(){
      return $this->_clear(13);
    }
    
    /**
     * Get <status> value
     *
     * @return int
     */
    public function getStatus(){
      return $this->_get(13);
    }
    
    /**
     * Set <status> value
     *
     * @param int $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setStatus( $value){
      return $this->_set(13, $value);
    }
    
    /**
     * Check if <response_size> has a value
     *
     * @return boolean
     */
    public function hasResponseSize(){
      return $this->_has(14);
    }
    
    /**
     * Clear <response_size> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearResponseSize(){
      return $this->_clear(14);
    }
    
    /**
     * Get <response_size> value
     *
     * @return int
     */
    public function getResponseSize(){
      return $this->_get(14);
    }
    
    /**
     * Set <response_size> value
     *
     * @param int $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setResponseSize( $value){
      return $this->_set(14, $value);
    }
    
    /**
     * Check if <referrer> has a value
     *
     * @return boolean
     */
    public function hasReferrer(){
      return $this->_has(15);
    }
    
    /**
     * Clear <referrer> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearReferrer(){
      return $this->_clear(15);
    }
    
    /**
     * Get <referrer> value
     *
     * @return string
     */
    public function getReferrer(){
      return $this->_get(15);
    }
    
    /**
     * Set <referrer> value
     *
     * @param string $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setReferrer( $value){
      return $this->_set(15, $value);
    }
    
    /**
     * Check if <user_agent> has a value
     *
     * @return boolean
     */
    public function hasUserAgent(){
      return $this->_has(16);
    }
    
    /**
     * Clear <user_agent> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearUserAgent(){
      return $this->_clear(16);
    }
    
    /**
     * Get <user_agent> value
     *
     * @return string
     */
    public function getUserAgent(){
      return $this->_get(16);
    }
    
    /**
     * Set <user_agent> value
     *
     * @param string $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setUserAgent( $value){
      return $this->_set(16, $value);
    }
    
    /**
     * Check if <nickname> has a value
     *
     * @return boolean
     */
    public function hasNickname(){
      return $this->_has(40);
    }
    
    /**
     * Clear <nickname> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearNickname(){
      return $this->_clear(40);
    }
    
    /**
     * Get <nickname> value
     *
     * @return string
     */
    public function getNickname(){
      return $this->_get(40);
    }
    
    /**
     * Set <nickname> value
     *
     * @param string $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setNickname( $value){
      return $this->_set(40, $value);
    }
    
    /**
     * Check if <url_map_entry> has a value
     *
     * @return boolean
     */
    public function hasUrlMapEntry(){
      return $this->_has(17);
    }
    
    /**
     * Clear <url_map_entry> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearUrlMapEntry(){
      return $this->_clear(17);
    }
    
    /**
     * Get <url_map_entry> value
     *
     * @return string
     */
    public function getUrlMapEntry(){
      return $this->_get(17);
    }
    
    /**
     * Set <url_map_entry> value
     *
     * @param string $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setUrlMapEntry( $value){
      return $this->_set(17, $value);
    }
    
    /**
     * Check if <host> has a value
     *
     * @return boolean
     */
    public function hasHost(){
      return $this->_has(20);
    }
    
    /**
     * Clear <host> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearHost(){
      return $this->_clear(20);
    }
    
    /**
     * Get <host> value
     *
     * @return string
     */
    public function getHost(){
      return $this->_get(20);
    }
    
    /**
     * Set <host> value
     *
     * @param string $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setHost( $value){
      return $this->_set(20, $value);
    }
    
    /**
     * Check if <cost> has a value
     *
     * @return boolean
     */
    public function hasCost(){
      return $this->_has(21);
    }
    
    /**
     * Clear <cost> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearCost(){
      return $this->_clear(21);
    }
    
    /**
     * Get <cost> value
     *
     * @return float
     */
    public function getCost(){
      return $this->_get(21);
    }
    
    /**
     * Set <cost> value
     *
     * @param float $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setCost( $value){
      return $this->_set(21, $value);
    }
    
    /**
     * Check if <task_queue_name> has a value
     *
     * @return boolean
     */
    public function hasTaskQueueName(){
      return $this->_has(22);
    }
    
    /**
     * Clear <task_queue_name> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearTaskQueueName(){
      return $this->_clear(22);
    }
    
    /**
     * Get <task_queue_name> value
     *
     * @return string
     */
    public function getTaskQueueName(){
      return $this->_get(22);
    }
    
    /**
     * Set <task_queue_name> value
     *
     * @param string $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setTaskQueueName( $value){
      return $this->_set(22, $value);
    }
    
    /**
     * Check if <task_name> has a value
     *
     * @return boolean
     */
    public function hasTaskName(){
      return $this->_has(23);
    }
    
    /**
     * Clear <task_name> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearTaskName(){
      return $this->_clear(23);
    }
    
    /**
     * Get <task_name> value
     *
     * @return string
     */
    public function getTaskName(){
      return $this->_get(23);
    }
    
    /**
     * Set <task_name> value
     *
     * @param string $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setTaskName( $value){
      return $this->_set(23, $value);
    }
    
    /**
     * Check if <was_loading_request> has a value
     *
     * @return boolean
     */
    public function hasWasLoadingRequest(){
      return $this->_has(24);
    }
    
    /**
     * Clear <was_loading_request> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearWasLoadingRequest(){
      return $this->_clear(24);
    }
    
    /**
     * Get <was_loading_request> value
     *
     * @return boolean
     */
    public function getWasLoadingRequest(){
      return $this->_get(24);
    }
    
    /**
     * Set <was_loading_request> value
     *
     * @param boolean $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setWasLoadingRequest( $value){
      return $this->_set(24, $value);
    }
    
    /**
     * Check if <pending_time> has a value
     *
     * @return boolean
     */
    public function hasPendingTime(){
      return $this->_has(25);
    }
    
    /**
     * Clear <pending_time> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearPendingTime(){
      return $this->_clear(25);
    }
    
    /**
     * Get <pending_time> value
     *
     * @return \google\protobuf\Duration
     */
    public function getPendingTime(){
      return $this->_get(25);
    }
    
    /**
     * Set <pending_time> value
     *
     * @param \google\protobuf\Duration $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setPendingTime(\google\protobuf\Duration $value){
      return $this->_set(25, $value);
    }
    
    /**
     * Check if <instance_index> has a value
     *
     * @return boolean
     */
    public function hasInstanceIndex(){
      return $this->_has(26);
    }
    
    /**
     * Clear <instance_index> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearInstanceIndex(){
      return $this->_clear(26);
    }
    
    /**
     * Get <instance_index> value
     *
     * @return int
     */
    public function getInstanceIndex(){
      return $this->_get(26);
    }
    
    /**
     * Set <instance_index> value
     *
     * @param int $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setInstanceIndex( $value){
      return $this->_set(26, $value);
    }
    
    /**
     * Check if <finished> has a value
     *
     * @return boolean
     */
    public function hasFinished(){
      return $this->_has(27);
    }
    
    /**
     * Clear <finished> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearFinished(){
      return $this->_clear(27);
    }
    
    /**
     * Get <finished> value
     *
     * @return boolean
     */
    public function getFinished(){
      return $this->_get(27);
    }
    
    /**
     * Set <finished> value
     *
     * @param boolean $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setFinished( $value){
      return $this->_set(27, $value);
    }
    
    /**
     * Check if <first> has a value
     *
     * @return boolean
     */
    public function hasFirst(){
      return $this->_has(42);
    }
    
    /**
     * Clear <first> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearFirst(){
      return $this->_clear(42);
    }
    
    /**
     * Get <first> value
     *
     * @return boolean
     */
    public function getFirst(){
      return $this->_get(42);
    }
    
    /**
     * Set <first> value
     *
     * @param boolean $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setFirst( $value){
      return $this->_set(42, $value);
    }
    
    /**
     * Check if <instance_id> has a value
     *
     * @return boolean
     */
    public function hasInstanceId(){
      return $this->_has(28);
    }
    
    /**
     * Clear <instance_id> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearInstanceId(){
      return $this->_clear(28);
    }
    
    /**
     * Get <instance_id> value
     *
     * @return string
     */
    public function getInstanceId(){
      return $this->_get(28);
    }
    
    /**
     * Set <instance_id> value
     *
     * @param string $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setInstanceId( $value){
      return $this->_set(28, $value);
    }
    
    /**
     * Check if <line> has a value
     *
     * @return boolean
     */
    public function hasLine(){
      return $this->_has(29);
    }
    
    /**
     * Clear <line> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearLine(){
      return $this->_clear(29);
    }
    
    /**
     * Get <line> value
     *
     * @param int $idx
     * @return \google\appengine\logging\v1\LogLine
     */
    public function getLine($idx = NULL){
      return $this->_get(29, $idx);
    }
    
    /**
     * Set <line> value
     *
     * @param \google\appengine\logging\v1\LogLine $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setLine(\google\appengine\logging\v1\LogLine $value, $idx = NULL){
      return $this->_set(29, $value, $idx);
    }
    
    /**
     * Get all elements of <line>
     *
     * @return \google\appengine\logging\v1\LogLine[]
     */
    public function getLineList(){
     return $this->_get(29);
    }
    
    /**
     * Add a new element to <line>
     *
     * @param \google\appengine\logging\v1\LogLine $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function addLine(\google\appengine\logging\v1\LogLine $value){
     return $this->_add(29, $value);
    }
    
    /**
     * Check if <app_engine_release> has a value
     *
     * @return boolean
     */
    public function hasAppEngineRelease(){
      return $this->_has(38);
    }
    
    /**
     * Clear <app_engine_release> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearAppEngineRelease(){
      return $this->_clear(38);
    }
    
    /**
     * Get <app_engine_release> value
     *
     * @return string
     */
    public function getAppEngineRelease(){
      return $this->_get(38);
    }
    
    /**
     * Set <app_engine_release> value
     *
     * @param string $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setAppEngineRelease( $value){
      return $this->_set(38, $value);
    }
    
    /**
     * Check if <trace_id> has a value
     *
     * @return boolean
     */
    public function hasTraceId(){
      return $this->_has(39);
    }
    
    /**
     * Clear <trace_id> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearTraceId(){
      return $this->_clear(39);
    }
    
    /**
     * Get <trace_id> value
     *
     * @return string
     */
    public function getTraceId(){
      return $this->_get(39);
    }
    
    /**
     * Set <trace_id> value
     *
     * @param string $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setTraceId( $value){
      return $this->_set(39, $value);
    }
    
    /**
     * Check if <source_reference> has a value
     *
     * @return boolean
     */
    public function hasSourceReference(){
      return $this->_has(41);
    }
    
    /**
     * Clear <source_reference> value
     *
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function clearSourceReference(){
      return $this->_clear(41);
    }
    
    /**
     * Get <source_reference> value
     *
     * @param int $idx
     * @return \google\appengine\logging\v1\SourceReference
     */
    public function getSourceReference($idx = NULL){
      return $this->_get(41, $idx);
    }
    
    /**
     * Set <source_reference> value
     *
     * @param \google\appengine\logging\v1\SourceReference $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function setSourceReference(\google\appengine\logging\v1\SourceReference $value, $idx = NULL){
      return $this->_set(41, $value, $idx);
    }
    
    /**
     * Get all elements of <source_reference>
     *
     * @return \google\appengine\logging\v1\SourceReference[]
     */
    public function getSourceReferenceList(){
     return $this->_get(41);
    }
    
    /**
     * Add a new element to <source_reference>
     *
     * @param \google\appengine\logging\v1\SourceReference $value
     * @return \google\appengine\logging\v1\RequestLog
     */
    public function addSourceReference(\google\appengine\logging\v1\SourceReference $value){
     return $this->_add(41, $value);
    }
  }
}

