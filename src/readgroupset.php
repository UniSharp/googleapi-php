<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: google/genomics/v1/readgroupset.proto
//   Date: 2017-06-13 04:25:43

namespace google\genomics\v1\ReadGroupSet {

  class InfoEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $key = null;
    
    /**  @var \google\protobuf\ListValue */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1.ReadGroupSet.InfoEntry');

      // OPTIONAL STRING key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\ListValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <key> has a value
     *
     * @return boolean
     */
    public function hasKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <key> value
     *
     * @return \google\genomics\v1\ReadGroupSet\InfoEntry
     */
    public function clearKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <key> value
     *
     * @return string
     */
    public function getKey(){
      return $this->_get(1);
    }
    
    /**
     * Set <key> value
     *
     * @param string $value
     * @return \google\genomics\v1\ReadGroupSet\InfoEntry
     */
    public function setKey( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\genomics\v1\ReadGroupSet\InfoEntry
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return \google\protobuf\ListValue
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param \google\protobuf\ListValue $value
     * @return \google\genomics\v1\ReadGroupSet\InfoEntry
     */
    public function setValue(\google\protobuf\ListValue $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\genomics\v1 {

  class ReadGroupSet extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $id = null;
    
    /**  @var string */
    public $dataset_id = null;
    
    /**  @var string */
    public $reference_set_id = null;
    
    /**  @var string */
    public $name = null;
    
    /**  @var string */
    public $filename = null;
    
    /**  @var \google\genomics\v1\ReadGroup[]  */
    public $read_groups = array();
    
    /**  @var \google\genomics\v1\ReadGroupSet\InfoEntry[]  */
    public $info = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1.ReadGroupSet');

      // OPTIONAL STRING id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING dataset_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "dataset_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING reference_set_id = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "reference_set_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING name = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING filename = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "filename";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE read_groups = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "read_groups";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\genomics\v1\ReadGroup';
      $descriptor->addField($f);

      // REPEATED MESSAGE info = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "info";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\genomics\v1\ReadGroupSet\InfoEntry';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <id> has a value
     *
     * @return boolean
     */
    public function hasId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <id> value
     *
     * @return \google\genomics\v1\ReadGroupSet
     */
    public function clearId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <id> value
     *
     * @return string
     */
    public function getId(){
      return $this->_get(1);
    }
    
    /**
     * Set <id> value
     *
     * @param string $value
     * @return \google\genomics\v1\ReadGroupSet
     */
    public function setId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <dataset_id> has a value
     *
     * @return boolean
     */
    public function hasDatasetId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <dataset_id> value
     *
     * @return \google\genomics\v1\ReadGroupSet
     */
    public function clearDatasetId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <dataset_id> value
     *
     * @return string
     */
    public function getDatasetId(){
      return $this->_get(2);
    }
    
    /**
     * Set <dataset_id> value
     *
     * @param string $value
     * @return \google\genomics\v1\ReadGroupSet
     */
    public function setDatasetId( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <reference_set_id> has a value
     *
     * @return boolean
     */
    public function hasReferenceSetId(){
      return $this->_has(3);
    }
    
    /**
     * Clear <reference_set_id> value
     *
     * @return \google\genomics\v1\ReadGroupSet
     */
    public function clearReferenceSetId(){
      return $this->_clear(3);
    }
    
    /**
     * Get <reference_set_id> value
     *
     * @return string
     */
    public function getReferenceSetId(){
      return $this->_get(3);
    }
    
    /**
     * Set <reference_set_id> value
     *
     * @param string $value
     * @return \google\genomics\v1\ReadGroupSet
     */
    public function setReferenceSetId( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(4);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\genomics\v1\ReadGroupSet
     */
    public function clearName(){
      return $this->_clear(4);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(4);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\genomics\v1\ReadGroupSet
     */
    public function setName( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <filename> has a value
     *
     * @return boolean
     */
    public function hasFilename(){
      return $this->_has(5);
    }
    
    /**
     * Clear <filename> value
     *
     * @return \google\genomics\v1\ReadGroupSet
     */
    public function clearFilename(){
      return $this->_clear(5);
    }
    
    /**
     * Get <filename> value
     *
     * @return string
     */
    public function getFilename(){
      return $this->_get(5);
    }
    
    /**
     * Set <filename> value
     *
     * @param string $value
     * @return \google\genomics\v1\ReadGroupSet
     */
    public function setFilename( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <read_groups> has a value
     *
     * @return boolean
     */
    public function hasReadGroups(){
      return $this->_has(6);
    }
    
    /**
     * Clear <read_groups> value
     *
     * @return \google\genomics\v1\ReadGroupSet
     */
    public function clearReadGroups(){
      return $this->_clear(6);
    }
    
    /**
     * Get <read_groups> value
     *
     * @param int $idx
     * @return \google\genomics\v1\ReadGroup
     */
    public function getReadGroups($idx = NULL){
      return $this->_get(6, $idx);
    }
    
    /**
     * Set <read_groups> value
     *
     * @param \google\genomics\v1\ReadGroup $value
     * @return \google\genomics\v1\ReadGroupSet
     */
    public function setReadGroups(\google\genomics\v1\ReadGroup $value, $idx = NULL){
      return $this->_set(6, $value, $idx);
    }
    
    /**
     * Get all elements of <read_groups>
     *
     * @return \google\genomics\v1\ReadGroup[]
     */
    public function getReadGroupsList(){
     return $this->_get(6);
    }
    
    /**
     * Add a new element to <read_groups>
     *
     * @param \google\genomics\v1\ReadGroup $value
     * @return \google\genomics\v1\ReadGroupSet
     */
    public function addReadGroups(\google\genomics\v1\ReadGroup $value){
     return $this->_add(6, $value);
    }
    
    /**
     * Check if <info> has a value
     *
     * @return boolean
     */
    public function hasInfo(){
      return $this->_has(7);
    }
    
    /**
     * Clear <info> value
     *
     * @return \google\genomics\v1\ReadGroupSet
     */
    public function clearInfo(){
      return $this->_clear(7);
    }
    
    /**
     * Get <info> value
     *
     * @param int $idx
     * @return \google\genomics\v1\ReadGroupSet\InfoEntry
     */
    public function getInfo($idx = NULL){
      return $this->_get(7, $idx);
    }
    
    /**
     * Set <info> value
     *
     * @param \google\genomics\v1\ReadGroupSet\InfoEntry $value
     * @return \google\genomics\v1\ReadGroupSet
     */
    public function setInfo(\google\genomics\v1\ReadGroupSet\InfoEntry $value, $idx = NULL){
      return $this->_set(7, $value, $idx);
    }
    
    /**
     * Get all elements of <info>
     *
     * @return \google\genomics\v1\ReadGroupSet\InfoEntry[]
     */
    public function getInfoList(){
     return $this->_get(7);
    }
    
    /**
     * Add a new element to <info>
     *
     * @param \google\genomics\v1\ReadGroupSet\InfoEntry $value
     * @return \google\genomics\v1\ReadGroupSet
     */
    public function addInfo(\google\genomics\v1\ReadGroupSet\InfoEntry $value){
     return $this->_add(7, $value);
    }
  }
}

