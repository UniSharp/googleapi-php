<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: google/appengine/v1/appengine.proto
//   Date: 2017-06-13 04:23:16

namespace google\appengine\v1 {

  class VersionView extends \DrSlump\Protobuf\Enum {
    const BASIC = 0;
    const FULL = 1;
  }
}
namespace google\appengine\v1 {

  class GetApplicationRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.GetApplicationRequest');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\appengine\v1\GetApplicationRequest
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\appengine\v1\GetApplicationRequest
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\appengine\v1 {

  class RepairApplicationRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.RepairApplicationRequest');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\appengine\v1\RepairApplicationRequest
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\appengine\v1\RepairApplicationRequest
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\appengine\v1 {

  class ListServicesRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $parent = null;
    
    /**  @var int */
    public $page_size = null;
    
    /**  @var string */
    public $page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.ListServicesRequest');

      // OPTIONAL STRING parent = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "parent";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 page_size = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "page_size";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING page_token = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <parent> has a value
     *
     * @return boolean
     */
    public function hasParent(){
      return $this->_has(1);
    }
    
    /**
     * Clear <parent> value
     *
     * @return \google\appengine\v1\ListServicesRequest
     */
    public function clearParent(){
      return $this->_clear(1);
    }
    
    /**
     * Get <parent> value
     *
     * @return string
     */
    public function getParent(){
      return $this->_get(1);
    }
    
    /**
     * Set <parent> value
     *
     * @param string $value
     * @return \google\appengine\v1\ListServicesRequest
     */
    public function setParent( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <page_size> has a value
     *
     * @return boolean
     */
    public function hasPageSize(){
      return $this->_has(2);
    }
    
    /**
     * Clear <page_size> value
     *
     * @return \google\appengine\v1\ListServicesRequest
     */
    public function clearPageSize(){
      return $this->_clear(2);
    }
    
    /**
     * Get <page_size> value
     *
     * @return int
     */
    public function getPageSize(){
      return $this->_get(2);
    }
    
    /**
     * Set <page_size> value
     *
     * @param int $value
     * @return \google\appengine\v1\ListServicesRequest
     */
    public function setPageSize( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <page_token> has a value
     *
     * @return boolean
     */
    public function hasPageToken(){
      return $this->_has(3);
    }
    
    /**
     * Clear <page_token> value
     *
     * @return \google\appengine\v1\ListServicesRequest
     */
    public function clearPageToken(){
      return $this->_clear(3);
    }
    
    /**
     * Get <page_token> value
     *
     * @return string
     */
    public function getPageToken(){
      return $this->_get(3);
    }
    
    /**
     * Set <page_token> value
     *
     * @param string $value
     * @return \google\appengine\v1\ListServicesRequest
     */
    public function setPageToken( $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\appengine\v1 {

  class ListServicesResponse extends \DrSlump\Protobuf\Message {

    /**  @var \google\appengine\v1\Service[]  */
    public $services = array();
    
    /**  @var string */
    public $next_page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.ListServicesResponse');

      // REPEATED MESSAGE services = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "services";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\appengine\v1\Service';
      $descriptor->addField($f);

      // OPTIONAL STRING next_page_token = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "next_page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <services> has a value
     *
     * @return boolean
     */
    public function hasServices(){
      return $this->_has(1);
    }
    
    /**
     * Clear <services> value
     *
     * @return \google\appengine\v1\ListServicesResponse
     */
    public function clearServices(){
      return $this->_clear(1);
    }
    
    /**
     * Get <services> value
     *
     * @param int $idx
     * @return \google\appengine\v1\Service
     */
    public function getServices($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <services> value
     *
     * @param \google\appengine\v1\Service $value
     * @return \google\appengine\v1\ListServicesResponse
     */
    public function setServices(\google\appengine\v1\Service $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <services>
     *
     * @return \google\appengine\v1\Service[]
     */
    public function getServicesList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <services>
     *
     * @param \google\appengine\v1\Service $value
     * @return \google\appengine\v1\ListServicesResponse
     */
    public function addServices(\google\appengine\v1\Service $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <next_page_token> has a value
     *
     * @return boolean
     */
    public function hasNextPageToken(){
      return $this->_has(2);
    }
    
    /**
     * Clear <next_page_token> value
     *
     * @return \google\appengine\v1\ListServicesResponse
     */
    public function clearNextPageToken(){
      return $this->_clear(2);
    }
    
    /**
     * Get <next_page_token> value
     *
     * @return string
     */
    public function getNextPageToken(){
      return $this->_get(2);
    }
    
    /**
     * Set <next_page_token> value
     *
     * @param string $value
     * @return \google\appengine\v1\ListServicesResponse
     */
    public function setNextPageToken( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\appengine\v1 {

  class GetServiceRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.GetServiceRequest');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\appengine\v1\GetServiceRequest
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\appengine\v1\GetServiceRequest
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\appengine\v1 {

  class UpdateServiceRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var \google\appengine\v1\Service */
    public $service = null;
    
    /**  @var \google\protobuf\FieldMask */
    public $update_mask = null;
    
    /**  @var boolean */
    public $migrate_traffic = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.UpdateServiceRequest');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE service = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "service";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\appengine\v1\Service';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE update_mask = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "update_mask";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\FieldMask';
      $descriptor->addField($f);

      // OPTIONAL BOOL migrate_traffic = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "migrate_traffic";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\appengine\v1\UpdateServiceRequest
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\appengine\v1\UpdateServiceRequest
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <service> has a value
     *
     * @return boolean
     */
    public function hasService(){
      return $this->_has(2);
    }
    
    /**
     * Clear <service> value
     *
     * @return \google\appengine\v1\UpdateServiceRequest
     */
    public function clearService(){
      return $this->_clear(2);
    }
    
    /**
     * Get <service> value
     *
     * @return \google\appengine\v1\Service
     */
    public function getService(){
      return $this->_get(2);
    }
    
    /**
     * Set <service> value
     *
     * @param \google\appengine\v1\Service $value
     * @return \google\appengine\v1\UpdateServiceRequest
     */
    public function setService(\google\appengine\v1\Service $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <update_mask> has a value
     *
     * @return boolean
     */
    public function hasUpdateMask(){
      return $this->_has(3);
    }
    
    /**
     * Clear <update_mask> value
     *
     * @return \google\appengine\v1\UpdateServiceRequest
     */
    public function clearUpdateMask(){
      return $this->_clear(3);
    }
    
    /**
     * Get <update_mask> value
     *
     * @return \google\protobuf\FieldMask
     */
    public function getUpdateMask(){
      return $this->_get(3);
    }
    
    /**
     * Set <update_mask> value
     *
     * @param \google\protobuf\FieldMask $value
     * @return \google\appengine\v1\UpdateServiceRequest
     */
    public function setUpdateMask(\google\protobuf\FieldMask $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <migrate_traffic> has a value
     *
     * @return boolean
     */
    public function hasMigrateTraffic(){
      return $this->_has(4);
    }
    
    /**
     * Clear <migrate_traffic> value
     *
     * @return \google\appengine\v1\UpdateServiceRequest
     */
    public function clearMigrateTraffic(){
      return $this->_clear(4);
    }
    
    /**
     * Get <migrate_traffic> value
     *
     * @return boolean
     */
    public function getMigrateTraffic(){
      return $this->_get(4);
    }
    
    /**
     * Set <migrate_traffic> value
     *
     * @param boolean $value
     * @return \google\appengine\v1\UpdateServiceRequest
     */
    public function setMigrateTraffic( $value){
      return $this->_set(4, $value);
    }
  }
}

namespace google\appengine\v1 {

  class DeleteServiceRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.DeleteServiceRequest');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\appengine\v1\DeleteServiceRequest
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\appengine\v1\DeleteServiceRequest
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\appengine\v1 {

  class ListVersionsRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $parent = null;
    
    /**  @var int - \google\appengine\v1\VersionView */
    public $view = null;
    
    /**  @var int */
    public $page_size = null;
    
    /**  @var string */
    public $page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.ListVersionsRequest');

      // OPTIONAL STRING parent = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "parent";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL ENUM view = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "view";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\appengine\v1\VersionView';
      $descriptor->addField($f);

      // OPTIONAL INT32 page_size = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "page_size";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING page_token = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <parent> has a value
     *
     * @return boolean
     */
    public function hasParent(){
      return $this->_has(1);
    }
    
    /**
     * Clear <parent> value
     *
     * @return \google\appengine\v1\ListVersionsRequest
     */
    public function clearParent(){
      return $this->_clear(1);
    }
    
    /**
     * Get <parent> value
     *
     * @return string
     */
    public function getParent(){
      return $this->_get(1);
    }
    
    /**
     * Set <parent> value
     *
     * @param string $value
     * @return \google\appengine\v1\ListVersionsRequest
     */
    public function setParent( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <view> has a value
     *
     * @return boolean
     */
    public function hasView(){
      return $this->_has(2);
    }
    
    /**
     * Clear <view> value
     *
     * @return \google\appengine\v1\ListVersionsRequest
     */
    public function clearView(){
      return $this->_clear(2);
    }
    
    /**
     * Get <view> value
     *
     * @return int - \google\appengine\v1\VersionView
     */
    public function getView(){
      return $this->_get(2);
    }
    
    /**
     * Set <view> value
     *
     * @param int - \google\appengine\v1\VersionView $value
     * @return \google\appengine\v1\ListVersionsRequest
     */
    public function setView( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <page_size> has a value
     *
     * @return boolean
     */
    public function hasPageSize(){
      return $this->_has(3);
    }
    
    /**
     * Clear <page_size> value
     *
     * @return \google\appengine\v1\ListVersionsRequest
     */
    public function clearPageSize(){
      return $this->_clear(3);
    }
    
    /**
     * Get <page_size> value
     *
     * @return int
     */
    public function getPageSize(){
      return $this->_get(3);
    }
    
    /**
     * Set <page_size> value
     *
     * @param int $value
     * @return \google\appengine\v1\ListVersionsRequest
     */
    public function setPageSize( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <page_token> has a value
     *
     * @return boolean
     */
    public function hasPageToken(){
      return $this->_has(4);
    }
    
    /**
     * Clear <page_token> value
     *
     * @return \google\appengine\v1\ListVersionsRequest
     */
    public function clearPageToken(){
      return $this->_clear(4);
    }
    
    /**
     * Get <page_token> value
     *
     * @return string
     */
    public function getPageToken(){
      return $this->_get(4);
    }
    
    /**
     * Set <page_token> value
     *
     * @param string $value
     * @return \google\appengine\v1\ListVersionsRequest
     */
    public function setPageToken( $value){
      return $this->_set(4, $value);
    }
  }
}

namespace google\appengine\v1 {

  class ListVersionsResponse extends \DrSlump\Protobuf\Message {

    /**  @var \google\appengine\v1\Version[]  */
    public $versions = array();
    
    /**  @var string */
    public $next_page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.ListVersionsResponse');

      // REPEATED MESSAGE versions = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "versions";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\appengine\v1\Version';
      $descriptor->addField($f);

      // OPTIONAL STRING next_page_token = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "next_page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <versions> has a value
     *
     * @return boolean
     */
    public function hasVersions(){
      return $this->_has(1);
    }
    
    /**
     * Clear <versions> value
     *
     * @return \google\appengine\v1\ListVersionsResponse
     */
    public function clearVersions(){
      return $this->_clear(1);
    }
    
    /**
     * Get <versions> value
     *
     * @param int $idx
     * @return \google\appengine\v1\Version
     */
    public function getVersions($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <versions> value
     *
     * @param \google\appengine\v1\Version $value
     * @return \google\appengine\v1\ListVersionsResponse
     */
    public function setVersions(\google\appengine\v1\Version $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <versions>
     *
     * @return \google\appengine\v1\Version[]
     */
    public function getVersionsList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <versions>
     *
     * @param \google\appengine\v1\Version $value
     * @return \google\appengine\v1\ListVersionsResponse
     */
    public function addVersions(\google\appengine\v1\Version $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <next_page_token> has a value
     *
     * @return boolean
     */
    public function hasNextPageToken(){
      return $this->_has(2);
    }
    
    /**
     * Clear <next_page_token> value
     *
     * @return \google\appengine\v1\ListVersionsResponse
     */
    public function clearNextPageToken(){
      return $this->_clear(2);
    }
    
    /**
     * Get <next_page_token> value
     *
     * @return string
     */
    public function getNextPageToken(){
      return $this->_get(2);
    }
    
    /**
     * Set <next_page_token> value
     *
     * @param string $value
     * @return \google\appengine\v1\ListVersionsResponse
     */
    public function setNextPageToken( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\appengine\v1 {

  class GetVersionRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var int - \google\appengine\v1\VersionView */
    public $view = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.GetVersionRequest');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL ENUM view = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "view";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\appengine\v1\VersionView';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\appengine\v1\GetVersionRequest
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\appengine\v1\GetVersionRequest
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <view> has a value
     *
     * @return boolean
     */
    public function hasView(){
      return $this->_has(2);
    }
    
    /**
     * Clear <view> value
     *
     * @return \google\appengine\v1\GetVersionRequest
     */
    public function clearView(){
      return $this->_clear(2);
    }
    
    /**
     * Get <view> value
     *
     * @return int - \google\appengine\v1\VersionView
     */
    public function getView(){
      return $this->_get(2);
    }
    
    /**
     * Set <view> value
     *
     * @param int - \google\appengine\v1\VersionView $value
     * @return \google\appengine\v1\GetVersionRequest
     */
    public function setView( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\appengine\v1 {

  class CreateVersionRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $parent = null;
    
    /**  @var \google\appengine\v1\Version */
    public $version = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.CreateVersionRequest');

      // OPTIONAL STRING parent = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "parent";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE version = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "version";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\appengine\v1\Version';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <parent> has a value
     *
     * @return boolean
     */
    public function hasParent(){
      return $this->_has(1);
    }
    
    /**
     * Clear <parent> value
     *
     * @return \google\appengine\v1\CreateVersionRequest
     */
    public function clearParent(){
      return $this->_clear(1);
    }
    
    /**
     * Get <parent> value
     *
     * @return string
     */
    public function getParent(){
      return $this->_get(1);
    }
    
    /**
     * Set <parent> value
     *
     * @param string $value
     * @return \google\appengine\v1\CreateVersionRequest
     */
    public function setParent( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <version> has a value
     *
     * @return boolean
     */
    public function hasVersion(){
      return $this->_has(2);
    }
    
    /**
     * Clear <version> value
     *
     * @return \google\appengine\v1\CreateVersionRequest
     */
    public function clearVersion(){
      return $this->_clear(2);
    }
    
    /**
     * Get <version> value
     *
     * @return \google\appengine\v1\Version
     */
    public function getVersion(){
      return $this->_get(2);
    }
    
    /**
     * Set <version> value
     *
     * @param \google\appengine\v1\Version $value
     * @return \google\appengine\v1\CreateVersionRequest
     */
    public function setVersion(\google\appengine\v1\Version $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\appengine\v1 {

  class UpdateVersionRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var \google\appengine\v1\Version */
    public $version = null;
    
    /**  @var \google\protobuf\FieldMask */
    public $update_mask = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.UpdateVersionRequest');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE version = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "version";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\appengine\v1\Version';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE update_mask = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "update_mask";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\FieldMask';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\appengine\v1\UpdateVersionRequest
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\appengine\v1\UpdateVersionRequest
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <version> has a value
     *
     * @return boolean
     */
    public function hasVersion(){
      return $this->_has(2);
    }
    
    /**
     * Clear <version> value
     *
     * @return \google\appengine\v1\UpdateVersionRequest
     */
    public function clearVersion(){
      return $this->_clear(2);
    }
    
    /**
     * Get <version> value
     *
     * @return \google\appengine\v1\Version
     */
    public function getVersion(){
      return $this->_get(2);
    }
    
    /**
     * Set <version> value
     *
     * @param \google\appengine\v1\Version $value
     * @return \google\appengine\v1\UpdateVersionRequest
     */
    public function setVersion(\google\appengine\v1\Version $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <update_mask> has a value
     *
     * @return boolean
     */
    public function hasUpdateMask(){
      return $this->_has(3);
    }
    
    /**
     * Clear <update_mask> value
     *
     * @return \google\appengine\v1\UpdateVersionRequest
     */
    public function clearUpdateMask(){
      return $this->_clear(3);
    }
    
    /**
     * Get <update_mask> value
     *
     * @return \google\protobuf\FieldMask
     */
    public function getUpdateMask(){
      return $this->_get(3);
    }
    
    /**
     * Set <update_mask> value
     *
     * @param \google\protobuf\FieldMask $value
     * @return \google\appengine\v1\UpdateVersionRequest
     */
    public function setUpdateMask(\google\protobuf\FieldMask $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\appengine\v1 {

  class DeleteVersionRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.DeleteVersionRequest');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\appengine\v1\DeleteVersionRequest
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\appengine\v1\DeleteVersionRequest
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\appengine\v1 {

  class ListInstancesRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $parent = null;
    
    /**  @var int */
    public $page_size = null;
    
    /**  @var string */
    public $page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.ListInstancesRequest');

      // OPTIONAL STRING parent = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "parent";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 page_size = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "page_size";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING page_token = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <parent> has a value
     *
     * @return boolean
     */
    public function hasParent(){
      return $this->_has(1);
    }
    
    /**
     * Clear <parent> value
     *
     * @return \google\appengine\v1\ListInstancesRequest
     */
    public function clearParent(){
      return $this->_clear(1);
    }
    
    /**
     * Get <parent> value
     *
     * @return string
     */
    public function getParent(){
      return $this->_get(1);
    }
    
    /**
     * Set <parent> value
     *
     * @param string $value
     * @return \google\appengine\v1\ListInstancesRequest
     */
    public function setParent( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <page_size> has a value
     *
     * @return boolean
     */
    public function hasPageSize(){
      return $this->_has(2);
    }
    
    /**
     * Clear <page_size> value
     *
     * @return \google\appengine\v1\ListInstancesRequest
     */
    public function clearPageSize(){
      return $this->_clear(2);
    }
    
    /**
     * Get <page_size> value
     *
     * @return int
     */
    public function getPageSize(){
      return $this->_get(2);
    }
    
    /**
     * Set <page_size> value
     *
     * @param int $value
     * @return \google\appengine\v1\ListInstancesRequest
     */
    public function setPageSize( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <page_token> has a value
     *
     * @return boolean
     */
    public function hasPageToken(){
      return $this->_has(3);
    }
    
    /**
     * Clear <page_token> value
     *
     * @return \google\appengine\v1\ListInstancesRequest
     */
    public function clearPageToken(){
      return $this->_clear(3);
    }
    
    /**
     * Get <page_token> value
     *
     * @return string
     */
    public function getPageToken(){
      return $this->_get(3);
    }
    
    /**
     * Set <page_token> value
     *
     * @param string $value
     * @return \google\appengine\v1\ListInstancesRequest
     */
    public function setPageToken( $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\appengine\v1 {

  class ListInstancesResponse extends \DrSlump\Protobuf\Message {

    /**  @var \google\appengine\v1\Instance[]  */
    public $instances = array();
    
    /**  @var string */
    public $next_page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.ListInstancesResponse');

      // REPEATED MESSAGE instances = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "instances";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\appengine\v1\Instance';
      $descriptor->addField($f);

      // OPTIONAL STRING next_page_token = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "next_page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <instances> has a value
     *
     * @return boolean
     */
    public function hasInstances(){
      return $this->_has(1);
    }
    
    /**
     * Clear <instances> value
     *
     * @return \google\appengine\v1\ListInstancesResponse
     */
    public function clearInstances(){
      return $this->_clear(1);
    }
    
    /**
     * Get <instances> value
     *
     * @param int $idx
     * @return \google\appengine\v1\Instance
     */
    public function getInstances($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <instances> value
     *
     * @param \google\appengine\v1\Instance $value
     * @return \google\appengine\v1\ListInstancesResponse
     */
    public function setInstances(\google\appengine\v1\Instance $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <instances>
     *
     * @return \google\appengine\v1\Instance[]
     */
    public function getInstancesList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <instances>
     *
     * @param \google\appengine\v1\Instance $value
     * @return \google\appengine\v1\ListInstancesResponse
     */
    public function addInstances(\google\appengine\v1\Instance $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <next_page_token> has a value
     *
     * @return boolean
     */
    public function hasNextPageToken(){
      return $this->_has(2);
    }
    
    /**
     * Clear <next_page_token> value
     *
     * @return \google\appengine\v1\ListInstancesResponse
     */
    public function clearNextPageToken(){
      return $this->_clear(2);
    }
    
    /**
     * Get <next_page_token> value
     *
     * @return string
     */
    public function getNextPageToken(){
      return $this->_get(2);
    }
    
    /**
     * Set <next_page_token> value
     *
     * @param string $value
     * @return \google\appengine\v1\ListInstancesResponse
     */
    public function setNextPageToken( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\appengine\v1 {

  class GetInstanceRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.GetInstanceRequest');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\appengine\v1\GetInstanceRequest
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\appengine\v1\GetInstanceRequest
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\appengine\v1 {

  class DeleteInstanceRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.DeleteInstanceRequest');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\appengine\v1\DeleteInstanceRequest
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\appengine\v1\DeleteInstanceRequest
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\appengine\v1 {

  class DebugInstanceRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.DebugInstanceRequest');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\appengine\v1\DebugInstanceRequest
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\appengine\v1\DebugInstanceRequest
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\appengine\v1 {

  class InstancesClient extends \Grpc\BaseStub {

    public function __construct($hostname, $opts, $channel = null) {
      parent::__construct($hostname, $opts, $channel);
    }
    /**
     * @param google\appengine\v1\ListInstancesRequest $input
     */
    public function ListInstances(\google\appengine\v1\ListInstancesRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.appengine.v1.Instances/ListInstances', $argument, '\google\appengine\v1\ListInstancesResponse::deserialize', $metadata, $options);
    }
    /**
     * @param google\appengine\v1\GetInstanceRequest $input
     */
    public function GetInstance(\google\appengine\v1\GetInstanceRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.appengine.v1.Instances/GetInstance', $argument, '\google\appengine\v1\Instance::deserialize', $metadata, $options);
    }
    /**
     * @param google\appengine\v1\DeleteInstanceRequest $input
     */
    public function DeleteInstance(\google\appengine\v1\DeleteInstanceRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.appengine.v1.Instances/DeleteInstance', $argument, '\google\longrunning\Operation::deserialize', $metadata, $options);
    }
    /**
     * @param google\appengine\v1\DebugInstanceRequest $input
     */
    public function DebugInstance(\google\appengine\v1\DebugInstanceRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.appengine.v1.Instances/DebugInstance', $argument, '\google\longrunning\Operation::deserialize', $metadata, $options);
    }
  }
}
namespace google\appengine\v1 {

  class VersionsClient extends \Grpc\BaseStub {

    public function __construct($hostname, $opts, $channel = null) {
      parent::__construct($hostname, $opts, $channel);
    }
    /**
     * @param google\appengine\v1\ListVersionsRequest $input
     */
    public function ListVersions(\google\appengine\v1\ListVersionsRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.appengine.v1.Versions/ListVersions', $argument, '\google\appengine\v1\ListVersionsResponse::deserialize', $metadata, $options);
    }
    /**
     * @param google\appengine\v1\GetVersionRequest $input
     */
    public function GetVersion(\google\appengine\v1\GetVersionRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.appengine.v1.Versions/GetVersion', $argument, '\google\appengine\v1\Version::deserialize', $metadata, $options);
    }
    /**
     * @param google\appengine\v1\CreateVersionRequest $input
     */
    public function CreateVersion(\google\appengine\v1\CreateVersionRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.appengine.v1.Versions/CreateVersion', $argument, '\google\longrunning\Operation::deserialize', $metadata, $options);
    }
    /**
     * @param google\appengine\v1\UpdateVersionRequest $input
     */
    public function UpdateVersion(\google\appengine\v1\UpdateVersionRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.appengine.v1.Versions/UpdateVersion', $argument, '\google\longrunning\Operation::deserialize', $metadata, $options);
    }
    /**
     * @param google\appengine\v1\DeleteVersionRequest $input
     */
    public function DeleteVersion(\google\appengine\v1\DeleteVersionRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.appengine.v1.Versions/DeleteVersion', $argument, '\google\longrunning\Operation::deserialize', $metadata, $options);
    }
  }
}
namespace google\appengine\v1 {

  class ServicesClient extends \Grpc\BaseStub {

    public function __construct($hostname, $opts, $channel = null) {
      parent::__construct($hostname, $opts, $channel);
    }
    /**
     * @param google\appengine\v1\ListServicesRequest $input
     */
    public function ListServices(\google\appengine\v1\ListServicesRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.appengine.v1.Services/ListServices', $argument, '\google\appengine\v1\ListServicesResponse::deserialize', $metadata, $options);
    }
    /**
     * @param google\appengine\v1\GetServiceRequest $input
     */
    public function GetService(\google\appengine\v1\GetServiceRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.appengine.v1.Services/GetService', $argument, '\google\appengine\v1\Service::deserialize', $metadata, $options);
    }
    /**
     * @param google\appengine\v1\UpdateServiceRequest $input
     */
    public function UpdateService(\google\appengine\v1\UpdateServiceRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.appengine.v1.Services/UpdateService', $argument, '\google\longrunning\Operation::deserialize', $metadata, $options);
    }
    /**
     * @param google\appengine\v1\DeleteServiceRequest $input
     */
    public function DeleteService(\google\appengine\v1\DeleteServiceRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.appengine.v1.Services/DeleteService', $argument, '\google\longrunning\Operation::deserialize', $metadata, $options);
    }
  }
}
namespace google\appengine\v1 {

  class ApplicationsClient extends \Grpc\BaseStub {

    public function __construct($hostname, $opts, $channel = null) {
      parent::__construct($hostname, $opts, $channel);
    }
    /**
     * @param google\appengine\v1\GetApplicationRequest $input
     */
    public function GetApplication(\google\appengine\v1\GetApplicationRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.appengine.v1.Applications/GetApplication', $argument, '\google\appengine\v1\Application::deserialize', $metadata, $options);
    }
    /**
     * @param google\appengine\v1\RepairApplicationRequest $input
     */
    public function RepairApplication(\google\appengine\v1\RepairApplicationRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.appengine.v1.Applications/RepairApplication', $argument, '\google\longrunning\Operation::deserialize', $metadata, $options);
    }
  }
}
