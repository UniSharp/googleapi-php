<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: google/api/servicecontrol/v1/metric_value.proto
//   Date: 2017-06-13 04:22:59

namespace google\api\servicecontrol\v1\MetricValue {

  class LabelsEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $key = null;
    
    /**  @var string */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.servicecontrol.v1.MetricValue.LabelsEntry');

      // OPTIONAL STRING key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <key> has a value
     *
     * @return boolean
     */
    public function hasKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <key> value
     *
     * @return \google\api\servicecontrol\v1\MetricValue\LabelsEntry
     */
    public function clearKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <key> value
     *
     * @return string
     */
    public function getKey(){
      return $this->_get(1);
    }
    
    /**
     * Set <key> value
     *
     * @param string $value
     * @return \google\api\servicecontrol\v1\MetricValue\LabelsEntry
     */
    public function setKey( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\api\servicecontrol\v1\MetricValue\LabelsEntry
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return string
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param string $value
     * @return \google\api\servicecontrol\v1\MetricValue\LabelsEntry
     */
    public function setValue( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\api\servicecontrol\v1 {

  class MetricValue extends \DrSlump\Protobuf\Message {

    /**  @var \google\api\servicecontrol\v1\MetricValue\LabelsEntry[]  */
    public $labels = array();
    
    /**  @var \google\protobuf\Timestamp */
    public $start_time = null;
    
    /**  @var \google\protobuf\Timestamp */
    public $end_time = null;
    
    /**  @var boolean */
    public $bool_value = null;
    
    /**  @var int */
    public $int64_value = null;
    
    /**  @var float */
    public $double_value = null;
    
    /**  @var string */
    public $string_value = null;
    
    /**  @var \google\api\servicecontrol\v1\Distribution */
    public $distribution_value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.servicecontrol.v1.MetricValue');

      // REPEATED MESSAGE labels = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "labels";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\api\servicecontrol\v1\MetricValue\LabelsEntry';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE start_time = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "start_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Timestamp';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE end_time = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "end_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Timestamp';
      $descriptor->addField($f);

      // OPTIONAL BOOL bool_value = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "bool_value";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 int64_value = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "int64_value";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL DOUBLE double_value = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "double_value";
      $f->type      = \DrSlump\Protobuf::TYPE_DOUBLE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING string_value = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "string_value";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE distribution_value = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "distribution_value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\api\servicecontrol\v1\Distribution';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <labels> has a value
     *
     * @return boolean
     */
    public function hasLabels(){
      return $this->_has(1);
    }
    
    /**
     * Clear <labels> value
     *
     * @return \google\api\servicecontrol\v1\MetricValue
     */
    public function clearLabels(){
      return $this->_clear(1);
    }
    
    /**
     * Get <labels> value
     *
     * @param int $idx
     * @return \google\api\servicecontrol\v1\MetricValue\LabelsEntry
     */
    public function getLabels($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <labels> value
     *
     * @param \google\api\servicecontrol\v1\MetricValue\LabelsEntry $value
     * @return \google\api\servicecontrol\v1\MetricValue
     */
    public function setLabels(\google\api\servicecontrol\v1\MetricValue\LabelsEntry $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <labels>
     *
     * @return \google\api\servicecontrol\v1\MetricValue\LabelsEntry[]
     */
    public function getLabelsList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <labels>
     *
     * @param \google\api\servicecontrol\v1\MetricValue\LabelsEntry $value
     * @return \google\api\servicecontrol\v1\MetricValue
     */
    public function addLabels(\google\api\servicecontrol\v1\MetricValue\LabelsEntry $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <start_time> has a value
     *
     * @return boolean
     */
    public function hasStartTime(){
      return $this->_has(2);
    }
    
    /**
     * Clear <start_time> value
     *
     * @return \google\api\servicecontrol\v1\MetricValue
     */
    public function clearStartTime(){
      return $this->_clear(2);
    }
    
    /**
     * Get <start_time> value
     *
     * @return \google\protobuf\Timestamp
     */
    public function getStartTime(){
      return $this->_get(2);
    }
    
    /**
     * Set <start_time> value
     *
     * @param \google\protobuf\Timestamp $value
     * @return \google\api\servicecontrol\v1\MetricValue
     */
    public function setStartTime(\google\protobuf\Timestamp $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <end_time> has a value
     *
     * @return boolean
     */
    public function hasEndTime(){
      return $this->_has(3);
    }
    
    /**
     * Clear <end_time> value
     *
     * @return \google\api\servicecontrol\v1\MetricValue
     */
    public function clearEndTime(){
      return $this->_clear(3);
    }
    
    /**
     * Get <end_time> value
     *
     * @return \google\protobuf\Timestamp
     */
    public function getEndTime(){
      return $this->_get(3);
    }
    
    /**
     * Set <end_time> value
     *
     * @param \google\protobuf\Timestamp $value
     * @return \google\api\servicecontrol\v1\MetricValue
     */
    public function setEndTime(\google\protobuf\Timestamp $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <bool_value> has a value
     *
     * @return boolean
     */
    public function hasBoolValue(){
      return $this->_has(4);
    }
    
    /**
     * Clear <bool_value> value
     *
     * @return \google\api\servicecontrol\v1\MetricValue
     */
    public function clearBoolValue(){
      return $this->_clear(4);
    }
    
    /**
     * Get <bool_value> value
     *
     * @return boolean
     */
    public function getBoolValue(){
      return $this->_get(4);
    }
    
    /**
     * Set <bool_value> value
     *
     * @param boolean $value
     * @return \google\api\servicecontrol\v1\MetricValue
     */
    public function setBoolValue( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <int64_value> has a value
     *
     * @return boolean
     */
    public function hasInt64Value(){
      return $this->_has(5);
    }
    
    /**
     * Clear <int64_value> value
     *
     * @return \google\api\servicecontrol\v1\MetricValue
     */
    public function clearInt64Value(){
      return $this->_clear(5);
    }
    
    /**
     * Get <int64_value> value
     *
     * @return int
     */
    public function getInt64Value(){
      return $this->_get(5);
    }
    
    /**
     * Set <int64_value> value
     *
     * @param int $value
     * @return \google\api\servicecontrol\v1\MetricValue
     */
    public function setInt64Value( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <double_value> has a value
     *
     * @return boolean
     */
    public function hasDoubleValue(){
      return $this->_has(6);
    }
    
    /**
     * Clear <double_value> value
     *
     * @return \google\api\servicecontrol\v1\MetricValue
     */
    public function clearDoubleValue(){
      return $this->_clear(6);
    }
    
    /**
     * Get <double_value> value
     *
     * @return float
     */
    public function getDoubleValue(){
      return $this->_get(6);
    }
    
    /**
     * Set <double_value> value
     *
     * @param float $value
     * @return \google\api\servicecontrol\v1\MetricValue
     */
    public function setDoubleValue( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <string_value> has a value
     *
     * @return boolean
     */
    public function hasStringValue(){
      return $this->_has(7);
    }
    
    /**
     * Clear <string_value> value
     *
     * @return \google\api\servicecontrol\v1\MetricValue
     */
    public function clearStringValue(){
      return $this->_clear(7);
    }
    
    /**
     * Get <string_value> value
     *
     * @return string
     */
    public function getStringValue(){
      return $this->_get(7);
    }
    
    /**
     * Set <string_value> value
     *
     * @param string $value
     * @return \google\api\servicecontrol\v1\MetricValue
     */
    public function setStringValue( $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <distribution_value> has a value
     *
     * @return boolean
     */
    public function hasDistributionValue(){
      return $this->_has(8);
    }
    
    /**
     * Clear <distribution_value> value
     *
     * @return \google\api\servicecontrol\v1\MetricValue
     */
    public function clearDistributionValue(){
      return $this->_clear(8);
    }
    
    /**
     * Get <distribution_value> value
     *
     * @return \google\api\servicecontrol\v1\Distribution
     */
    public function getDistributionValue(){
      return $this->_get(8);
    }
    
    /**
     * Set <distribution_value> value
     *
     * @param \google\api\servicecontrol\v1\Distribution $value
     * @return \google\api\servicecontrol\v1\MetricValue
     */
    public function setDistributionValue(\google\api\servicecontrol\v1\Distribution $value){
      return $this->_set(8, $value);
    }
  }
}

namespace google\api\servicecontrol\v1 {

  class MetricValueSet extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $metric_name = null;
    
    /**  @var \google\api\servicecontrol\v1\MetricValue[]  */
    public $metric_values = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.servicecontrol.v1.MetricValueSet');

      // OPTIONAL STRING metric_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "metric_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE metric_values = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "metric_values";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\api\servicecontrol\v1\MetricValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <metric_name> has a value
     *
     * @return boolean
     */
    public function hasMetricName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <metric_name> value
     *
     * @return \google\api\servicecontrol\v1\MetricValueSet
     */
    public function clearMetricName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <metric_name> value
     *
     * @return string
     */
    public function getMetricName(){
      return $this->_get(1);
    }
    
    /**
     * Set <metric_name> value
     *
     * @param string $value
     * @return \google\api\servicecontrol\v1\MetricValueSet
     */
    public function setMetricName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <metric_values> has a value
     *
     * @return boolean
     */
    public function hasMetricValues(){
      return $this->_has(2);
    }
    
    /**
     * Clear <metric_values> value
     *
     * @return \google\api\servicecontrol\v1\MetricValueSet
     */
    public function clearMetricValues(){
      return $this->_clear(2);
    }
    
    /**
     * Get <metric_values> value
     *
     * @param int $idx
     * @return \google\api\servicecontrol\v1\MetricValue
     */
    public function getMetricValues($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <metric_values> value
     *
     * @param \google\api\servicecontrol\v1\MetricValue $value
     * @return \google\api\servicecontrol\v1\MetricValueSet
     */
    public function setMetricValues(\google\api\servicecontrol\v1\MetricValue $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <metric_values>
     *
     * @return \google\api\servicecontrol\v1\MetricValue[]
     */
    public function getMetricValuesList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <metric_values>
     *
     * @param \google\api\servicecontrol\v1\MetricValue $value
     * @return \google\api\servicecontrol\v1\MetricValueSet
     */
    public function addMetricValues(\google\api\servicecontrol\v1\MetricValue $value){
     return $this->_add(2, $value);
    }
  }
}

