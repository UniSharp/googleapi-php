<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: google/genomics/v1/readalignment.proto
//   Date: 2017-06-13 04:25:43

namespace google\genomics\v1 {

  class LinearAlignment extends \DrSlump\Protobuf\Message {

    /**  @var \google\genomics\v1\Position */
    public $position = null;
    
    /**  @var int */
    public $mapping_quality = null;
    
    /**  @var \google\genomics\v1\CigarUnit[]  */
    public $cigar = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1.LinearAlignment');

      // OPTIONAL MESSAGE position = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "position";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\genomics\v1\Position';
      $descriptor->addField($f);

      // OPTIONAL INT32 mapping_quality = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "mapping_quality";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE cigar = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "cigar";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\genomics\v1\CigarUnit';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <position> has a value
     *
     * @return boolean
     */
    public function hasPosition(){
      return $this->_has(1);
    }
    
    /**
     * Clear <position> value
     *
     * @return \google\genomics\v1\LinearAlignment
     */
    public function clearPosition(){
      return $this->_clear(1);
    }
    
    /**
     * Get <position> value
     *
     * @return \google\genomics\v1\Position
     */
    public function getPosition(){
      return $this->_get(1);
    }
    
    /**
     * Set <position> value
     *
     * @param \google\genomics\v1\Position $value
     * @return \google\genomics\v1\LinearAlignment
     */
    public function setPosition(\google\genomics\v1\Position $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <mapping_quality> has a value
     *
     * @return boolean
     */
    public function hasMappingQuality(){
      return $this->_has(2);
    }
    
    /**
     * Clear <mapping_quality> value
     *
     * @return \google\genomics\v1\LinearAlignment
     */
    public function clearMappingQuality(){
      return $this->_clear(2);
    }
    
    /**
     * Get <mapping_quality> value
     *
     * @return int
     */
    public function getMappingQuality(){
      return $this->_get(2);
    }
    
    /**
     * Set <mapping_quality> value
     *
     * @param int $value
     * @return \google\genomics\v1\LinearAlignment
     */
    public function setMappingQuality( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <cigar> has a value
     *
     * @return boolean
     */
    public function hasCigar(){
      return $this->_has(3);
    }
    
    /**
     * Clear <cigar> value
     *
     * @return \google\genomics\v1\LinearAlignment
     */
    public function clearCigar(){
      return $this->_clear(3);
    }
    
    /**
     * Get <cigar> value
     *
     * @param int $idx
     * @return \google\genomics\v1\CigarUnit
     */
    public function getCigar($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <cigar> value
     *
     * @param \google\genomics\v1\CigarUnit $value
     * @return \google\genomics\v1\LinearAlignment
     */
    public function setCigar(\google\genomics\v1\CigarUnit $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <cigar>
     *
     * @return \google\genomics\v1\CigarUnit[]
     */
    public function getCigarList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <cigar>
     *
     * @param \google\genomics\v1\CigarUnit $value
     * @return \google\genomics\v1\LinearAlignment
     */
    public function addCigar(\google\genomics\v1\CigarUnit $value){
     return $this->_add(3, $value);
    }
  }
}

namespace google\genomics\v1\Read {

  class InfoEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $key = null;
    
    /**  @var \google\protobuf\ListValue */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1.Read.InfoEntry');

      // OPTIONAL STRING key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\ListValue';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <key> has a value
     *
     * @return boolean
     */
    public function hasKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <key> value
     *
     * @return \google\genomics\v1\Read\InfoEntry
     */
    public function clearKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <key> value
     *
     * @return string
     */
    public function getKey(){
      return $this->_get(1);
    }
    
    /**
     * Set <key> value
     *
     * @param string $value
     * @return \google\genomics\v1\Read\InfoEntry
     */
    public function setKey( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\genomics\v1\Read\InfoEntry
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return \google\protobuf\ListValue
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param \google\protobuf\ListValue $value
     * @return \google\genomics\v1\Read\InfoEntry
     */
    public function setValue(\google\protobuf\ListValue $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\genomics\v1 {

  class Read extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $id = null;
    
    /**  @var string */
    public $read_group_id = null;
    
    /**  @var string */
    public $read_group_set_id = null;
    
    /**  @var string */
    public $fragment_name = null;
    
    /**  @var boolean */
    public $proper_placement = null;
    
    /**  @var boolean */
    public $duplicate_fragment = null;
    
    /**  @var int */
    public $fragment_length = null;
    
    /**  @var int */
    public $read_number = null;
    
    /**  @var int */
    public $number_reads = null;
    
    /**  @var boolean */
    public $failed_vendor_quality_checks = null;
    
    /**  @var \google\genomics\v1\LinearAlignment */
    public $alignment = null;
    
    /**  @var boolean */
    public $secondary_alignment = null;
    
    /**  @var boolean */
    public $supplementary_alignment = null;
    
    /**  @var string */
    public $aligned_sequence = null;
    
    /**  @var int[]  */
    public $aligned_quality = array();
    
    /**  @var \google\genomics\v1\Position */
    public $next_mate_position = null;
    
    /**  @var \google\genomics\v1\Read\InfoEntry[]  */
    public $info = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.genomics.v1.Read');

      // OPTIONAL STRING id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING read_group_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "read_group_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING read_group_set_id = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "read_group_set_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING fragment_name = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "fragment_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL proper_placement = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "proper_placement";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL duplicate_fragment = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "duplicate_fragment";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 fragment_length = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "fragment_length";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 read_number = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "read_number";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 number_reads = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "number_reads";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL failed_vendor_quality_checks = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "failed_vendor_quality_checks";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE alignment = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "alignment";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\genomics\v1\LinearAlignment';
      $descriptor->addField($f);

      // OPTIONAL BOOL secondary_alignment = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "secondary_alignment";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL supplementary_alignment = 13
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 13;
      $f->name      = "supplementary_alignment";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING aligned_sequence = 14
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 14;
      $f->name      = "aligned_sequence";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED INT32 aligned_quality = 15
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 15;
      $f->name      = "aligned_quality";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE next_mate_position = 16
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 16;
      $f->name      = "next_mate_position";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\genomics\v1\Position';
      $descriptor->addField($f);

      // REPEATED MESSAGE info = 17
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 17;
      $f->name      = "info";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\genomics\v1\Read\InfoEntry';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <id> has a value
     *
     * @return boolean
     */
    public function hasId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <id> value
     *
     * @return \google\genomics\v1\Read
     */
    public function clearId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <id> value
     *
     * @return string
     */
    public function getId(){
      return $this->_get(1);
    }
    
    /**
     * Set <id> value
     *
     * @param string $value
     * @return \google\genomics\v1\Read
     */
    public function setId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <read_group_id> has a value
     *
     * @return boolean
     */
    public function hasReadGroupId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <read_group_id> value
     *
     * @return \google\genomics\v1\Read
     */
    public function clearReadGroupId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <read_group_id> value
     *
     * @return string
     */
    public function getReadGroupId(){
      return $this->_get(2);
    }
    
    /**
     * Set <read_group_id> value
     *
     * @param string $value
     * @return \google\genomics\v1\Read
     */
    public function setReadGroupId( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <read_group_set_id> has a value
     *
     * @return boolean
     */
    public function hasReadGroupSetId(){
      return $this->_has(3);
    }
    
    /**
     * Clear <read_group_set_id> value
     *
     * @return \google\genomics\v1\Read
     */
    public function clearReadGroupSetId(){
      return $this->_clear(3);
    }
    
    /**
     * Get <read_group_set_id> value
     *
     * @return string
     */
    public function getReadGroupSetId(){
      return $this->_get(3);
    }
    
    /**
     * Set <read_group_set_id> value
     *
     * @param string $value
     * @return \google\genomics\v1\Read
     */
    public function setReadGroupSetId( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <fragment_name> has a value
     *
     * @return boolean
     */
    public function hasFragmentName(){
      return $this->_has(4);
    }
    
    /**
     * Clear <fragment_name> value
     *
     * @return \google\genomics\v1\Read
     */
    public function clearFragmentName(){
      return $this->_clear(4);
    }
    
    /**
     * Get <fragment_name> value
     *
     * @return string
     */
    public function getFragmentName(){
      return $this->_get(4);
    }
    
    /**
     * Set <fragment_name> value
     *
     * @param string $value
     * @return \google\genomics\v1\Read
     */
    public function setFragmentName( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <proper_placement> has a value
     *
     * @return boolean
     */
    public function hasProperPlacement(){
      return $this->_has(5);
    }
    
    /**
     * Clear <proper_placement> value
     *
     * @return \google\genomics\v1\Read
     */
    public function clearProperPlacement(){
      return $this->_clear(5);
    }
    
    /**
     * Get <proper_placement> value
     *
     * @return boolean
     */
    public function getProperPlacement(){
      return $this->_get(5);
    }
    
    /**
     * Set <proper_placement> value
     *
     * @param boolean $value
     * @return \google\genomics\v1\Read
     */
    public function setProperPlacement( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <duplicate_fragment> has a value
     *
     * @return boolean
     */
    public function hasDuplicateFragment(){
      return $this->_has(6);
    }
    
    /**
     * Clear <duplicate_fragment> value
     *
     * @return \google\genomics\v1\Read
     */
    public function clearDuplicateFragment(){
      return $this->_clear(6);
    }
    
    /**
     * Get <duplicate_fragment> value
     *
     * @return boolean
     */
    public function getDuplicateFragment(){
      return $this->_get(6);
    }
    
    /**
     * Set <duplicate_fragment> value
     *
     * @param boolean $value
     * @return \google\genomics\v1\Read
     */
    public function setDuplicateFragment( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <fragment_length> has a value
     *
     * @return boolean
     */
    public function hasFragmentLength(){
      return $this->_has(7);
    }
    
    /**
     * Clear <fragment_length> value
     *
     * @return \google\genomics\v1\Read
     */
    public function clearFragmentLength(){
      return $this->_clear(7);
    }
    
    /**
     * Get <fragment_length> value
     *
     * @return int
     */
    public function getFragmentLength(){
      return $this->_get(7);
    }
    
    /**
     * Set <fragment_length> value
     *
     * @param int $value
     * @return \google\genomics\v1\Read
     */
    public function setFragmentLength( $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <read_number> has a value
     *
     * @return boolean
     */
    public function hasReadNumber(){
      return $this->_has(8);
    }
    
    /**
     * Clear <read_number> value
     *
     * @return \google\genomics\v1\Read
     */
    public function clearReadNumber(){
      return $this->_clear(8);
    }
    
    /**
     * Get <read_number> value
     *
     * @return int
     */
    public function getReadNumber(){
      return $this->_get(8);
    }
    
    /**
     * Set <read_number> value
     *
     * @param int $value
     * @return \google\genomics\v1\Read
     */
    public function setReadNumber( $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <number_reads> has a value
     *
     * @return boolean
     */
    public function hasNumberReads(){
      return $this->_has(9);
    }
    
    /**
     * Clear <number_reads> value
     *
     * @return \google\genomics\v1\Read
     */
    public function clearNumberReads(){
      return $this->_clear(9);
    }
    
    /**
     * Get <number_reads> value
     *
     * @return int
     */
    public function getNumberReads(){
      return $this->_get(9);
    }
    
    /**
     * Set <number_reads> value
     *
     * @param int $value
     * @return \google\genomics\v1\Read
     */
    public function setNumberReads( $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <failed_vendor_quality_checks> has a value
     *
     * @return boolean
     */
    public function hasFailedVendorQualityChecks(){
      return $this->_has(10);
    }
    
    /**
     * Clear <failed_vendor_quality_checks> value
     *
     * @return \google\genomics\v1\Read
     */
    public function clearFailedVendorQualityChecks(){
      return $this->_clear(10);
    }
    
    /**
     * Get <failed_vendor_quality_checks> value
     *
     * @return boolean
     */
    public function getFailedVendorQualityChecks(){
      return $this->_get(10);
    }
    
    /**
     * Set <failed_vendor_quality_checks> value
     *
     * @param boolean $value
     * @return \google\genomics\v1\Read
     */
    public function setFailedVendorQualityChecks( $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <alignment> has a value
     *
     * @return boolean
     */
    public function hasAlignment(){
      return $this->_has(11);
    }
    
    /**
     * Clear <alignment> value
     *
     * @return \google\genomics\v1\Read
     */
    public function clearAlignment(){
      return $this->_clear(11);
    }
    
    /**
     * Get <alignment> value
     *
     * @return \google\genomics\v1\LinearAlignment
     */
    public function getAlignment(){
      return $this->_get(11);
    }
    
    /**
     * Set <alignment> value
     *
     * @param \google\genomics\v1\LinearAlignment $value
     * @return \google\genomics\v1\Read
     */
    public function setAlignment(\google\genomics\v1\LinearAlignment $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <secondary_alignment> has a value
     *
     * @return boolean
     */
    public function hasSecondaryAlignment(){
      return $this->_has(12);
    }
    
    /**
     * Clear <secondary_alignment> value
     *
     * @return \google\genomics\v1\Read
     */
    public function clearSecondaryAlignment(){
      return $this->_clear(12);
    }
    
    /**
     * Get <secondary_alignment> value
     *
     * @return boolean
     */
    public function getSecondaryAlignment(){
      return $this->_get(12);
    }
    
    /**
     * Set <secondary_alignment> value
     *
     * @param boolean $value
     * @return \google\genomics\v1\Read
     */
    public function setSecondaryAlignment( $value){
      return $this->_set(12, $value);
    }
    
    /**
     * Check if <supplementary_alignment> has a value
     *
     * @return boolean
     */
    public function hasSupplementaryAlignment(){
      return $this->_has(13);
    }
    
    /**
     * Clear <supplementary_alignment> value
     *
     * @return \google\genomics\v1\Read
     */
    public function clearSupplementaryAlignment(){
      return $this->_clear(13);
    }
    
    /**
     * Get <supplementary_alignment> value
     *
     * @return boolean
     */
    public function getSupplementaryAlignment(){
      return $this->_get(13);
    }
    
    /**
     * Set <supplementary_alignment> value
     *
     * @param boolean $value
     * @return \google\genomics\v1\Read
     */
    public function setSupplementaryAlignment( $value){
      return $this->_set(13, $value);
    }
    
    /**
     * Check if <aligned_sequence> has a value
     *
     * @return boolean
     */
    public function hasAlignedSequence(){
      return $this->_has(14);
    }
    
    /**
     * Clear <aligned_sequence> value
     *
     * @return \google\genomics\v1\Read
     */
    public function clearAlignedSequence(){
      return $this->_clear(14);
    }
    
    /**
     * Get <aligned_sequence> value
     *
     * @return string
     */
    public function getAlignedSequence(){
      return $this->_get(14);
    }
    
    /**
     * Set <aligned_sequence> value
     *
     * @param string $value
     * @return \google\genomics\v1\Read
     */
    public function setAlignedSequence( $value){
      return $this->_set(14, $value);
    }
    
    /**
     * Check if <aligned_quality> has a value
     *
     * @return boolean
     */
    public function hasAlignedQuality(){
      return $this->_has(15);
    }
    
    /**
     * Clear <aligned_quality> value
     *
     * @return \google\genomics\v1\Read
     */
    public function clearAlignedQuality(){
      return $this->_clear(15);
    }
    
    /**
     * Get <aligned_quality> value
     *
     * @param int $idx
     * @return int
     */
    public function getAlignedQuality($idx = NULL){
      return $this->_get(15, $idx);
    }
    
    /**
     * Set <aligned_quality> value
     *
     * @param int $value
     * @return \google\genomics\v1\Read
     */
    public function setAlignedQuality( $value, $idx = NULL){
      return $this->_set(15, $value, $idx);
    }
    
    /**
     * Get all elements of <aligned_quality>
     *
     * @return int[]
     */
    public function getAlignedQualityList(){
     return $this->_get(15);
    }
    
    /**
     * Add a new element to <aligned_quality>
     *
     * @param int $value
     * @return \google\genomics\v1\Read
     */
    public function addAlignedQuality( $value){
     return $this->_add(15, $value);
    }
    
    /**
     * Check if <next_mate_position> has a value
     *
     * @return boolean
     */
    public function hasNextMatePosition(){
      return $this->_has(16);
    }
    
    /**
     * Clear <next_mate_position> value
     *
     * @return \google\genomics\v1\Read
     */
    public function clearNextMatePosition(){
      return $this->_clear(16);
    }
    
    /**
     * Get <next_mate_position> value
     *
     * @return \google\genomics\v1\Position
     */
    public function getNextMatePosition(){
      return $this->_get(16);
    }
    
    /**
     * Set <next_mate_position> value
     *
     * @param \google\genomics\v1\Position $value
     * @return \google\genomics\v1\Read
     */
    public function setNextMatePosition(\google\genomics\v1\Position $value){
      return $this->_set(16, $value);
    }
    
    /**
     * Check if <info> has a value
     *
     * @return boolean
     */
    public function hasInfo(){
      return $this->_has(17);
    }
    
    /**
     * Clear <info> value
     *
     * @return \google\genomics\v1\Read
     */
    public function clearInfo(){
      return $this->_clear(17);
    }
    
    /**
     * Get <info> value
     *
     * @param int $idx
     * @return \google\genomics\v1\Read\InfoEntry
     */
    public function getInfo($idx = NULL){
      return $this->_get(17, $idx);
    }
    
    /**
     * Set <info> value
     *
     * @param \google\genomics\v1\Read\InfoEntry $value
     * @return \google\genomics\v1\Read
     */
    public function setInfo(\google\genomics\v1\Read\InfoEntry $value, $idx = NULL){
      return $this->_set(17, $value, $idx);
    }
    
    /**
     * Get all elements of <info>
     *
     * @return \google\genomics\v1\Read\InfoEntry[]
     */
    public function getInfoList(){
     return $this->_get(17);
    }
    
    /**
     * Add a new element to <info>
     *
     * @param \google\genomics\v1\Read\InfoEntry $value
     * @return \google\genomics\v1\Read
     */
    public function addInfo(\google\genomics\v1\Read\InfoEntry $value){
     return $this->_add(17, $value);
    }
  }
}

