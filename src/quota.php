<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: google/api/quota.proto
//   Date: 2017-06-13 04:23:07

namespace google\api {

  class Quota extends \DrSlump\Protobuf\Message {

    /**  @var \google\api\QuotaLimit[]  */
    public $limits = array();
    
    /**  @var \google\api\MetricRule[]  */
    public $metric_rules = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.Quota');

      // REPEATED MESSAGE limits = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "limits";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\api\QuotaLimit';
      $descriptor->addField($f);

      // REPEATED MESSAGE metric_rules = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "metric_rules";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\api\MetricRule';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <limits> has a value
     *
     * @return boolean
     */
    public function hasLimits(){
      return $this->_has(3);
    }
    
    /**
     * Clear <limits> value
     *
     * @return \google\api\Quota
     */
    public function clearLimits(){
      return $this->_clear(3);
    }
    
    /**
     * Get <limits> value
     *
     * @param int $idx
     * @return \google\api\QuotaLimit
     */
    public function getLimits($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <limits> value
     *
     * @param \google\api\QuotaLimit $value
     * @return \google\api\Quota
     */
    public function setLimits(\google\api\QuotaLimit $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <limits>
     *
     * @return \google\api\QuotaLimit[]
     */
    public function getLimitsList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <limits>
     *
     * @param \google\api\QuotaLimit $value
     * @return \google\api\Quota
     */
    public function addLimits(\google\api\QuotaLimit $value){
     return $this->_add(3, $value);
    }
    
    /**
     * Check if <metric_rules> has a value
     *
     * @return boolean
     */
    public function hasMetricRules(){
      return $this->_has(4);
    }
    
    /**
     * Clear <metric_rules> value
     *
     * @return \google\api\Quota
     */
    public function clearMetricRules(){
      return $this->_clear(4);
    }
    
    /**
     * Get <metric_rules> value
     *
     * @param int $idx
     * @return \google\api\MetricRule
     */
    public function getMetricRules($idx = NULL){
      return $this->_get(4, $idx);
    }
    
    /**
     * Set <metric_rules> value
     *
     * @param \google\api\MetricRule $value
     * @return \google\api\Quota
     */
    public function setMetricRules(\google\api\MetricRule $value, $idx = NULL){
      return $this->_set(4, $value, $idx);
    }
    
    /**
     * Get all elements of <metric_rules>
     *
     * @return \google\api\MetricRule[]
     */
    public function getMetricRulesList(){
     return $this->_get(4);
    }
    
    /**
     * Add a new element to <metric_rules>
     *
     * @param \google\api\MetricRule $value
     * @return \google\api\Quota
     */
    public function addMetricRules(\google\api\MetricRule $value){
     return $this->_add(4, $value);
    }
  }
}

namespace google\api\MetricRule {

  class MetricCostsEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $key = null;
    
    /**  @var int */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.MetricRule.MetricCostsEntry');

      // OPTIONAL STRING key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <key> has a value
     *
     * @return boolean
     */
    public function hasKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <key> value
     *
     * @return \google\api\MetricRule\MetricCostsEntry
     */
    public function clearKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <key> value
     *
     * @return string
     */
    public function getKey(){
      return $this->_get(1);
    }
    
    /**
     * Set <key> value
     *
     * @param string $value
     * @return \google\api\MetricRule\MetricCostsEntry
     */
    public function setKey( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\api\MetricRule\MetricCostsEntry
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return int
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param int $value
     * @return \google\api\MetricRule\MetricCostsEntry
     */
    public function setValue( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\api {

  class MetricRule extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $selector = null;
    
    /**  @var \google\api\MetricRule\MetricCostsEntry[]  */
    public $metric_costs = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.MetricRule');

      // OPTIONAL STRING selector = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "selector";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE metric_costs = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "metric_costs";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\api\MetricRule\MetricCostsEntry';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <selector> has a value
     *
     * @return boolean
     */
    public function hasSelector(){
      return $this->_has(1);
    }
    
    /**
     * Clear <selector> value
     *
     * @return \google\api\MetricRule
     */
    public function clearSelector(){
      return $this->_clear(1);
    }
    
    /**
     * Get <selector> value
     *
     * @return string
     */
    public function getSelector(){
      return $this->_get(1);
    }
    
    /**
     * Set <selector> value
     *
     * @param string $value
     * @return \google\api\MetricRule
     */
    public function setSelector( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <metric_costs> has a value
     *
     * @return boolean
     */
    public function hasMetricCosts(){
      return $this->_has(2);
    }
    
    /**
     * Clear <metric_costs> value
     *
     * @return \google\api\MetricRule
     */
    public function clearMetricCosts(){
      return $this->_clear(2);
    }
    
    /**
     * Get <metric_costs> value
     *
     * @param int $idx
     * @return \google\api\MetricRule\MetricCostsEntry
     */
    public function getMetricCosts($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <metric_costs> value
     *
     * @param \google\api\MetricRule\MetricCostsEntry $value
     * @return \google\api\MetricRule
     */
    public function setMetricCosts(\google\api\MetricRule\MetricCostsEntry $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <metric_costs>
     *
     * @return \google\api\MetricRule\MetricCostsEntry[]
     */
    public function getMetricCostsList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <metric_costs>
     *
     * @param \google\api\MetricRule\MetricCostsEntry $value
     * @return \google\api\MetricRule
     */
    public function addMetricCosts(\google\api\MetricRule\MetricCostsEntry $value){
     return $this->_add(2, $value);
    }
  }
}

namespace google\api\QuotaLimit {

  class ValuesEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $key = null;
    
    /**  @var int */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.QuotaLimit.ValuesEntry');

      // OPTIONAL STRING key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <key> has a value
     *
     * @return boolean
     */
    public function hasKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <key> value
     *
     * @return \google\api\QuotaLimit\ValuesEntry
     */
    public function clearKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <key> value
     *
     * @return string
     */
    public function getKey(){
      return $this->_get(1);
    }
    
    /**
     * Set <key> value
     *
     * @param string $value
     * @return \google\api\QuotaLimit\ValuesEntry
     */
    public function setKey( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\api\QuotaLimit\ValuesEntry
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return int
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param int $value
     * @return \google\api\QuotaLimit\ValuesEntry
     */
    public function setValue( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\api {

  class QuotaLimit extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var string */
    public $description = null;
    
    /**  @var int */
    public $default_limit = null;
    
    /**  @var int */
    public $max_limit = null;
    
    /**  @var int */
    public $free_tier = null;
    
    /**  @var string */
    public $duration = null;
    
    /**  @var string */
    public $metric = null;
    
    /**  @var string */
    public $unit = null;
    
    /**  @var \google\api\QuotaLimit\ValuesEntry[]  */
    public $values = array();
    
    /**  @var string */
    public $display_name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.QuotaLimit');

      // OPTIONAL STRING name = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING description = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "description";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 default_limit = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "default_limit";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 max_limit = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "max_limit";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 free_tier = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "free_tier";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING duration = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "duration";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING metric = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "metric";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING unit = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "unit";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE values = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "values";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\api\QuotaLimit\ValuesEntry';
      $descriptor->addField($f);

      // OPTIONAL STRING display_name = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "display_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(6);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\api\QuotaLimit
     */
    public function clearName(){
      return $this->_clear(6);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(6);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\api\QuotaLimit
     */
    public function setName( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <description> has a value
     *
     * @return boolean
     */
    public function hasDescription(){
      return $this->_has(2);
    }
    
    /**
     * Clear <description> value
     *
     * @return \google\api\QuotaLimit
     */
    public function clearDescription(){
      return $this->_clear(2);
    }
    
    /**
     * Get <description> value
     *
     * @return string
     */
    public function getDescription(){
      return $this->_get(2);
    }
    
    /**
     * Set <description> value
     *
     * @param string $value
     * @return \google\api\QuotaLimit
     */
    public function setDescription( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <default_limit> has a value
     *
     * @return boolean
     */
    public function hasDefaultLimit(){
      return $this->_has(3);
    }
    
    /**
     * Clear <default_limit> value
     *
     * @return \google\api\QuotaLimit
     */
    public function clearDefaultLimit(){
      return $this->_clear(3);
    }
    
    /**
     * Get <default_limit> value
     *
     * @return int
     */
    public function getDefaultLimit(){
      return $this->_get(3);
    }
    
    /**
     * Set <default_limit> value
     *
     * @param int $value
     * @return \google\api\QuotaLimit
     */
    public function setDefaultLimit( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <max_limit> has a value
     *
     * @return boolean
     */
    public function hasMaxLimit(){
      return $this->_has(4);
    }
    
    /**
     * Clear <max_limit> value
     *
     * @return \google\api\QuotaLimit
     */
    public function clearMaxLimit(){
      return $this->_clear(4);
    }
    
    /**
     * Get <max_limit> value
     *
     * @return int
     */
    public function getMaxLimit(){
      return $this->_get(4);
    }
    
    /**
     * Set <max_limit> value
     *
     * @param int $value
     * @return \google\api\QuotaLimit
     */
    public function setMaxLimit( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <free_tier> has a value
     *
     * @return boolean
     */
    public function hasFreeTier(){
      return $this->_has(7);
    }
    
    /**
     * Clear <free_tier> value
     *
     * @return \google\api\QuotaLimit
     */
    public function clearFreeTier(){
      return $this->_clear(7);
    }
    
    /**
     * Get <free_tier> value
     *
     * @return int
     */
    public function getFreeTier(){
      return $this->_get(7);
    }
    
    /**
     * Set <free_tier> value
     *
     * @param int $value
     * @return \google\api\QuotaLimit
     */
    public function setFreeTier( $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <duration> has a value
     *
     * @return boolean
     */
    public function hasDuration(){
      return $this->_has(5);
    }
    
    /**
     * Clear <duration> value
     *
     * @return \google\api\QuotaLimit
     */
    public function clearDuration(){
      return $this->_clear(5);
    }
    
    /**
     * Get <duration> value
     *
     * @return string
     */
    public function getDuration(){
      return $this->_get(5);
    }
    
    /**
     * Set <duration> value
     *
     * @param string $value
     * @return \google\api\QuotaLimit
     */
    public function setDuration( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <metric> has a value
     *
     * @return boolean
     */
    public function hasMetric(){
      return $this->_has(8);
    }
    
    /**
     * Clear <metric> value
     *
     * @return \google\api\QuotaLimit
     */
    public function clearMetric(){
      return $this->_clear(8);
    }
    
    /**
     * Get <metric> value
     *
     * @return string
     */
    public function getMetric(){
      return $this->_get(8);
    }
    
    /**
     * Set <metric> value
     *
     * @param string $value
     * @return \google\api\QuotaLimit
     */
    public function setMetric( $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <unit> has a value
     *
     * @return boolean
     */
    public function hasUnit(){
      return $this->_has(9);
    }
    
    /**
     * Clear <unit> value
     *
     * @return \google\api\QuotaLimit
     */
    public function clearUnit(){
      return $this->_clear(9);
    }
    
    /**
     * Get <unit> value
     *
     * @return string
     */
    public function getUnit(){
      return $this->_get(9);
    }
    
    /**
     * Set <unit> value
     *
     * @param string $value
     * @return \google\api\QuotaLimit
     */
    public function setUnit( $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <values> has a value
     *
     * @return boolean
     */
    public function hasValues(){
      return $this->_has(10);
    }
    
    /**
     * Clear <values> value
     *
     * @return \google\api\QuotaLimit
     */
    public function clearValues(){
      return $this->_clear(10);
    }
    
    /**
     * Get <values> value
     *
     * @param int $idx
     * @return \google\api\QuotaLimit\ValuesEntry
     */
    public function getValues($idx = NULL){
      return $this->_get(10, $idx);
    }
    
    /**
     * Set <values> value
     *
     * @param \google\api\QuotaLimit\ValuesEntry $value
     * @return \google\api\QuotaLimit
     */
    public function setValues(\google\api\QuotaLimit\ValuesEntry $value, $idx = NULL){
      return $this->_set(10, $value, $idx);
    }
    
    /**
     * Get all elements of <values>
     *
     * @return \google\api\QuotaLimit\ValuesEntry[]
     */
    public function getValuesList(){
     return $this->_get(10);
    }
    
    /**
     * Add a new element to <values>
     *
     * @param \google\api\QuotaLimit\ValuesEntry $value
     * @return \google\api\QuotaLimit
     */
    public function addValues(\google\api\QuotaLimit\ValuesEntry $value){
     return $this->_add(10, $value);
    }
    
    /**
     * Check if <display_name> has a value
     *
     * @return boolean
     */
    public function hasDisplayName(){
      return $this->_has(12);
    }
    
    /**
     * Clear <display_name> value
     *
     * @return \google\api\QuotaLimit
     */
    public function clearDisplayName(){
      return $this->_clear(12);
    }
    
    /**
     * Get <display_name> value
     *
     * @return string
     */
    public function getDisplayName(){
      return $this->_get(12);
    }
    
    /**
     * Set <display_name> value
     *
     * @param string $value
     * @return \google\api\QuotaLimit
     */
    public function setDisplayName( $value){
      return $this->_set(12, $value);
    }
  }
}

