<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: google/api/servicecontrol/v1/check_error.proto
//   Date: 2017-06-13 04:22:59

namespace google\api\servicecontrol\v1\CheckError {

  class Code extends \DrSlump\Protobuf\Enum {
    const ERROR_CODE_UNSPECIFIED = 0;
    const NOT_FOUND = 5;
    const PERMISSION_DENIED = 7;
    const RESOURCE_EXHAUSTED = 8;
    const SERVICE_NOT_ACTIVATED = 104;
    const BILLING_DISABLED = 107;
    const PROJECT_DELETED = 108;
    const PROJECT_INVALID = 114;
    const IP_ADDRESS_BLOCKED = 109;
    const REFERER_BLOCKED = 110;
    const CLIENT_APP_BLOCKED = 111;
    const API_KEY_INVALID = 105;
    const API_KEY_EXPIRED = 112;
    const API_KEY_NOT_FOUND = 113;
    const NAMESPACE_LOOKUP_UNAVAILABLE = 300;
    const SERVICE_STATUS_UNAVAILABLE = 301;
    const BILLING_STATUS_UNAVAILABLE = 302;
  }
}
namespace google\api\servicecontrol\v1 {

  class CheckError extends \DrSlump\Protobuf\Message {

    /**  @var int - \google\api\servicecontrol\v1\CheckError\Code */
    public $code = null;
    
    /**  @var string */
    public $detail = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.servicecontrol.v1.CheckError');

      // OPTIONAL ENUM code = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "code";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\api\servicecontrol\v1\CheckError\Code';
      $descriptor->addField($f);

      // OPTIONAL STRING detail = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "detail";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <code> has a value
     *
     * @return boolean
     */
    public function hasCode(){
      return $this->_has(1);
    }
    
    /**
     * Clear <code> value
     *
     * @return \google\api\servicecontrol\v1\CheckError
     */
    public function clearCode(){
      return $this->_clear(1);
    }
    
    /**
     * Get <code> value
     *
     * @return int - \google\api\servicecontrol\v1\CheckError\Code
     */
    public function getCode(){
      return $this->_get(1);
    }
    
    /**
     * Set <code> value
     *
     * @param int - \google\api\servicecontrol\v1\CheckError\Code $value
     * @return \google\api\servicecontrol\v1\CheckError
     */
    public function setCode( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <detail> has a value
     *
     * @return boolean
     */
    public function hasDetail(){
      return $this->_has(2);
    }
    
    /**
     * Clear <detail> value
     *
     * @return \google\api\servicecontrol\v1\CheckError
     */
    public function clearDetail(){
      return $this->_clear(2);
    }
    
    /**
     * Get <detail> value
     *
     * @return string
     */
    public function getDetail(){
      return $this->_get(2);
    }
    
    /**
     * Set <detail> value
     *
     * @param string $value
     * @return \google\api\servicecontrol\v1\CheckError
     */
    public function setDetail( $value){
      return $this->_set(2, $value);
    }
  }
}

