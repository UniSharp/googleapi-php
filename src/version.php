<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: google/appengine/v1/version.proto
//   Date: 2017-06-13 04:23:25

namespace google\appengine\v1 {

  class InboundServiceType extends \DrSlump\Protobuf\Enum {
    const INBOUND_SERVICE_UNSPECIFIED = 0;
    const INBOUND_SERVICE_MAIL = 1;
    const INBOUND_SERVICE_MAIL_BOUNCE = 2;
    const INBOUND_SERVICE_XMPP_ERROR = 3;
    const INBOUND_SERVICE_XMPP_MESSAGE = 4;
    const INBOUND_SERVICE_XMPP_SUBSCRIBE = 5;
    const INBOUND_SERVICE_XMPP_PRESENCE = 6;
    const INBOUND_SERVICE_CHANNEL_PRESENCE = 7;
    const INBOUND_SERVICE_WARMUP = 9;
  }
}
namespace google\appengine\v1 {

  class ServingStatus extends \DrSlump\Protobuf\Enum {
    const SERVING_STATUS_UNSPECIFIED = 0;
    const SERVING = 1;
    const STOPPED = 2;
  }
}
namespace google\appengine\v1\Version {

  class BetaSettingsEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $key = null;
    
    /**  @var string */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.Version.BetaSettingsEntry');

      // OPTIONAL STRING key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <key> has a value
     *
     * @return boolean
     */
    public function hasKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <key> value
     *
     * @return \google\appengine\v1\Version\BetaSettingsEntry
     */
    public function clearKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <key> value
     *
     * @return string
     */
    public function getKey(){
      return $this->_get(1);
    }
    
    /**
     * Set <key> value
     *
     * @param string $value
     * @return \google\appengine\v1\Version\BetaSettingsEntry
     */
    public function setKey( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\appengine\v1\Version\BetaSettingsEntry
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return string
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param string $value
     * @return \google\appengine\v1\Version\BetaSettingsEntry
     */
    public function setValue( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\appengine\v1\Version {

  class EnvVariablesEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $key = null;
    
    /**  @var string */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.Version.EnvVariablesEntry');

      // OPTIONAL STRING key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <key> has a value
     *
     * @return boolean
     */
    public function hasKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <key> value
     *
     * @return \google\appengine\v1\Version\EnvVariablesEntry
     */
    public function clearKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <key> value
     *
     * @return string
     */
    public function getKey(){
      return $this->_get(1);
    }
    
    /**
     * Set <key> value
     *
     * @param string $value
     * @return \google\appengine\v1\Version\EnvVariablesEntry
     */
    public function setKey( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\appengine\v1\Version\EnvVariablesEntry
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return string
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param string $value
     * @return \google\appengine\v1\Version\EnvVariablesEntry
     */
    public function setValue( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\appengine\v1 {

  class Version extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var string */
    public $id = null;
    
    /**  @var \google\appengine\v1\AutomaticScaling */
    public $automatic_scaling = null;
    
    /**  @var \google\appengine\v1\BasicScaling */
    public $basic_scaling = null;
    
    /**  @var \google\appengine\v1\ManualScaling */
    public $manual_scaling = null;
    
    /**  @var int - \google\appengine\v1\InboundServiceType[]  */
    public $inbound_services = array();
    
    /**  @var string */
    public $instance_class = null;
    
    /**  @var \google\appengine\v1\Network */
    public $network = null;
    
    /**  @var \google\appengine\v1\Resources */
    public $resources = null;
    
    /**  @var string */
    public $runtime = null;
    
    /**  @var boolean */
    public $threadsafe = null;
    
    /**  @var boolean */
    public $vm = null;
    
    /**  @var \google\appengine\v1\Version\BetaSettingsEntry[]  */
    public $beta_settings = array();
    
    /**  @var string */
    public $env = null;
    
    /**  @var int - \google\appengine\v1\ServingStatus */
    public $serving_status = null;
    
    /**  @var string */
    public $created_by = null;
    
    /**  @var \google\protobuf\Timestamp */
    public $create_time = null;
    
    /**  @var int */
    public $disk_usage_bytes = null;
    
    /**  @var \google\appengine\v1\UrlMap[]  */
    public $handlers = array();
    
    /**  @var \google\appengine\v1\ErrorHandler[]  */
    public $error_handlers = array();
    
    /**  @var \google\appengine\v1\Library[]  */
    public $libraries = array();
    
    /**  @var \google\appengine\v1\ApiConfigHandler */
    public $api_config = null;
    
    /**  @var \google\appengine\v1\Version\EnvVariablesEntry[]  */
    public $env_variables = array();
    
    /**  @var \google\protobuf\Duration */
    public $default_expiration = null;
    
    /**  @var \google\appengine\v1\HealthCheck */
    public $health_check = null;
    
    /**  @var string */
    public $nobuild_files_regex = null;
    
    /**  @var \google\appengine\v1\Deployment */
    public $deployment = null;
    
    /**  @var string */
    public $version_url = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.Version');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE automatic_scaling = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "automatic_scaling";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\appengine\v1\AutomaticScaling';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE basic_scaling = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "basic_scaling";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\appengine\v1\BasicScaling';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE manual_scaling = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "manual_scaling";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\appengine\v1\ManualScaling';
      $descriptor->addField($f);

      // REPEATED ENUM inbound_services = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "inbound_services";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\appengine\v1\InboundServiceType';
      $descriptor->addField($f);

      // OPTIONAL STRING instance_class = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "instance_class";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE network = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "network";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\appengine\v1\Network';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE resources = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "resources";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\appengine\v1\Resources';
      $descriptor->addField($f);

      // OPTIONAL STRING runtime = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "runtime";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL threadsafe = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "threadsafe";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL vm = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "vm";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE beta_settings = 13
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 13;
      $f->name      = "beta_settings";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\appengine\v1\Version\BetaSettingsEntry';
      $descriptor->addField($f);

      // OPTIONAL STRING env = 14
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 14;
      $f->name      = "env";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL ENUM serving_status = 15
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 15;
      $f->name      = "serving_status";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\appengine\v1\ServingStatus';
      $descriptor->addField($f);

      // OPTIONAL STRING created_by = 16
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 16;
      $f->name      = "created_by";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE create_time = 17
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 17;
      $f->name      = "create_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Timestamp';
      $descriptor->addField($f);

      // OPTIONAL INT64 disk_usage_bytes = 18
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 18;
      $f->name      = "disk_usage_bytes";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE handlers = 100
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 100;
      $f->name      = "handlers";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\appengine\v1\UrlMap';
      $descriptor->addField($f);

      // REPEATED MESSAGE error_handlers = 101
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 101;
      $f->name      = "error_handlers";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\appengine\v1\ErrorHandler';
      $descriptor->addField($f);

      // REPEATED MESSAGE libraries = 102
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 102;
      $f->name      = "libraries";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\appengine\v1\Library';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE api_config = 103
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 103;
      $f->name      = "api_config";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\appengine\v1\ApiConfigHandler';
      $descriptor->addField($f);

      // REPEATED MESSAGE env_variables = 104
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 104;
      $f->name      = "env_variables";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\appengine\v1\Version\EnvVariablesEntry';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE default_expiration = 105
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 105;
      $f->name      = "default_expiration";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Duration';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE health_check = 106
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 106;
      $f->name      = "health_check";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\appengine\v1\HealthCheck';
      $descriptor->addField($f);

      // OPTIONAL STRING nobuild_files_regex = 107
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 107;
      $f->name      = "nobuild_files_regex";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE deployment = 108
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 108;
      $f->name      = "deployment";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\appengine\v1\Deployment';
      $descriptor->addField($f);

      // OPTIONAL STRING version_url = 109
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 109;
      $f->name      = "version_url";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\appengine\v1\Version
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\appengine\v1\Version
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <id> has a value
     *
     * @return boolean
     */
    public function hasId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <id> value
     *
     * @return \google\appengine\v1\Version
     */
    public function clearId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <id> value
     *
     * @return string
     */
    public function getId(){
      return $this->_get(2);
    }
    
    /**
     * Set <id> value
     *
     * @param string $value
     * @return \google\appengine\v1\Version
     */
    public function setId( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <automatic_scaling> has a value
     *
     * @return boolean
     */
    public function hasAutomaticScaling(){
      return $this->_has(3);
    }
    
    /**
     * Clear <automatic_scaling> value
     *
     * @return \google\appengine\v1\Version
     */
    public function clearAutomaticScaling(){
      return $this->_clear(3);
    }
    
    /**
     * Get <automatic_scaling> value
     *
     * @return \google\appengine\v1\AutomaticScaling
     */
    public function getAutomaticScaling(){
      return $this->_get(3);
    }
    
    /**
     * Set <automatic_scaling> value
     *
     * @param \google\appengine\v1\AutomaticScaling $value
     * @return \google\appengine\v1\Version
     */
    public function setAutomaticScaling(\google\appengine\v1\AutomaticScaling $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <basic_scaling> has a value
     *
     * @return boolean
     */
    public function hasBasicScaling(){
      return $this->_has(4);
    }
    
    /**
     * Clear <basic_scaling> value
     *
     * @return \google\appengine\v1\Version
     */
    public function clearBasicScaling(){
      return $this->_clear(4);
    }
    
    /**
     * Get <basic_scaling> value
     *
     * @return \google\appengine\v1\BasicScaling
     */
    public function getBasicScaling(){
      return $this->_get(4);
    }
    
    /**
     * Set <basic_scaling> value
     *
     * @param \google\appengine\v1\BasicScaling $value
     * @return \google\appengine\v1\Version
     */
    public function setBasicScaling(\google\appengine\v1\BasicScaling $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <manual_scaling> has a value
     *
     * @return boolean
     */
    public function hasManualScaling(){
      return $this->_has(5);
    }
    
    /**
     * Clear <manual_scaling> value
     *
     * @return \google\appengine\v1\Version
     */
    public function clearManualScaling(){
      return $this->_clear(5);
    }
    
    /**
     * Get <manual_scaling> value
     *
     * @return \google\appengine\v1\ManualScaling
     */
    public function getManualScaling(){
      return $this->_get(5);
    }
    
    /**
     * Set <manual_scaling> value
     *
     * @param \google\appengine\v1\ManualScaling $value
     * @return \google\appengine\v1\Version
     */
    public function setManualScaling(\google\appengine\v1\ManualScaling $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <inbound_services> has a value
     *
     * @return boolean
     */
    public function hasInboundServices(){
      return $this->_has(6);
    }
    
    /**
     * Clear <inbound_services> value
     *
     * @return \google\appengine\v1\Version
     */
    public function clearInboundServices(){
      return $this->_clear(6);
    }
    
    /**
     * Get <inbound_services> value
     *
     * @param int $idx
     * @return int - \google\appengine\v1\InboundServiceType
     */
    public function getInboundServices($idx = NULL){
      return $this->_get(6, $idx);
    }
    
    /**
     * Set <inbound_services> value
     *
     * @param int - \google\appengine\v1\InboundServiceType $value
     * @return \google\appengine\v1\Version
     */
    public function setInboundServices( $value, $idx = NULL){
      return $this->_set(6, $value, $idx);
    }
    
    /**
     * Get all elements of <inbound_services>
     *
     * @return int - \google\appengine\v1\InboundServiceType[]
     */
    public function getInboundServicesList(){
     return $this->_get(6);
    }
    
    /**
     * Add a new element to <inbound_services>
     *
     * @param int - \google\appengine\v1\InboundServiceType $value
     * @return \google\appengine\v1\Version
     */
    public function addInboundServices( $value){
     return $this->_add(6, $value);
    }
    
    /**
     * Check if <instance_class> has a value
     *
     * @return boolean
     */
    public function hasInstanceClass(){
      return $this->_has(7);
    }
    
    /**
     * Clear <instance_class> value
     *
     * @return \google\appengine\v1\Version
     */
    public function clearInstanceClass(){
      return $this->_clear(7);
    }
    
    /**
     * Get <instance_class> value
     *
     * @return string
     */
    public function getInstanceClass(){
      return $this->_get(7);
    }
    
    /**
     * Set <instance_class> value
     *
     * @param string $value
     * @return \google\appengine\v1\Version
     */
    public function setInstanceClass( $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <network> has a value
     *
     * @return boolean
     */
    public function hasNetwork(){
      return $this->_has(8);
    }
    
    /**
     * Clear <network> value
     *
     * @return \google\appengine\v1\Version
     */
    public function clearNetwork(){
      return $this->_clear(8);
    }
    
    /**
     * Get <network> value
     *
     * @return \google\appengine\v1\Network
     */
    public function getNetwork(){
      return $this->_get(8);
    }
    
    /**
     * Set <network> value
     *
     * @param \google\appengine\v1\Network $value
     * @return \google\appengine\v1\Version
     */
    public function setNetwork(\google\appengine\v1\Network $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <resources> has a value
     *
     * @return boolean
     */
    public function hasResources(){
      return $this->_has(9);
    }
    
    /**
     * Clear <resources> value
     *
     * @return \google\appengine\v1\Version
     */
    public function clearResources(){
      return $this->_clear(9);
    }
    
    /**
     * Get <resources> value
     *
     * @return \google\appengine\v1\Resources
     */
    public function getResources(){
      return $this->_get(9);
    }
    
    /**
     * Set <resources> value
     *
     * @param \google\appengine\v1\Resources $value
     * @return \google\appengine\v1\Version
     */
    public function setResources(\google\appengine\v1\Resources $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <runtime> has a value
     *
     * @return boolean
     */
    public function hasRuntime(){
      return $this->_has(10);
    }
    
    /**
     * Clear <runtime> value
     *
     * @return \google\appengine\v1\Version
     */
    public function clearRuntime(){
      return $this->_clear(10);
    }
    
    /**
     * Get <runtime> value
     *
     * @return string
     */
    public function getRuntime(){
      return $this->_get(10);
    }
    
    /**
     * Set <runtime> value
     *
     * @param string $value
     * @return \google\appengine\v1\Version
     */
    public function setRuntime( $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <threadsafe> has a value
     *
     * @return boolean
     */
    public function hasThreadsafe(){
      return $this->_has(11);
    }
    
    /**
     * Clear <threadsafe> value
     *
     * @return \google\appengine\v1\Version
     */
    public function clearThreadsafe(){
      return $this->_clear(11);
    }
    
    /**
     * Get <threadsafe> value
     *
     * @return boolean
     */
    public function getThreadsafe(){
      return $this->_get(11);
    }
    
    /**
     * Set <threadsafe> value
     *
     * @param boolean $value
     * @return \google\appengine\v1\Version
     */
    public function setThreadsafe( $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <vm> has a value
     *
     * @return boolean
     */
    public function hasVm(){
      return $this->_has(12);
    }
    
    /**
     * Clear <vm> value
     *
     * @return \google\appengine\v1\Version
     */
    public function clearVm(){
      return $this->_clear(12);
    }
    
    /**
     * Get <vm> value
     *
     * @return boolean
     */
    public function getVm(){
      return $this->_get(12);
    }
    
    /**
     * Set <vm> value
     *
     * @param boolean $value
     * @return \google\appengine\v1\Version
     */
    public function setVm( $value){
      return $this->_set(12, $value);
    }
    
    /**
     * Check if <beta_settings> has a value
     *
     * @return boolean
     */
    public function hasBetaSettings(){
      return $this->_has(13);
    }
    
    /**
     * Clear <beta_settings> value
     *
     * @return \google\appengine\v1\Version
     */
    public function clearBetaSettings(){
      return $this->_clear(13);
    }
    
    /**
     * Get <beta_settings> value
     *
     * @param int $idx
     * @return \google\appengine\v1\Version\BetaSettingsEntry
     */
    public function getBetaSettings($idx = NULL){
      return $this->_get(13, $idx);
    }
    
    /**
     * Set <beta_settings> value
     *
     * @param \google\appengine\v1\Version\BetaSettingsEntry $value
     * @return \google\appengine\v1\Version
     */
    public function setBetaSettings(\google\appengine\v1\Version\BetaSettingsEntry $value, $idx = NULL){
      return $this->_set(13, $value, $idx);
    }
    
    /**
     * Get all elements of <beta_settings>
     *
     * @return \google\appengine\v1\Version\BetaSettingsEntry[]
     */
    public function getBetaSettingsList(){
     return $this->_get(13);
    }
    
    /**
     * Add a new element to <beta_settings>
     *
     * @param \google\appengine\v1\Version\BetaSettingsEntry $value
     * @return \google\appengine\v1\Version
     */
    public function addBetaSettings(\google\appengine\v1\Version\BetaSettingsEntry $value){
     return $this->_add(13, $value);
    }
    
    /**
     * Check if <env> has a value
     *
     * @return boolean
     */
    public function hasEnv(){
      return $this->_has(14);
    }
    
    /**
     * Clear <env> value
     *
     * @return \google\appengine\v1\Version
     */
    public function clearEnv(){
      return $this->_clear(14);
    }
    
    /**
     * Get <env> value
     *
     * @return string
     */
    public function getEnv(){
      return $this->_get(14);
    }
    
    /**
     * Set <env> value
     *
     * @param string $value
     * @return \google\appengine\v1\Version
     */
    public function setEnv( $value){
      return $this->_set(14, $value);
    }
    
    /**
     * Check if <serving_status> has a value
     *
     * @return boolean
     */
    public function hasServingStatus(){
      return $this->_has(15);
    }
    
    /**
     * Clear <serving_status> value
     *
     * @return \google\appengine\v1\Version
     */
    public function clearServingStatus(){
      return $this->_clear(15);
    }
    
    /**
     * Get <serving_status> value
     *
     * @return int - \google\appengine\v1\ServingStatus
     */
    public function getServingStatus(){
      return $this->_get(15);
    }
    
    /**
     * Set <serving_status> value
     *
     * @param int - \google\appengine\v1\ServingStatus $value
     * @return \google\appengine\v1\Version
     */
    public function setServingStatus( $value){
      return $this->_set(15, $value);
    }
    
    /**
     * Check if <created_by> has a value
     *
     * @return boolean
     */
    public function hasCreatedBy(){
      return $this->_has(16);
    }
    
    /**
     * Clear <created_by> value
     *
     * @return \google\appengine\v1\Version
     */
    public function clearCreatedBy(){
      return $this->_clear(16);
    }
    
    /**
     * Get <created_by> value
     *
     * @return string
     */
    public function getCreatedBy(){
      return $this->_get(16);
    }
    
    /**
     * Set <created_by> value
     *
     * @param string $value
     * @return \google\appengine\v1\Version
     */
    public function setCreatedBy( $value){
      return $this->_set(16, $value);
    }
    
    /**
     * Check if <create_time> has a value
     *
     * @return boolean
     */
    public function hasCreateTime(){
      return $this->_has(17);
    }
    
    /**
     * Clear <create_time> value
     *
     * @return \google\appengine\v1\Version
     */
    public function clearCreateTime(){
      return $this->_clear(17);
    }
    
    /**
     * Get <create_time> value
     *
     * @return \google\protobuf\Timestamp
     */
    public function getCreateTime(){
      return $this->_get(17);
    }
    
    /**
     * Set <create_time> value
     *
     * @param \google\protobuf\Timestamp $value
     * @return \google\appengine\v1\Version
     */
    public function setCreateTime(\google\protobuf\Timestamp $value){
      return $this->_set(17, $value);
    }
    
    /**
     * Check if <disk_usage_bytes> has a value
     *
     * @return boolean
     */
    public function hasDiskUsageBytes(){
      return $this->_has(18);
    }
    
    /**
     * Clear <disk_usage_bytes> value
     *
     * @return \google\appengine\v1\Version
     */
    public function clearDiskUsageBytes(){
      return $this->_clear(18);
    }
    
    /**
     * Get <disk_usage_bytes> value
     *
     * @return int
     */
    public function getDiskUsageBytes(){
      return $this->_get(18);
    }
    
    /**
     * Set <disk_usage_bytes> value
     *
     * @param int $value
     * @return \google\appengine\v1\Version
     */
    public function setDiskUsageBytes( $value){
      return $this->_set(18, $value);
    }
    
    /**
     * Check if <handlers> has a value
     *
     * @return boolean
     */
    public function hasHandlers(){
      return $this->_has(100);
    }
    
    /**
     * Clear <handlers> value
     *
     * @return \google\appengine\v1\Version
     */
    public function clearHandlers(){
      return $this->_clear(100);
    }
    
    /**
     * Get <handlers> value
     *
     * @param int $idx
     * @return \google\appengine\v1\UrlMap
     */
    public function getHandlers($idx = NULL){
      return $this->_get(100, $idx);
    }
    
    /**
     * Set <handlers> value
     *
     * @param \google\appengine\v1\UrlMap $value
     * @return \google\appengine\v1\Version
     */
    public function setHandlers(\google\appengine\v1\UrlMap $value, $idx = NULL){
      return $this->_set(100, $value, $idx);
    }
    
    /**
     * Get all elements of <handlers>
     *
     * @return \google\appengine\v1\UrlMap[]
     */
    public function getHandlersList(){
     return $this->_get(100);
    }
    
    /**
     * Add a new element to <handlers>
     *
     * @param \google\appengine\v1\UrlMap $value
     * @return \google\appengine\v1\Version
     */
    public function addHandlers(\google\appengine\v1\UrlMap $value){
     return $this->_add(100, $value);
    }
    
    /**
     * Check if <error_handlers> has a value
     *
     * @return boolean
     */
    public function hasErrorHandlers(){
      return $this->_has(101);
    }
    
    /**
     * Clear <error_handlers> value
     *
     * @return \google\appengine\v1\Version
     */
    public function clearErrorHandlers(){
      return $this->_clear(101);
    }
    
    /**
     * Get <error_handlers> value
     *
     * @param int $idx
     * @return \google\appengine\v1\ErrorHandler
     */
    public function getErrorHandlers($idx = NULL){
      return $this->_get(101, $idx);
    }
    
    /**
     * Set <error_handlers> value
     *
     * @param \google\appengine\v1\ErrorHandler $value
     * @return \google\appengine\v1\Version
     */
    public function setErrorHandlers(\google\appengine\v1\ErrorHandler $value, $idx = NULL){
      return $this->_set(101, $value, $idx);
    }
    
    /**
     * Get all elements of <error_handlers>
     *
     * @return \google\appengine\v1\ErrorHandler[]
     */
    public function getErrorHandlersList(){
     return $this->_get(101);
    }
    
    /**
     * Add a new element to <error_handlers>
     *
     * @param \google\appengine\v1\ErrorHandler $value
     * @return \google\appengine\v1\Version
     */
    public function addErrorHandlers(\google\appengine\v1\ErrorHandler $value){
     return $this->_add(101, $value);
    }
    
    /**
     * Check if <libraries> has a value
     *
     * @return boolean
     */
    public function hasLibraries(){
      return $this->_has(102);
    }
    
    /**
     * Clear <libraries> value
     *
     * @return \google\appengine\v1\Version
     */
    public function clearLibraries(){
      return $this->_clear(102);
    }
    
    /**
     * Get <libraries> value
     *
     * @param int $idx
     * @return \google\appengine\v1\Library
     */
    public function getLibraries($idx = NULL){
      return $this->_get(102, $idx);
    }
    
    /**
     * Set <libraries> value
     *
     * @param \google\appengine\v1\Library $value
     * @return \google\appengine\v1\Version
     */
    public function setLibraries(\google\appengine\v1\Library $value, $idx = NULL){
      return $this->_set(102, $value, $idx);
    }
    
    /**
     * Get all elements of <libraries>
     *
     * @return \google\appengine\v1\Library[]
     */
    public function getLibrariesList(){
     return $this->_get(102);
    }
    
    /**
     * Add a new element to <libraries>
     *
     * @param \google\appengine\v1\Library $value
     * @return \google\appengine\v1\Version
     */
    public function addLibraries(\google\appengine\v1\Library $value){
     return $this->_add(102, $value);
    }
    
    /**
     * Check if <api_config> has a value
     *
     * @return boolean
     */
    public function hasApiConfig(){
      return $this->_has(103);
    }
    
    /**
     * Clear <api_config> value
     *
     * @return \google\appengine\v1\Version
     */
    public function clearApiConfig(){
      return $this->_clear(103);
    }
    
    /**
     * Get <api_config> value
     *
     * @return \google\appengine\v1\ApiConfigHandler
     */
    public function getApiConfig(){
      return $this->_get(103);
    }
    
    /**
     * Set <api_config> value
     *
     * @param \google\appengine\v1\ApiConfigHandler $value
     * @return \google\appengine\v1\Version
     */
    public function setApiConfig(\google\appengine\v1\ApiConfigHandler $value){
      return $this->_set(103, $value);
    }
    
    /**
     * Check if <env_variables> has a value
     *
     * @return boolean
     */
    public function hasEnvVariables(){
      return $this->_has(104);
    }
    
    /**
     * Clear <env_variables> value
     *
     * @return \google\appengine\v1\Version
     */
    public function clearEnvVariables(){
      return $this->_clear(104);
    }
    
    /**
     * Get <env_variables> value
     *
     * @param int $idx
     * @return \google\appengine\v1\Version\EnvVariablesEntry
     */
    public function getEnvVariables($idx = NULL){
      return $this->_get(104, $idx);
    }
    
    /**
     * Set <env_variables> value
     *
     * @param \google\appengine\v1\Version\EnvVariablesEntry $value
     * @return \google\appengine\v1\Version
     */
    public function setEnvVariables(\google\appengine\v1\Version\EnvVariablesEntry $value, $idx = NULL){
      return $this->_set(104, $value, $idx);
    }
    
    /**
     * Get all elements of <env_variables>
     *
     * @return \google\appengine\v1\Version\EnvVariablesEntry[]
     */
    public function getEnvVariablesList(){
     return $this->_get(104);
    }
    
    /**
     * Add a new element to <env_variables>
     *
     * @param \google\appengine\v1\Version\EnvVariablesEntry $value
     * @return \google\appengine\v1\Version
     */
    public function addEnvVariables(\google\appengine\v1\Version\EnvVariablesEntry $value){
     return $this->_add(104, $value);
    }
    
    /**
     * Check if <default_expiration> has a value
     *
     * @return boolean
     */
    public function hasDefaultExpiration(){
      return $this->_has(105);
    }
    
    /**
     * Clear <default_expiration> value
     *
     * @return \google\appengine\v1\Version
     */
    public function clearDefaultExpiration(){
      return $this->_clear(105);
    }
    
    /**
     * Get <default_expiration> value
     *
     * @return \google\protobuf\Duration
     */
    public function getDefaultExpiration(){
      return $this->_get(105);
    }
    
    /**
     * Set <default_expiration> value
     *
     * @param \google\protobuf\Duration $value
     * @return \google\appengine\v1\Version
     */
    public function setDefaultExpiration(\google\protobuf\Duration $value){
      return $this->_set(105, $value);
    }
    
    /**
     * Check if <health_check> has a value
     *
     * @return boolean
     */
    public function hasHealthCheck(){
      return $this->_has(106);
    }
    
    /**
     * Clear <health_check> value
     *
     * @return \google\appengine\v1\Version
     */
    public function clearHealthCheck(){
      return $this->_clear(106);
    }
    
    /**
     * Get <health_check> value
     *
     * @return \google\appengine\v1\HealthCheck
     */
    public function getHealthCheck(){
      return $this->_get(106);
    }
    
    /**
     * Set <health_check> value
     *
     * @param \google\appengine\v1\HealthCheck $value
     * @return \google\appengine\v1\Version
     */
    public function setHealthCheck(\google\appengine\v1\HealthCheck $value){
      return $this->_set(106, $value);
    }
    
    /**
     * Check if <nobuild_files_regex> has a value
     *
     * @return boolean
     */
    public function hasNobuildFilesRegex(){
      return $this->_has(107);
    }
    
    /**
     * Clear <nobuild_files_regex> value
     *
     * @return \google\appengine\v1\Version
     */
    public function clearNobuildFilesRegex(){
      return $this->_clear(107);
    }
    
    /**
     * Get <nobuild_files_regex> value
     *
     * @return string
     */
    public function getNobuildFilesRegex(){
      return $this->_get(107);
    }
    
    /**
     * Set <nobuild_files_regex> value
     *
     * @param string $value
     * @return \google\appengine\v1\Version
     */
    public function setNobuildFilesRegex( $value){
      return $this->_set(107, $value);
    }
    
    /**
     * Check if <deployment> has a value
     *
     * @return boolean
     */
    public function hasDeployment(){
      return $this->_has(108);
    }
    
    /**
     * Clear <deployment> value
     *
     * @return \google\appengine\v1\Version
     */
    public function clearDeployment(){
      return $this->_clear(108);
    }
    
    /**
     * Get <deployment> value
     *
     * @return \google\appengine\v1\Deployment
     */
    public function getDeployment(){
      return $this->_get(108);
    }
    
    /**
     * Set <deployment> value
     *
     * @param \google\appengine\v1\Deployment $value
     * @return \google\appengine\v1\Version
     */
    public function setDeployment(\google\appengine\v1\Deployment $value){
      return $this->_set(108, $value);
    }
    
    /**
     * Check if <version_url> has a value
     *
     * @return boolean
     */
    public function hasVersionUrl(){
      return $this->_has(109);
    }
    
    /**
     * Clear <version_url> value
     *
     * @return \google\appengine\v1\Version
     */
    public function clearVersionUrl(){
      return $this->_clear(109);
    }
    
    /**
     * Get <version_url> value
     *
     * @return string
     */
    public function getVersionUrl(){
      return $this->_get(109);
    }
    
    /**
     * Set <version_url> value
     *
     * @param string $value
     * @return \google\appengine\v1\Version
     */
    public function setVersionUrl( $value){
      return $this->_set(109, $value);
    }
  }
}

namespace google\appengine\v1 {

  class AutomaticScaling extends \DrSlump\Protobuf\Message {

    /**  @var \google\protobuf\Duration */
    public $cool_down_period = null;
    
    /**  @var \google\appengine\v1\CpuUtilization */
    public $cpu_utilization = null;
    
    /**  @var int */
    public $max_concurrent_requests = null;
    
    /**  @var int */
    public $max_idle_instances = null;
    
    /**  @var int */
    public $max_total_instances = null;
    
    /**  @var \google\protobuf\Duration */
    public $max_pending_latency = null;
    
    /**  @var int */
    public $min_idle_instances = null;
    
    /**  @var int */
    public $min_total_instances = null;
    
    /**  @var \google\protobuf\Duration */
    public $min_pending_latency = null;
    
    /**  @var \google\appengine\v1\RequestUtilization */
    public $request_utilization = null;
    
    /**  @var \google\appengine\v1\DiskUtilization */
    public $disk_utilization = null;
    
    /**  @var \google\appengine\v1\NetworkUtilization */
    public $network_utilization = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.AutomaticScaling');

      // OPTIONAL MESSAGE cool_down_period = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "cool_down_period";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Duration';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE cpu_utilization = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "cpu_utilization";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\appengine\v1\CpuUtilization';
      $descriptor->addField($f);

      // OPTIONAL INT32 max_concurrent_requests = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "max_concurrent_requests";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 max_idle_instances = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "max_idle_instances";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 max_total_instances = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "max_total_instances";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE max_pending_latency = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "max_pending_latency";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Duration';
      $descriptor->addField($f);

      // OPTIONAL INT32 min_idle_instances = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "min_idle_instances";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 min_total_instances = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "min_total_instances";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE min_pending_latency = 9
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 9;
      $f->name      = "min_pending_latency";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Duration';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE request_utilization = 10
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 10;
      $f->name      = "request_utilization";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\appengine\v1\RequestUtilization';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE disk_utilization = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "disk_utilization";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\appengine\v1\DiskUtilization';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE network_utilization = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "network_utilization";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\appengine\v1\NetworkUtilization';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <cool_down_period> has a value
     *
     * @return boolean
     */
    public function hasCoolDownPeriod(){
      return $this->_has(1);
    }
    
    /**
     * Clear <cool_down_period> value
     *
     * @return \google\appengine\v1\AutomaticScaling
     */
    public function clearCoolDownPeriod(){
      return $this->_clear(1);
    }
    
    /**
     * Get <cool_down_period> value
     *
     * @return \google\protobuf\Duration
     */
    public function getCoolDownPeriod(){
      return $this->_get(1);
    }
    
    /**
     * Set <cool_down_period> value
     *
     * @param \google\protobuf\Duration $value
     * @return \google\appengine\v1\AutomaticScaling
     */
    public function setCoolDownPeriod(\google\protobuf\Duration $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <cpu_utilization> has a value
     *
     * @return boolean
     */
    public function hasCpuUtilization(){
      return $this->_has(2);
    }
    
    /**
     * Clear <cpu_utilization> value
     *
     * @return \google\appengine\v1\AutomaticScaling
     */
    public function clearCpuUtilization(){
      return $this->_clear(2);
    }
    
    /**
     * Get <cpu_utilization> value
     *
     * @return \google\appengine\v1\CpuUtilization
     */
    public function getCpuUtilization(){
      return $this->_get(2);
    }
    
    /**
     * Set <cpu_utilization> value
     *
     * @param \google\appengine\v1\CpuUtilization $value
     * @return \google\appengine\v1\AutomaticScaling
     */
    public function setCpuUtilization(\google\appengine\v1\CpuUtilization $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <max_concurrent_requests> has a value
     *
     * @return boolean
     */
    public function hasMaxConcurrentRequests(){
      return $this->_has(3);
    }
    
    /**
     * Clear <max_concurrent_requests> value
     *
     * @return \google\appengine\v1\AutomaticScaling
     */
    public function clearMaxConcurrentRequests(){
      return $this->_clear(3);
    }
    
    /**
     * Get <max_concurrent_requests> value
     *
     * @return int
     */
    public function getMaxConcurrentRequests(){
      return $this->_get(3);
    }
    
    /**
     * Set <max_concurrent_requests> value
     *
     * @param int $value
     * @return \google\appengine\v1\AutomaticScaling
     */
    public function setMaxConcurrentRequests( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <max_idle_instances> has a value
     *
     * @return boolean
     */
    public function hasMaxIdleInstances(){
      return $this->_has(4);
    }
    
    /**
     * Clear <max_idle_instances> value
     *
     * @return \google\appengine\v1\AutomaticScaling
     */
    public function clearMaxIdleInstances(){
      return $this->_clear(4);
    }
    
    /**
     * Get <max_idle_instances> value
     *
     * @return int
     */
    public function getMaxIdleInstances(){
      return $this->_get(4);
    }
    
    /**
     * Set <max_idle_instances> value
     *
     * @param int $value
     * @return \google\appengine\v1\AutomaticScaling
     */
    public function setMaxIdleInstances( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <max_total_instances> has a value
     *
     * @return boolean
     */
    public function hasMaxTotalInstances(){
      return $this->_has(5);
    }
    
    /**
     * Clear <max_total_instances> value
     *
     * @return \google\appengine\v1\AutomaticScaling
     */
    public function clearMaxTotalInstances(){
      return $this->_clear(5);
    }
    
    /**
     * Get <max_total_instances> value
     *
     * @return int
     */
    public function getMaxTotalInstances(){
      return $this->_get(5);
    }
    
    /**
     * Set <max_total_instances> value
     *
     * @param int $value
     * @return \google\appengine\v1\AutomaticScaling
     */
    public function setMaxTotalInstances( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <max_pending_latency> has a value
     *
     * @return boolean
     */
    public function hasMaxPendingLatency(){
      return $this->_has(6);
    }
    
    /**
     * Clear <max_pending_latency> value
     *
     * @return \google\appengine\v1\AutomaticScaling
     */
    public function clearMaxPendingLatency(){
      return $this->_clear(6);
    }
    
    /**
     * Get <max_pending_latency> value
     *
     * @return \google\protobuf\Duration
     */
    public function getMaxPendingLatency(){
      return $this->_get(6);
    }
    
    /**
     * Set <max_pending_latency> value
     *
     * @param \google\protobuf\Duration $value
     * @return \google\appengine\v1\AutomaticScaling
     */
    public function setMaxPendingLatency(\google\protobuf\Duration $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <min_idle_instances> has a value
     *
     * @return boolean
     */
    public function hasMinIdleInstances(){
      return $this->_has(7);
    }
    
    /**
     * Clear <min_idle_instances> value
     *
     * @return \google\appengine\v1\AutomaticScaling
     */
    public function clearMinIdleInstances(){
      return $this->_clear(7);
    }
    
    /**
     * Get <min_idle_instances> value
     *
     * @return int
     */
    public function getMinIdleInstances(){
      return $this->_get(7);
    }
    
    /**
     * Set <min_idle_instances> value
     *
     * @param int $value
     * @return \google\appengine\v1\AutomaticScaling
     */
    public function setMinIdleInstances( $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <min_total_instances> has a value
     *
     * @return boolean
     */
    public function hasMinTotalInstances(){
      return $this->_has(8);
    }
    
    /**
     * Clear <min_total_instances> value
     *
     * @return \google\appengine\v1\AutomaticScaling
     */
    public function clearMinTotalInstances(){
      return $this->_clear(8);
    }
    
    /**
     * Get <min_total_instances> value
     *
     * @return int
     */
    public function getMinTotalInstances(){
      return $this->_get(8);
    }
    
    /**
     * Set <min_total_instances> value
     *
     * @param int $value
     * @return \google\appengine\v1\AutomaticScaling
     */
    public function setMinTotalInstances( $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <min_pending_latency> has a value
     *
     * @return boolean
     */
    public function hasMinPendingLatency(){
      return $this->_has(9);
    }
    
    /**
     * Clear <min_pending_latency> value
     *
     * @return \google\appengine\v1\AutomaticScaling
     */
    public function clearMinPendingLatency(){
      return $this->_clear(9);
    }
    
    /**
     * Get <min_pending_latency> value
     *
     * @return \google\protobuf\Duration
     */
    public function getMinPendingLatency(){
      return $this->_get(9);
    }
    
    /**
     * Set <min_pending_latency> value
     *
     * @param \google\protobuf\Duration $value
     * @return \google\appengine\v1\AutomaticScaling
     */
    public function setMinPendingLatency(\google\protobuf\Duration $value){
      return $this->_set(9, $value);
    }
    
    /**
     * Check if <request_utilization> has a value
     *
     * @return boolean
     */
    public function hasRequestUtilization(){
      return $this->_has(10);
    }
    
    /**
     * Clear <request_utilization> value
     *
     * @return \google\appengine\v1\AutomaticScaling
     */
    public function clearRequestUtilization(){
      return $this->_clear(10);
    }
    
    /**
     * Get <request_utilization> value
     *
     * @return \google\appengine\v1\RequestUtilization
     */
    public function getRequestUtilization(){
      return $this->_get(10);
    }
    
    /**
     * Set <request_utilization> value
     *
     * @param \google\appengine\v1\RequestUtilization $value
     * @return \google\appengine\v1\AutomaticScaling
     */
    public function setRequestUtilization(\google\appengine\v1\RequestUtilization $value){
      return $this->_set(10, $value);
    }
    
    /**
     * Check if <disk_utilization> has a value
     *
     * @return boolean
     */
    public function hasDiskUtilization(){
      return $this->_has(11);
    }
    
    /**
     * Clear <disk_utilization> value
     *
     * @return \google\appengine\v1\AutomaticScaling
     */
    public function clearDiskUtilization(){
      return $this->_clear(11);
    }
    
    /**
     * Get <disk_utilization> value
     *
     * @return \google\appengine\v1\DiskUtilization
     */
    public function getDiskUtilization(){
      return $this->_get(11);
    }
    
    /**
     * Set <disk_utilization> value
     *
     * @param \google\appengine\v1\DiskUtilization $value
     * @return \google\appengine\v1\AutomaticScaling
     */
    public function setDiskUtilization(\google\appengine\v1\DiskUtilization $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <network_utilization> has a value
     *
     * @return boolean
     */
    public function hasNetworkUtilization(){
      return $this->_has(12);
    }
    
    /**
     * Clear <network_utilization> value
     *
     * @return \google\appengine\v1\AutomaticScaling
     */
    public function clearNetworkUtilization(){
      return $this->_clear(12);
    }
    
    /**
     * Get <network_utilization> value
     *
     * @return \google\appengine\v1\NetworkUtilization
     */
    public function getNetworkUtilization(){
      return $this->_get(12);
    }
    
    /**
     * Set <network_utilization> value
     *
     * @param \google\appengine\v1\NetworkUtilization $value
     * @return \google\appengine\v1\AutomaticScaling
     */
    public function setNetworkUtilization(\google\appengine\v1\NetworkUtilization $value){
      return $this->_set(12, $value);
    }
  }
}

namespace google\appengine\v1 {

  class BasicScaling extends \DrSlump\Protobuf\Message {

    /**  @var \google\protobuf\Duration */
    public $idle_timeout = null;
    
    /**  @var int */
    public $max_instances = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.BasicScaling');

      // OPTIONAL MESSAGE idle_timeout = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "idle_timeout";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Duration';
      $descriptor->addField($f);

      // OPTIONAL INT32 max_instances = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "max_instances";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <idle_timeout> has a value
     *
     * @return boolean
     */
    public function hasIdleTimeout(){
      return $this->_has(1);
    }
    
    /**
     * Clear <idle_timeout> value
     *
     * @return \google\appengine\v1\BasicScaling
     */
    public function clearIdleTimeout(){
      return $this->_clear(1);
    }
    
    /**
     * Get <idle_timeout> value
     *
     * @return \google\protobuf\Duration
     */
    public function getIdleTimeout(){
      return $this->_get(1);
    }
    
    /**
     * Set <idle_timeout> value
     *
     * @param \google\protobuf\Duration $value
     * @return \google\appengine\v1\BasicScaling
     */
    public function setIdleTimeout(\google\protobuf\Duration $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <max_instances> has a value
     *
     * @return boolean
     */
    public function hasMaxInstances(){
      return $this->_has(2);
    }
    
    /**
     * Clear <max_instances> value
     *
     * @return \google\appengine\v1\BasicScaling
     */
    public function clearMaxInstances(){
      return $this->_clear(2);
    }
    
    /**
     * Get <max_instances> value
     *
     * @return int
     */
    public function getMaxInstances(){
      return $this->_get(2);
    }
    
    /**
     * Set <max_instances> value
     *
     * @param int $value
     * @return \google\appengine\v1\BasicScaling
     */
    public function setMaxInstances( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\appengine\v1 {

  class ManualScaling extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $instances = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.ManualScaling');

      // OPTIONAL INT32 instances = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "instances";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <instances> has a value
     *
     * @return boolean
     */
    public function hasInstances(){
      return $this->_has(1);
    }
    
    /**
     * Clear <instances> value
     *
     * @return \google\appengine\v1\ManualScaling
     */
    public function clearInstances(){
      return $this->_clear(1);
    }
    
    /**
     * Get <instances> value
     *
     * @return int
     */
    public function getInstances(){
      return $this->_get(1);
    }
    
    /**
     * Set <instances> value
     *
     * @param int $value
     * @return \google\appengine\v1\ManualScaling
     */
    public function setInstances( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\appengine\v1 {

  class CpuUtilization extends \DrSlump\Protobuf\Message {

    /**  @var \google\protobuf\Duration */
    public $aggregation_window_length = null;
    
    /**  @var float */
    public $target_utilization = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.CpuUtilization');

      // OPTIONAL MESSAGE aggregation_window_length = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "aggregation_window_length";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Duration';
      $descriptor->addField($f);

      // OPTIONAL DOUBLE target_utilization = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "target_utilization";
      $f->type      = \DrSlump\Protobuf::TYPE_DOUBLE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <aggregation_window_length> has a value
     *
     * @return boolean
     */
    public function hasAggregationWindowLength(){
      return $this->_has(1);
    }
    
    /**
     * Clear <aggregation_window_length> value
     *
     * @return \google\appengine\v1\CpuUtilization
     */
    public function clearAggregationWindowLength(){
      return $this->_clear(1);
    }
    
    /**
     * Get <aggregation_window_length> value
     *
     * @return \google\protobuf\Duration
     */
    public function getAggregationWindowLength(){
      return $this->_get(1);
    }
    
    /**
     * Set <aggregation_window_length> value
     *
     * @param \google\protobuf\Duration $value
     * @return \google\appengine\v1\CpuUtilization
     */
    public function setAggregationWindowLength(\google\protobuf\Duration $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <target_utilization> has a value
     *
     * @return boolean
     */
    public function hasTargetUtilization(){
      return $this->_has(2);
    }
    
    /**
     * Clear <target_utilization> value
     *
     * @return \google\appengine\v1\CpuUtilization
     */
    public function clearTargetUtilization(){
      return $this->_clear(2);
    }
    
    /**
     * Get <target_utilization> value
     *
     * @return float
     */
    public function getTargetUtilization(){
      return $this->_get(2);
    }
    
    /**
     * Set <target_utilization> value
     *
     * @param float $value
     * @return \google\appengine\v1\CpuUtilization
     */
    public function setTargetUtilization( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\appengine\v1 {

  class RequestUtilization extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $target_request_count_per_second = null;
    
    /**  @var int */
    public $target_concurrent_requests = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.RequestUtilization');

      // OPTIONAL INT32 target_request_count_per_second = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "target_request_count_per_second";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 target_concurrent_requests = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "target_concurrent_requests";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <target_request_count_per_second> has a value
     *
     * @return boolean
     */
    public function hasTargetRequestCountPerSecond(){
      return $this->_has(1);
    }
    
    /**
     * Clear <target_request_count_per_second> value
     *
     * @return \google\appengine\v1\RequestUtilization
     */
    public function clearTargetRequestCountPerSecond(){
      return $this->_clear(1);
    }
    
    /**
     * Get <target_request_count_per_second> value
     *
     * @return int
     */
    public function getTargetRequestCountPerSecond(){
      return $this->_get(1);
    }
    
    /**
     * Set <target_request_count_per_second> value
     *
     * @param int $value
     * @return \google\appengine\v1\RequestUtilization
     */
    public function setTargetRequestCountPerSecond( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <target_concurrent_requests> has a value
     *
     * @return boolean
     */
    public function hasTargetConcurrentRequests(){
      return $this->_has(2);
    }
    
    /**
     * Clear <target_concurrent_requests> value
     *
     * @return \google\appengine\v1\RequestUtilization
     */
    public function clearTargetConcurrentRequests(){
      return $this->_clear(2);
    }
    
    /**
     * Get <target_concurrent_requests> value
     *
     * @return int
     */
    public function getTargetConcurrentRequests(){
      return $this->_get(2);
    }
    
    /**
     * Set <target_concurrent_requests> value
     *
     * @param int $value
     * @return \google\appengine\v1\RequestUtilization
     */
    public function setTargetConcurrentRequests( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\appengine\v1 {

  class DiskUtilization extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $target_write_bytes_per_second = null;
    
    /**  @var int */
    public $target_write_ops_per_second = null;
    
    /**  @var int */
    public $target_read_bytes_per_second = null;
    
    /**  @var int */
    public $target_read_ops_per_second = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.DiskUtilization');

      // OPTIONAL INT32 target_write_bytes_per_second = 14
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 14;
      $f->name      = "target_write_bytes_per_second";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 target_write_ops_per_second = 15
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 15;
      $f->name      = "target_write_ops_per_second";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 target_read_bytes_per_second = 16
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 16;
      $f->name      = "target_read_bytes_per_second";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 target_read_ops_per_second = 17
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 17;
      $f->name      = "target_read_ops_per_second";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <target_write_bytes_per_second> has a value
     *
     * @return boolean
     */
    public function hasTargetWriteBytesPerSecond(){
      return $this->_has(14);
    }
    
    /**
     * Clear <target_write_bytes_per_second> value
     *
     * @return \google\appengine\v1\DiskUtilization
     */
    public function clearTargetWriteBytesPerSecond(){
      return $this->_clear(14);
    }
    
    /**
     * Get <target_write_bytes_per_second> value
     *
     * @return int
     */
    public function getTargetWriteBytesPerSecond(){
      return $this->_get(14);
    }
    
    /**
     * Set <target_write_bytes_per_second> value
     *
     * @param int $value
     * @return \google\appengine\v1\DiskUtilization
     */
    public function setTargetWriteBytesPerSecond( $value){
      return $this->_set(14, $value);
    }
    
    /**
     * Check if <target_write_ops_per_second> has a value
     *
     * @return boolean
     */
    public function hasTargetWriteOpsPerSecond(){
      return $this->_has(15);
    }
    
    /**
     * Clear <target_write_ops_per_second> value
     *
     * @return \google\appengine\v1\DiskUtilization
     */
    public function clearTargetWriteOpsPerSecond(){
      return $this->_clear(15);
    }
    
    /**
     * Get <target_write_ops_per_second> value
     *
     * @return int
     */
    public function getTargetWriteOpsPerSecond(){
      return $this->_get(15);
    }
    
    /**
     * Set <target_write_ops_per_second> value
     *
     * @param int $value
     * @return \google\appengine\v1\DiskUtilization
     */
    public function setTargetWriteOpsPerSecond( $value){
      return $this->_set(15, $value);
    }
    
    /**
     * Check if <target_read_bytes_per_second> has a value
     *
     * @return boolean
     */
    public function hasTargetReadBytesPerSecond(){
      return $this->_has(16);
    }
    
    /**
     * Clear <target_read_bytes_per_second> value
     *
     * @return \google\appengine\v1\DiskUtilization
     */
    public function clearTargetReadBytesPerSecond(){
      return $this->_clear(16);
    }
    
    /**
     * Get <target_read_bytes_per_second> value
     *
     * @return int
     */
    public function getTargetReadBytesPerSecond(){
      return $this->_get(16);
    }
    
    /**
     * Set <target_read_bytes_per_second> value
     *
     * @param int $value
     * @return \google\appengine\v1\DiskUtilization
     */
    public function setTargetReadBytesPerSecond( $value){
      return $this->_set(16, $value);
    }
    
    /**
     * Check if <target_read_ops_per_second> has a value
     *
     * @return boolean
     */
    public function hasTargetReadOpsPerSecond(){
      return $this->_has(17);
    }
    
    /**
     * Clear <target_read_ops_per_second> value
     *
     * @return \google\appengine\v1\DiskUtilization
     */
    public function clearTargetReadOpsPerSecond(){
      return $this->_clear(17);
    }
    
    /**
     * Get <target_read_ops_per_second> value
     *
     * @return int
     */
    public function getTargetReadOpsPerSecond(){
      return $this->_get(17);
    }
    
    /**
     * Set <target_read_ops_per_second> value
     *
     * @param int $value
     * @return \google\appengine\v1\DiskUtilization
     */
    public function setTargetReadOpsPerSecond( $value){
      return $this->_set(17, $value);
    }
  }
}

namespace google\appengine\v1 {

  class NetworkUtilization extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $target_sent_bytes_per_second = null;
    
    /**  @var int */
    public $target_sent_packets_per_second = null;
    
    /**  @var int */
    public $target_received_bytes_per_second = null;
    
    /**  @var int */
    public $target_received_packets_per_second = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.NetworkUtilization');

      // OPTIONAL INT32 target_sent_bytes_per_second = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "target_sent_bytes_per_second";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 target_sent_packets_per_second = 11
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 11;
      $f->name      = "target_sent_packets_per_second";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 target_received_bytes_per_second = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "target_received_bytes_per_second";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 target_received_packets_per_second = 13
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 13;
      $f->name      = "target_received_packets_per_second";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <target_sent_bytes_per_second> has a value
     *
     * @return boolean
     */
    public function hasTargetSentBytesPerSecond(){
      return $this->_has(1);
    }
    
    /**
     * Clear <target_sent_bytes_per_second> value
     *
     * @return \google\appengine\v1\NetworkUtilization
     */
    public function clearTargetSentBytesPerSecond(){
      return $this->_clear(1);
    }
    
    /**
     * Get <target_sent_bytes_per_second> value
     *
     * @return int
     */
    public function getTargetSentBytesPerSecond(){
      return $this->_get(1);
    }
    
    /**
     * Set <target_sent_bytes_per_second> value
     *
     * @param int $value
     * @return \google\appengine\v1\NetworkUtilization
     */
    public function setTargetSentBytesPerSecond( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <target_sent_packets_per_second> has a value
     *
     * @return boolean
     */
    public function hasTargetSentPacketsPerSecond(){
      return $this->_has(11);
    }
    
    /**
     * Clear <target_sent_packets_per_second> value
     *
     * @return \google\appengine\v1\NetworkUtilization
     */
    public function clearTargetSentPacketsPerSecond(){
      return $this->_clear(11);
    }
    
    /**
     * Get <target_sent_packets_per_second> value
     *
     * @return int
     */
    public function getTargetSentPacketsPerSecond(){
      return $this->_get(11);
    }
    
    /**
     * Set <target_sent_packets_per_second> value
     *
     * @param int $value
     * @return \google\appengine\v1\NetworkUtilization
     */
    public function setTargetSentPacketsPerSecond( $value){
      return $this->_set(11, $value);
    }
    
    /**
     * Check if <target_received_bytes_per_second> has a value
     *
     * @return boolean
     */
    public function hasTargetReceivedBytesPerSecond(){
      return $this->_has(12);
    }
    
    /**
     * Clear <target_received_bytes_per_second> value
     *
     * @return \google\appengine\v1\NetworkUtilization
     */
    public function clearTargetReceivedBytesPerSecond(){
      return $this->_clear(12);
    }
    
    /**
     * Get <target_received_bytes_per_second> value
     *
     * @return int
     */
    public function getTargetReceivedBytesPerSecond(){
      return $this->_get(12);
    }
    
    /**
     * Set <target_received_bytes_per_second> value
     *
     * @param int $value
     * @return \google\appengine\v1\NetworkUtilization
     */
    public function setTargetReceivedBytesPerSecond( $value){
      return $this->_set(12, $value);
    }
    
    /**
     * Check if <target_received_packets_per_second> has a value
     *
     * @return boolean
     */
    public function hasTargetReceivedPacketsPerSecond(){
      return $this->_has(13);
    }
    
    /**
     * Clear <target_received_packets_per_second> value
     *
     * @return \google\appengine\v1\NetworkUtilization
     */
    public function clearTargetReceivedPacketsPerSecond(){
      return $this->_clear(13);
    }
    
    /**
     * Get <target_received_packets_per_second> value
     *
     * @return int
     */
    public function getTargetReceivedPacketsPerSecond(){
      return $this->_get(13);
    }
    
    /**
     * Set <target_received_packets_per_second> value
     *
     * @param int $value
     * @return \google\appengine\v1\NetworkUtilization
     */
    public function setTargetReceivedPacketsPerSecond( $value){
      return $this->_set(13, $value);
    }
  }
}

namespace google\appengine\v1 {

  class Network extends \DrSlump\Protobuf\Message {

    /**  @var string[]  */
    public $forwarded_ports = array();
    
    /**  @var string */
    public $instance_tag = null;
    
    /**  @var string */
    public $name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.Network');

      // REPEATED STRING forwarded_ports = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "forwarded_ports";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // OPTIONAL STRING instance_tag = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "instance_tag";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING name = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <forwarded_ports> has a value
     *
     * @return boolean
     */
    public function hasForwardedPorts(){
      return $this->_has(1);
    }
    
    /**
     * Clear <forwarded_ports> value
     *
     * @return \google\appengine\v1\Network
     */
    public function clearForwardedPorts(){
      return $this->_clear(1);
    }
    
    /**
     * Get <forwarded_ports> value
     *
     * @param int $idx
     * @return string
     */
    public function getForwardedPorts($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <forwarded_ports> value
     *
     * @param string $value
     * @return \google\appengine\v1\Network
     */
    public function setForwardedPorts( $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <forwarded_ports>
     *
     * @return string[]
     */
    public function getForwardedPortsList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <forwarded_ports>
     *
     * @param string $value
     * @return \google\appengine\v1\Network
     */
    public function addForwardedPorts( $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <instance_tag> has a value
     *
     * @return boolean
     */
    public function hasInstanceTag(){
      return $this->_has(2);
    }
    
    /**
     * Clear <instance_tag> value
     *
     * @return \google\appengine\v1\Network
     */
    public function clearInstanceTag(){
      return $this->_clear(2);
    }
    
    /**
     * Get <instance_tag> value
     *
     * @return string
     */
    public function getInstanceTag(){
      return $this->_get(2);
    }
    
    /**
     * Set <instance_tag> value
     *
     * @param string $value
     * @return \google\appengine\v1\Network
     */
    public function setInstanceTag( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(3);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\appengine\v1\Network
     */
    public function clearName(){
      return $this->_clear(3);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(3);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\appengine\v1\Network
     */
    public function setName( $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\appengine\v1 {

  class Resources extends \DrSlump\Protobuf\Message {

    /**  @var float */
    public $cpu = null;
    
    /**  @var float */
    public $disk_gb = null;
    
    /**  @var float */
    public $memory_gb = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.Resources');

      // OPTIONAL DOUBLE cpu = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "cpu";
      $f->type      = \DrSlump\Protobuf::TYPE_DOUBLE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL DOUBLE disk_gb = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "disk_gb";
      $f->type      = \DrSlump\Protobuf::TYPE_DOUBLE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL DOUBLE memory_gb = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "memory_gb";
      $f->type      = \DrSlump\Protobuf::TYPE_DOUBLE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <cpu> has a value
     *
     * @return boolean
     */
    public function hasCpu(){
      return $this->_has(1);
    }
    
    /**
     * Clear <cpu> value
     *
     * @return \google\appengine\v1\Resources
     */
    public function clearCpu(){
      return $this->_clear(1);
    }
    
    /**
     * Get <cpu> value
     *
     * @return float
     */
    public function getCpu(){
      return $this->_get(1);
    }
    
    /**
     * Set <cpu> value
     *
     * @param float $value
     * @return \google\appengine\v1\Resources
     */
    public function setCpu( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <disk_gb> has a value
     *
     * @return boolean
     */
    public function hasDiskGb(){
      return $this->_has(2);
    }
    
    /**
     * Clear <disk_gb> value
     *
     * @return \google\appengine\v1\Resources
     */
    public function clearDiskGb(){
      return $this->_clear(2);
    }
    
    /**
     * Get <disk_gb> value
     *
     * @return float
     */
    public function getDiskGb(){
      return $this->_get(2);
    }
    
    /**
     * Set <disk_gb> value
     *
     * @param float $value
     * @return \google\appengine\v1\Resources
     */
    public function setDiskGb( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <memory_gb> has a value
     *
     * @return boolean
     */
    public function hasMemoryGb(){
      return $this->_has(3);
    }
    
    /**
     * Clear <memory_gb> value
     *
     * @return \google\appengine\v1\Resources
     */
    public function clearMemoryGb(){
      return $this->_clear(3);
    }
    
    /**
     * Get <memory_gb> value
     *
     * @return float
     */
    public function getMemoryGb(){
      return $this->_get(3);
    }
    
    /**
     * Set <memory_gb> value
     *
     * @param float $value
     * @return \google\appengine\v1\Resources
     */
    public function setMemoryGb( $value){
      return $this->_set(3, $value);
    }
  }
}

