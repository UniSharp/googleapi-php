<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/container/v1/cluster_service.proto

namespace Google\Container\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * NodePool contains the name and configuration for a cluster's node pool.
 * Node pools are a set of nodes (i.e. VM's), with a common configuration and
 * specification, under the control of the cluster master. They may have a set
 * of Kubernetes labels applied to them, which may be used to reference them
 * during pod scheduling. They may also be resized up or down, to accommodate
 * the workload.
 * </pre>
 *
 * Protobuf type <code>google.container.v1.NodePool</code>
 */
class NodePool extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * The name of the node pool.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    private $name = '';
    /**
     * <pre>
     * The node configuration of the pool.
     * </pre>
     *
     * <code>.google.container.v1.NodeConfig config = 2;</code>
     */
    private $config = null;
    /**
     * <pre>
     * The initial node count for the pool. You must ensure that your
     * Compute Engine &lt;a href="/compute/docs/resource-quotas"&gt;resource quota&lt;/a&gt;
     * is sufficient for this number of instances. You must also have available
     * firewall and routes quota.
     * </pre>
     *
     * <code>int32 initial_node_count = 3;</code>
     */
    private $initial_node_count = 0;
    /**
     * <pre>
     * [Output only] Server-defined URL for the resource.
     * </pre>
     *
     * <code>string self_link = 100;</code>
     */
    private $self_link = '';
    /**
     * <pre>
     * [Output only] The version of the Kubernetes of this node.
     * </pre>
     *
     * <code>string version = 101;</code>
     */
    private $version = '';
    /**
     * <pre>
     * [Output only] The resource URLs of [instance
     * groups](/compute/docs/instance-groups/) associated with this
     * node pool.
     * </pre>
     *
     * <code>repeated string instance_group_urls = 102;</code>
     */
    private $instance_group_urls;
    /**
     * <pre>
     * [Output only] The status of the nodes in this pool instance.
     * </pre>
     *
     * <code>.google.container.v1.NodePool.Status status = 103;</code>
     */
    private $status = 0;
    /**
     * <pre>
     * [Output only] Additional information about the current status of this
     * node pool instance, if available.
     * </pre>
     *
     * <code>string status_message = 104;</code>
     */
    private $status_message = '';
    /**
     * <pre>
     * Autoscaler configuration for this NodePool. Autoscaler is enabled
     * only if a valid configuration is present.
     * </pre>
     *
     * <code>.google.container.v1.NodePoolAutoscaling autoscaling = 4;</code>
     */
    private $autoscaling = null;
    /**
     * <pre>
     * NodeManagement configuration for this NodePool.
     * </pre>
     *
     * <code>.google.container.v1.NodeManagement management = 5;</code>
     */
    private $management = null;

    public function __construct() {
        \GPBMetadata\Google\Container\V1\ClusterService::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * The name of the node pool.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * <pre>
     * The name of the node pool.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;
    }

    /**
     * <pre>
     * The node configuration of the pool.
     * </pre>
     *
     * <code>.google.container.v1.NodeConfig config = 2;</code>
     */
    public function getConfig()
    {
        return $this->config;
    }

    /**
     * <pre>
     * The node configuration of the pool.
     * </pre>
     *
     * <code>.google.container.v1.NodeConfig config = 2;</code>
     */
    public function setConfig(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Container\V1\NodeConfig::class);
        $this->config = $var;
    }

    /**
     * <pre>
     * The initial node count for the pool. You must ensure that your
     * Compute Engine &lt;a href="/compute/docs/resource-quotas"&gt;resource quota&lt;/a&gt;
     * is sufficient for this number of instances. You must also have available
     * firewall and routes quota.
     * </pre>
     *
     * <code>int32 initial_node_count = 3;</code>
     */
    public function getInitialNodeCount()
    {
        return $this->initial_node_count;
    }

    /**
     * <pre>
     * The initial node count for the pool. You must ensure that your
     * Compute Engine &lt;a href="/compute/docs/resource-quotas"&gt;resource quota&lt;/a&gt;
     * is sufficient for this number of instances. You must also have available
     * firewall and routes quota.
     * </pre>
     *
     * <code>int32 initial_node_count = 3;</code>
     */
    public function setInitialNodeCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->initial_node_count = $var;
    }

    /**
     * <pre>
     * [Output only] Server-defined URL for the resource.
     * </pre>
     *
     * <code>string self_link = 100;</code>
     */
    public function getSelfLink()
    {
        return $this->self_link;
    }

    /**
     * <pre>
     * [Output only] Server-defined URL for the resource.
     * </pre>
     *
     * <code>string self_link = 100;</code>
     */
    public function setSelfLink($var)
    {
        GPBUtil::checkString($var, True);
        $this->self_link = $var;
    }

    /**
     * <pre>
     * [Output only] The version of the Kubernetes of this node.
     * </pre>
     *
     * <code>string version = 101;</code>
     */
    public function getVersion()
    {
        return $this->version;
    }

    /**
     * <pre>
     * [Output only] The version of the Kubernetes of this node.
     * </pre>
     *
     * <code>string version = 101;</code>
     */
    public function setVersion($var)
    {
        GPBUtil::checkString($var, True);
        $this->version = $var;
    }

    /**
     * <pre>
     * [Output only] The resource URLs of [instance
     * groups](/compute/docs/instance-groups/) associated with this
     * node pool.
     * </pre>
     *
     * <code>repeated string instance_group_urls = 102;</code>
     */
    public function getInstanceGroupUrls()
    {
        return $this->instance_group_urls;
    }

    /**
     * <pre>
     * [Output only] The resource URLs of [instance
     * groups](/compute/docs/instance-groups/) associated with this
     * node pool.
     * </pre>
     *
     * <code>repeated string instance_group_urls = 102;</code>
     */
    public function setInstanceGroupUrls(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->instance_group_urls = $var;
    }

    /**
     * <pre>
     * [Output only] The status of the nodes in this pool instance.
     * </pre>
     *
     * <code>.google.container.v1.NodePool.Status status = 103;</code>
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * <pre>
     * [Output only] The status of the nodes in this pool instance.
     * </pre>
     *
     * <code>.google.container.v1.NodePool.Status status = 103;</code>
     */
    public function setStatus($var)
    {
        GPBUtil::checkEnum($var, \Google\Container\V1\NodePool_Status::class);
        $this->status = $var;
    }

    /**
     * <pre>
     * [Output only] Additional information about the current status of this
     * node pool instance, if available.
     * </pre>
     *
     * <code>string status_message = 104;</code>
     */
    public function getStatusMessage()
    {
        return $this->status_message;
    }

    /**
     * <pre>
     * [Output only] Additional information about the current status of this
     * node pool instance, if available.
     * </pre>
     *
     * <code>string status_message = 104;</code>
     */
    public function setStatusMessage($var)
    {
        GPBUtil::checkString($var, True);
        $this->status_message = $var;
    }

    /**
     * <pre>
     * Autoscaler configuration for this NodePool. Autoscaler is enabled
     * only if a valid configuration is present.
     * </pre>
     *
     * <code>.google.container.v1.NodePoolAutoscaling autoscaling = 4;</code>
     */
    public function getAutoscaling()
    {
        return $this->autoscaling;
    }

    /**
     * <pre>
     * Autoscaler configuration for this NodePool. Autoscaler is enabled
     * only if a valid configuration is present.
     * </pre>
     *
     * <code>.google.container.v1.NodePoolAutoscaling autoscaling = 4;</code>
     */
    public function setAutoscaling(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Container\V1\NodePoolAutoscaling::class);
        $this->autoscaling = $var;
    }

    /**
     * <pre>
     * NodeManagement configuration for this NodePool.
     * </pre>
     *
     * <code>.google.container.v1.NodeManagement management = 5;</code>
     */
    public function getManagement()
    {
        return $this->management;
    }

    /**
     * <pre>
     * NodeManagement configuration for this NodePool.
     * </pre>
     *
     * <code>.google.container.v1.NodeManagement management = 5;</code>
     */
    public function setManagement(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Container\V1\NodeManagement::class);
        $this->management = $var;
    }

}

