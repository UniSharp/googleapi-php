<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/container/v1/cluster_service.proto

namespace Google\Container\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * A Google Container Engine cluster.
 * </pre>
 *
 * Protobuf type <code>google.container.v1.Cluster</code>
 */
class Cluster extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * The name of this cluster. The name must be unique within this project
     * and zone, and can be up to 40 characters with the following restrictions:
     * * Lowercase letters, numbers, and hyphens only.
     * * Must start with a letter.
     * * Must end with a number or a letter.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    private $name = '';
    /**
     * <pre>
     * An optional description of this cluster.
     * </pre>
     *
     * <code>string description = 2;</code>
     */
    private $description = '';
    /**
     * <pre>
     * The number of nodes to create in this cluster. You must ensure that your
     * Compute Engine &lt;a href="/compute/docs/resource-quotas"&gt;resource quota&lt;/a&gt;
     * is sufficient for this number of instances. You must also have available
     * firewall and routes quota.
     * For requests, this field should only be used in lieu of a
     * "node_pool" object, since this configuration (along with the
     * "node_config") will be used to create a "NodePool" object with an
     * auto-generated name. Do not use this and a node_pool at the same time.
     * </pre>
     *
     * <code>int32 initial_node_count = 3;</code>
     */
    private $initial_node_count = 0;
    /**
     * <pre>
     * Parameters used in creating the cluster's nodes.
     * See `nodeConfig` for the description of its properties.
     * For requests, this field should only be used in lieu of a
     * "node_pool" object, since this configuration (along with the
     * "initial_node_count") will be used to create a "NodePool" object with an
     * auto-generated name. Do not use this and a node_pool at the same time.
     * For responses, this field will be populated with the node configuration of
     * the first node pool.
     * If unspecified, the defaults are used.
     * </pre>
     *
     * <code>.google.container.v1.NodeConfig node_config = 4;</code>
     */
    private $node_config = null;
    /**
     * <pre>
     * The authentication information for accessing the master endpoint.
     * </pre>
     *
     * <code>.google.container.v1.MasterAuth master_auth = 5;</code>
     */
    private $master_auth = null;
    /**
     * <pre>
     * The logging service the cluster should use to write logs.
     * Currently available options:
     * * `logging.googleapis.com` - the Google Cloud Logging service.
     * * `none` - no logs will be exported from the cluster.
     * * if left as an empty string,`logging.googleapis.com` will be used.
     * </pre>
     *
     * <code>string logging_service = 6;</code>
     */
    private $logging_service = '';
    /**
     * <pre>
     * The monitoring service the cluster should use to write metrics.
     * Currently available options:
     * * `monitoring.googleapis.com` - the Google Cloud Monitoring service.
     * * `none` - no metrics will be exported from the cluster.
     * * if left as an empty string, `monitoring.googleapis.com` will be used.
     * </pre>
     *
     * <code>string monitoring_service = 7;</code>
     */
    private $monitoring_service = '';
    /**
     * <pre>
     * The name of the Google Compute Engine
     * [network](/compute/docs/networks-and-firewalls#networks) to which the
     * cluster is connected. If left unspecified, the `default` network
     * will be used.
     * </pre>
     *
     * <code>string network = 8;</code>
     */
    private $network = '';
    /**
     * <pre>
     * The IP address range of the container pods in this cluster, in
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`). Leave blank to have
     * one automatically chosen or specify a `/14` block in `10.0.0.0/8`.
     * </pre>
     *
     * <code>string cluster_ipv4_cidr = 9;</code>
     */
    private $cluster_ipv4_cidr = '';
    /**
     * <pre>
     * Configurations for the various addons available to run in the cluster.
     * </pre>
     *
     * <code>.google.container.v1.AddonsConfig addons_config = 10;</code>
     */
    private $addons_config = null;
    /**
     * <pre>
     * The name of the Google Compute Engine
     * [subnetwork](/compute/docs/subnetworks) to which the
     * cluster is connected.
     * </pre>
     *
     * <code>string subnetwork = 11;</code>
     */
    private $subnetwork = '';
    /**
     * <pre>
     * The node pools associated with this cluster.
     * This field should not be set if "node_config" or "initial_node_count" are
     * specified.
     * </pre>
     *
     * <code>repeated .google.container.v1.NodePool node_pools = 12;</code>
     */
    private $node_pools;
    /**
     * <pre>
     * The list of Google Compute Engine
     * [locations](/compute/docs/zones#available) in which the cluster's nodes
     * should be located.
     * </pre>
     *
     * <code>repeated string locations = 13;</code>
     */
    private $locations;
    /**
     * <pre>
     * Kubernetes alpha features are enabled on this cluster. This includes alpha
     * API groups (e.g. v1alpha1) and features that may not be production ready in
     * the kubernetes version of the master and nodes.
     * The cluster has no SLA for uptime and master/node upgrades are disabled.
     * Alpha enabled clusters are automatically deleted thirty days after
     * creation.
     * </pre>
     *
     * <code>bool enable_kubernetes_alpha = 14;</code>
     */
    private $enable_kubernetes_alpha = false;
    /**
     * <pre>
     * The resource labels for the cluster to use to annotate any related
     * Google Compute Engine resources.
     * </pre>
     *
     * <code>map&lt;string, string&gt; resource_labels = 15;</code>
     */
    private $resource_labels;
    /**
     * <pre>
     * The fingerprint of the set of labels for this cluster.
     * </pre>
     *
     * <code>string label_fingerprint = 16;</code>
     */
    private $label_fingerprint = '';
    /**
     * <pre>
     * Configuration for the legacy ABAC authorization mode.
     * </pre>
     *
     * <code>.google.container.v1.LegacyAbac legacy_abac = 18;</code>
     */
    private $legacy_abac = null;
    /**
     * <pre>
     * [Output only] Server-defined URL for the resource.
     * </pre>
     *
     * <code>string self_link = 100;</code>
     */
    private $self_link = '';
    /**
     * <pre>
     * [Output only] The name of the Google Compute Engine
     * [zone](/compute/docs/zones#available) in which the cluster
     * resides.
     * </pre>
     *
     * <code>string zone = 101;</code>
     */
    private $zone = '';
    /**
     * <pre>
     * [Output only] The IP address of this cluster's master endpoint.
     * The endpoint can be accessed from the internet at
     * `https://username:password&#64;endpoint/`.
     * See the `masterAuth` property of this resource for username and
     * password information.
     * </pre>
     *
     * <code>string endpoint = 102;</code>
     */
    private $endpoint = '';
    /**
     * <pre>
     * The initial Kubernetes version for this cluster.  Valid versions are those
     * found in validMasterVersions returned by getServerConfig.  The version can
     * be upgraded over time; such upgrades are reflected in
     * currentMasterVersion and currentNodeVersion.
     * </pre>
     *
     * <code>string initial_cluster_version = 103;</code>
     */
    private $initial_cluster_version = '';
    /**
     * <pre>
     * [Output only] The current software version of the master endpoint.
     * </pre>
     *
     * <code>string current_master_version = 104;</code>
     */
    private $current_master_version = '';
    /**
     * <pre>
     * [Output only] The current version of the node software components.
     * If they are currently at multiple versions because they're in the process
     * of being upgraded, this reflects the minimum version of all nodes.
     * </pre>
     *
     * <code>string current_node_version = 105;</code>
     */
    private $current_node_version = '';
    /**
     * <pre>
     * [Output only] The time the cluster was created, in
     * [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     * </pre>
     *
     * <code>string create_time = 106;</code>
     */
    private $create_time = '';
    /**
     * <pre>
     * [Output only] The current status of this cluster.
     * </pre>
     *
     * <code>.google.container.v1.Cluster.Status status = 107;</code>
     */
    private $status = 0;
    /**
     * <pre>
     * [Output only] Additional information about the current status of this
     * cluster, if available.
     * </pre>
     *
     * <code>string status_message = 108;</code>
     */
    private $status_message = '';
    /**
     * <pre>
     * [Output only] The size of the address space on each node for hosting
     * containers. This is provisioned from within the `container_ipv4_cidr`
     * range.
     * </pre>
     *
     * <code>int32 node_ipv4_cidr_size = 109;</code>
     */
    private $node_ipv4_cidr_size = 0;
    /**
     * <pre>
     * [Output only] The IP address range of the Kubernetes services in
     * this cluster, in
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `1.2.3.4/29`). Service addresses are
     * typically put in the last `/16` from the container CIDR.
     * </pre>
     *
     * <code>string services_ipv4_cidr = 110;</code>
     */
    private $services_ipv4_cidr = '';
    /**
     * <pre>
     * [Output only] The resource URLs of [instance
     * groups](/compute/docs/instance-groups/) associated with this
     * cluster.
     * </pre>
     *
     * <code>repeated string instance_group_urls = 111;</code>
     */
    private $instance_group_urls;
    /**
     * <pre>
     * [Output only] The number of nodes currently in the cluster.
     * </pre>
     *
     * <code>int32 current_node_count = 112;</code>
     */
    private $current_node_count = 0;
    /**
     * <pre>
     * [Output only] The time the cluster will be automatically
     * deleted in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     * </pre>
     *
     * <code>string expire_time = 113;</code>
     */
    private $expire_time = '';

    public function __construct() {
        \GPBMetadata\Google\Container\V1\ClusterService::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * The name of this cluster. The name must be unique within this project
     * and zone, and can be up to 40 characters with the following restrictions:
     * * Lowercase letters, numbers, and hyphens only.
     * * Must start with a letter.
     * * Must end with a number or a letter.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * <pre>
     * The name of this cluster. The name must be unique within this project
     * and zone, and can be up to 40 characters with the following restrictions:
     * * Lowercase letters, numbers, and hyphens only.
     * * Must start with a letter.
     * * Must end with a number or a letter.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;
    }

    /**
     * <pre>
     * An optional description of this cluster.
     * </pre>
     *
     * <code>string description = 2;</code>
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * <pre>
     * An optional description of this cluster.
     * </pre>
     *
     * <code>string description = 2;</code>
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;
    }

    /**
     * <pre>
     * The number of nodes to create in this cluster. You must ensure that your
     * Compute Engine &lt;a href="/compute/docs/resource-quotas"&gt;resource quota&lt;/a&gt;
     * is sufficient for this number of instances. You must also have available
     * firewall and routes quota.
     * For requests, this field should only be used in lieu of a
     * "node_pool" object, since this configuration (along with the
     * "node_config") will be used to create a "NodePool" object with an
     * auto-generated name. Do not use this and a node_pool at the same time.
     * </pre>
     *
     * <code>int32 initial_node_count = 3;</code>
     */
    public function getInitialNodeCount()
    {
        return $this->initial_node_count;
    }

    /**
     * <pre>
     * The number of nodes to create in this cluster. You must ensure that your
     * Compute Engine &lt;a href="/compute/docs/resource-quotas"&gt;resource quota&lt;/a&gt;
     * is sufficient for this number of instances. You must also have available
     * firewall and routes quota.
     * For requests, this field should only be used in lieu of a
     * "node_pool" object, since this configuration (along with the
     * "node_config") will be used to create a "NodePool" object with an
     * auto-generated name. Do not use this and a node_pool at the same time.
     * </pre>
     *
     * <code>int32 initial_node_count = 3;</code>
     */
    public function setInitialNodeCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->initial_node_count = $var;
    }

    /**
     * <pre>
     * Parameters used in creating the cluster's nodes.
     * See `nodeConfig` for the description of its properties.
     * For requests, this field should only be used in lieu of a
     * "node_pool" object, since this configuration (along with the
     * "initial_node_count") will be used to create a "NodePool" object with an
     * auto-generated name. Do not use this and a node_pool at the same time.
     * For responses, this field will be populated with the node configuration of
     * the first node pool.
     * If unspecified, the defaults are used.
     * </pre>
     *
     * <code>.google.container.v1.NodeConfig node_config = 4;</code>
     */
    public function getNodeConfig()
    {
        return $this->node_config;
    }

    /**
     * <pre>
     * Parameters used in creating the cluster's nodes.
     * See `nodeConfig` for the description of its properties.
     * For requests, this field should only be used in lieu of a
     * "node_pool" object, since this configuration (along with the
     * "initial_node_count") will be used to create a "NodePool" object with an
     * auto-generated name. Do not use this and a node_pool at the same time.
     * For responses, this field will be populated with the node configuration of
     * the first node pool.
     * If unspecified, the defaults are used.
     * </pre>
     *
     * <code>.google.container.v1.NodeConfig node_config = 4;</code>
     */
    public function setNodeConfig(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Container\V1\NodeConfig::class);
        $this->node_config = $var;
    }

    /**
     * <pre>
     * The authentication information for accessing the master endpoint.
     * </pre>
     *
     * <code>.google.container.v1.MasterAuth master_auth = 5;</code>
     */
    public function getMasterAuth()
    {
        return $this->master_auth;
    }

    /**
     * <pre>
     * The authentication information for accessing the master endpoint.
     * </pre>
     *
     * <code>.google.container.v1.MasterAuth master_auth = 5;</code>
     */
    public function setMasterAuth(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Container\V1\MasterAuth::class);
        $this->master_auth = $var;
    }

    /**
     * <pre>
     * The logging service the cluster should use to write logs.
     * Currently available options:
     * * `logging.googleapis.com` - the Google Cloud Logging service.
     * * `none` - no logs will be exported from the cluster.
     * * if left as an empty string,`logging.googleapis.com` will be used.
     * </pre>
     *
     * <code>string logging_service = 6;</code>
     */
    public function getLoggingService()
    {
        return $this->logging_service;
    }

    /**
     * <pre>
     * The logging service the cluster should use to write logs.
     * Currently available options:
     * * `logging.googleapis.com` - the Google Cloud Logging service.
     * * `none` - no logs will be exported from the cluster.
     * * if left as an empty string,`logging.googleapis.com` will be used.
     * </pre>
     *
     * <code>string logging_service = 6;</code>
     */
    public function setLoggingService($var)
    {
        GPBUtil::checkString($var, True);
        $this->logging_service = $var;
    }

    /**
     * <pre>
     * The monitoring service the cluster should use to write metrics.
     * Currently available options:
     * * `monitoring.googleapis.com` - the Google Cloud Monitoring service.
     * * `none` - no metrics will be exported from the cluster.
     * * if left as an empty string, `monitoring.googleapis.com` will be used.
     * </pre>
     *
     * <code>string monitoring_service = 7;</code>
     */
    public function getMonitoringService()
    {
        return $this->monitoring_service;
    }

    /**
     * <pre>
     * The monitoring service the cluster should use to write metrics.
     * Currently available options:
     * * `monitoring.googleapis.com` - the Google Cloud Monitoring service.
     * * `none` - no metrics will be exported from the cluster.
     * * if left as an empty string, `monitoring.googleapis.com` will be used.
     * </pre>
     *
     * <code>string monitoring_service = 7;</code>
     */
    public function setMonitoringService($var)
    {
        GPBUtil::checkString($var, True);
        $this->monitoring_service = $var;
    }

    /**
     * <pre>
     * The name of the Google Compute Engine
     * [network](/compute/docs/networks-and-firewalls#networks) to which the
     * cluster is connected. If left unspecified, the `default` network
     * will be used.
     * </pre>
     *
     * <code>string network = 8;</code>
     */
    public function getNetwork()
    {
        return $this->network;
    }

    /**
     * <pre>
     * The name of the Google Compute Engine
     * [network](/compute/docs/networks-and-firewalls#networks) to which the
     * cluster is connected. If left unspecified, the `default` network
     * will be used.
     * </pre>
     *
     * <code>string network = 8;</code>
     */
    public function setNetwork($var)
    {
        GPBUtil::checkString($var, True);
        $this->network = $var;
    }

    /**
     * <pre>
     * The IP address range of the container pods in this cluster, in
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`). Leave blank to have
     * one automatically chosen or specify a `/14` block in `10.0.0.0/8`.
     * </pre>
     *
     * <code>string cluster_ipv4_cidr = 9;</code>
     */
    public function getClusterIpv4Cidr()
    {
        return $this->cluster_ipv4_cidr;
    }

    /**
     * <pre>
     * The IP address range of the container pods in this cluster, in
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `10.96.0.0/14`). Leave blank to have
     * one automatically chosen or specify a `/14` block in `10.0.0.0/8`.
     * </pre>
     *
     * <code>string cluster_ipv4_cidr = 9;</code>
     */
    public function setClusterIpv4Cidr($var)
    {
        GPBUtil::checkString($var, True);
        $this->cluster_ipv4_cidr = $var;
    }

    /**
     * <pre>
     * Configurations for the various addons available to run in the cluster.
     * </pre>
     *
     * <code>.google.container.v1.AddonsConfig addons_config = 10;</code>
     */
    public function getAddonsConfig()
    {
        return $this->addons_config;
    }

    /**
     * <pre>
     * Configurations for the various addons available to run in the cluster.
     * </pre>
     *
     * <code>.google.container.v1.AddonsConfig addons_config = 10;</code>
     */
    public function setAddonsConfig(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Container\V1\AddonsConfig::class);
        $this->addons_config = $var;
    }

    /**
     * <pre>
     * The name of the Google Compute Engine
     * [subnetwork](/compute/docs/subnetworks) to which the
     * cluster is connected.
     * </pre>
     *
     * <code>string subnetwork = 11;</code>
     */
    public function getSubnetwork()
    {
        return $this->subnetwork;
    }

    /**
     * <pre>
     * The name of the Google Compute Engine
     * [subnetwork](/compute/docs/subnetworks) to which the
     * cluster is connected.
     * </pre>
     *
     * <code>string subnetwork = 11;</code>
     */
    public function setSubnetwork($var)
    {
        GPBUtil::checkString($var, True);
        $this->subnetwork = $var;
    }

    /**
     * <pre>
     * The node pools associated with this cluster.
     * This field should not be set if "node_config" or "initial_node_count" are
     * specified.
     * </pre>
     *
     * <code>repeated .google.container.v1.NodePool node_pools = 12;</code>
     */
    public function getNodePools()
    {
        return $this->node_pools;
    }

    /**
     * <pre>
     * The node pools associated with this cluster.
     * This field should not be set if "node_config" or "initial_node_count" are
     * specified.
     * </pre>
     *
     * <code>repeated .google.container.v1.NodePool node_pools = 12;</code>
     */
    public function setNodePools(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Container\V1\NodePool::class);
        $this->node_pools = $var;
    }

    /**
     * <pre>
     * The list of Google Compute Engine
     * [locations](/compute/docs/zones#available) in which the cluster's nodes
     * should be located.
     * </pre>
     *
     * <code>repeated string locations = 13;</code>
     */
    public function getLocations()
    {
        return $this->locations;
    }

    /**
     * <pre>
     * The list of Google Compute Engine
     * [locations](/compute/docs/zones#available) in which the cluster's nodes
     * should be located.
     * </pre>
     *
     * <code>repeated string locations = 13;</code>
     */
    public function setLocations(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->locations = $var;
    }

    /**
     * <pre>
     * Kubernetes alpha features are enabled on this cluster. This includes alpha
     * API groups (e.g. v1alpha1) and features that may not be production ready in
     * the kubernetes version of the master and nodes.
     * The cluster has no SLA for uptime and master/node upgrades are disabled.
     * Alpha enabled clusters are automatically deleted thirty days after
     * creation.
     * </pre>
     *
     * <code>bool enable_kubernetes_alpha = 14;</code>
     */
    public function getEnableKubernetesAlpha()
    {
        return $this->enable_kubernetes_alpha;
    }

    /**
     * <pre>
     * Kubernetes alpha features are enabled on this cluster. This includes alpha
     * API groups (e.g. v1alpha1) and features that may not be production ready in
     * the kubernetes version of the master and nodes.
     * The cluster has no SLA for uptime and master/node upgrades are disabled.
     * Alpha enabled clusters are automatically deleted thirty days after
     * creation.
     * </pre>
     *
     * <code>bool enable_kubernetes_alpha = 14;</code>
     */
    public function setEnableKubernetesAlpha($var)
    {
        GPBUtil::checkBool($var);
        $this->enable_kubernetes_alpha = $var;
    }

    /**
     * <pre>
     * The resource labels for the cluster to use to annotate any related
     * Google Compute Engine resources.
     * </pre>
     *
     * <code>map&lt;string, string&gt; resource_labels = 15;</code>
     */
    public function getResourceLabels()
    {
        return $this->resource_labels;
    }

    /**
     * <pre>
     * The resource labels for the cluster to use to annotate any related
     * Google Compute Engine resources.
     * </pre>
     *
     * <code>map&lt;string, string&gt; resource_labels = 15;</code>
     */
    public function setResourceLabels(&$var)
    {
        $this->resource_labels = $var;
    }

    /**
     * <pre>
     * The fingerprint of the set of labels for this cluster.
     * </pre>
     *
     * <code>string label_fingerprint = 16;</code>
     */
    public function getLabelFingerprint()
    {
        return $this->label_fingerprint;
    }

    /**
     * <pre>
     * The fingerprint of the set of labels for this cluster.
     * </pre>
     *
     * <code>string label_fingerprint = 16;</code>
     */
    public function setLabelFingerprint($var)
    {
        GPBUtil::checkString($var, True);
        $this->label_fingerprint = $var;
    }

    /**
     * <pre>
     * Configuration for the legacy ABAC authorization mode.
     * </pre>
     *
     * <code>.google.container.v1.LegacyAbac legacy_abac = 18;</code>
     */
    public function getLegacyAbac()
    {
        return $this->legacy_abac;
    }

    /**
     * <pre>
     * Configuration for the legacy ABAC authorization mode.
     * </pre>
     *
     * <code>.google.container.v1.LegacyAbac legacy_abac = 18;</code>
     */
    public function setLegacyAbac(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Container\V1\LegacyAbac::class);
        $this->legacy_abac = $var;
    }

    /**
     * <pre>
     * [Output only] Server-defined URL for the resource.
     * </pre>
     *
     * <code>string self_link = 100;</code>
     */
    public function getSelfLink()
    {
        return $this->self_link;
    }

    /**
     * <pre>
     * [Output only] Server-defined URL for the resource.
     * </pre>
     *
     * <code>string self_link = 100;</code>
     */
    public function setSelfLink($var)
    {
        GPBUtil::checkString($var, True);
        $this->self_link = $var;
    }

    /**
     * <pre>
     * [Output only] The name of the Google Compute Engine
     * [zone](/compute/docs/zones#available) in which the cluster
     * resides.
     * </pre>
     *
     * <code>string zone = 101;</code>
     */
    public function getZone()
    {
        return $this->zone;
    }

    /**
     * <pre>
     * [Output only] The name of the Google Compute Engine
     * [zone](/compute/docs/zones#available) in which the cluster
     * resides.
     * </pre>
     *
     * <code>string zone = 101;</code>
     */
    public function setZone($var)
    {
        GPBUtil::checkString($var, True);
        $this->zone = $var;
    }

    /**
     * <pre>
     * [Output only] The IP address of this cluster's master endpoint.
     * The endpoint can be accessed from the internet at
     * `https://username:password&#64;endpoint/`.
     * See the `masterAuth` property of this resource for username and
     * password information.
     * </pre>
     *
     * <code>string endpoint = 102;</code>
     */
    public function getEndpoint()
    {
        return $this->endpoint;
    }

    /**
     * <pre>
     * [Output only] The IP address of this cluster's master endpoint.
     * The endpoint can be accessed from the internet at
     * `https://username:password&#64;endpoint/`.
     * See the `masterAuth` property of this resource for username and
     * password information.
     * </pre>
     *
     * <code>string endpoint = 102;</code>
     */
    public function setEndpoint($var)
    {
        GPBUtil::checkString($var, True);
        $this->endpoint = $var;
    }

    /**
     * <pre>
     * The initial Kubernetes version for this cluster.  Valid versions are those
     * found in validMasterVersions returned by getServerConfig.  The version can
     * be upgraded over time; such upgrades are reflected in
     * currentMasterVersion and currentNodeVersion.
     * </pre>
     *
     * <code>string initial_cluster_version = 103;</code>
     */
    public function getInitialClusterVersion()
    {
        return $this->initial_cluster_version;
    }

    /**
     * <pre>
     * The initial Kubernetes version for this cluster.  Valid versions are those
     * found in validMasterVersions returned by getServerConfig.  The version can
     * be upgraded over time; such upgrades are reflected in
     * currentMasterVersion and currentNodeVersion.
     * </pre>
     *
     * <code>string initial_cluster_version = 103;</code>
     */
    public function setInitialClusterVersion($var)
    {
        GPBUtil::checkString($var, True);
        $this->initial_cluster_version = $var;
    }

    /**
     * <pre>
     * [Output only] The current software version of the master endpoint.
     * </pre>
     *
     * <code>string current_master_version = 104;</code>
     */
    public function getCurrentMasterVersion()
    {
        return $this->current_master_version;
    }

    /**
     * <pre>
     * [Output only] The current software version of the master endpoint.
     * </pre>
     *
     * <code>string current_master_version = 104;</code>
     */
    public function setCurrentMasterVersion($var)
    {
        GPBUtil::checkString($var, True);
        $this->current_master_version = $var;
    }

    /**
     * <pre>
     * [Output only] The current version of the node software components.
     * If they are currently at multiple versions because they're in the process
     * of being upgraded, this reflects the minimum version of all nodes.
     * </pre>
     *
     * <code>string current_node_version = 105;</code>
     */
    public function getCurrentNodeVersion()
    {
        return $this->current_node_version;
    }

    /**
     * <pre>
     * [Output only] The current version of the node software components.
     * If they are currently at multiple versions because they're in the process
     * of being upgraded, this reflects the minimum version of all nodes.
     * </pre>
     *
     * <code>string current_node_version = 105;</code>
     */
    public function setCurrentNodeVersion($var)
    {
        GPBUtil::checkString($var, True);
        $this->current_node_version = $var;
    }

    /**
     * <pre>
     * [Output only] The time the cluster was created, in
     * [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     * </pre>
     *
     * <code>string create_time = 106;</code>
     */
    public function getCreateTime()
    {
        return $this->create_time;
    }

    /**
     * <pre>
     * [Output only] The time the cluster was created, in
     * [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     * </pre>
     *
     * <code>string create_time = 106;</code>
     */
    public function setCreateTime($var)
    {
        GPBUtil::checkString($var, True);
        $this->create_time = $var;
    }

    /**
     * <pre>
     * [Output only] The current status of this cluster.
     * </pre>
     *
     * <code>.google.container.v1.Cluster.Status status = 107;</code>
     */
    public function getStatus()
    {
        return $this->status;
    }

    /**
     * <pre>
     * [Output only] The current status of this cluster.
     * </pre>
     *
     * <code>.google.container.v1.Cluster.Status status = 107;</code>
     */
    public function setStatus($var)
    {
        GPBUtil::checkEnum($var, \Google\Container\V1\Cluster_Status::class);
        $this->status = $var;
    }

    /**
     * <pre>
     * [Output only] Additional information about the current status of this
     * cluster, if available.
     * </pre>
     *
     * <code>string status_message = 108;</code>
     */
    public function getStatusMessage()
    {
        return $this->status_message;
    }

    /**
     * <pre>
     * [Output only] Additional information about the current status of this
     * cluster, if available.
     * </pre>
     *
     * <code>string status_message = 108;</code>
     */
    public function setStatusMessage($var)
    {
        GPBUtil::checkString($var, True);
        $this->status_message = $var;
    }

    /**
     * <pre>
     * [Output only] The size of the address space on each node for hosting
     * containers. This is provisioned from within the `container_ipv4_cidr`
     * range.
     * </pre>
     *
     * <code>int32 node_ipv4_cidr_size = 109;</code>
     */
    public function getNodeIpv4CidrSize()
    {
        return $this->node_ipv4_cidr_size;
    }

    /**
     * <pre>
     * [Output only] The size of the address space on each node for hosting
     * containers. This is provisioned from within the `container_ipv4_cidr`
     * range.
     * </pre>
     *
     * <code>int32 node_ipv4_cidr_size = 109;</code>
     */
    public function setNodeIpv4CidrSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->node_ipv4_cidr_size = $var;
    }

    /**
     * <pre>
     * [Output only] The IP address range of the Kubernetes services in
     * this cluster, in
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `1.2.3.4/29`). Service addresses are
     * typically put in the last `/16` from the container CIDR.
     * </pre>
     *
     * <code>string services_ipv4_cidr = 110;</code>
     */
    public function getServicesIpv4Cidr()
    {
        return $this->services_ipv4_cidr;
    }

    /**
     * <pre>
     * [Output only] The IP address range of the Kubernetes services in
     * this cluster, in
     * [CIDR](http://en.wikipedia.org/wiki/Classless_Inter-Domain_Routing)
     * notation (e.g. `1.2.3.4/29`). Service addresses are
     * typically put in the last `/16` from the container CIDR.
     * </pre>
     *
     * <code>string services_ipv4_cidr = 110;</code>
     */
    public function setServicesIpv4Cidr($var)
    {
        GPBUtil::checkString($var, True);
        $this->services_ipv4_cidr = $var;
    }

    /**
     * <pre>
     * [Output only] The resource URLs of [instance
     * groups](/compute/docs/instance-groups/) associated with this
     * cluster.
     * </pre>
     *
     * <code>repeated string instance_group_urls = 111;</code>
     */
    public function getInstanceGroupUrls()
    {
        return $this->instance_group_urls;
    }

    /**
     * <pre>
     * [Output only] The resource URLs of [instance
     * groups](/compute/docs/instance-groups/) associated with this
     * cluster.
     * </pre>
     *
     * <code>repeated string instance_group_urls = 111;</code>
     */
    public function setInstanceGroupUrls(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->instance_group_urls = $var;
    }

    /**
     * <pre>
     * [Output only] The number of nodes currently in the cluster.
     * </pre>
     *
     * <code>int32 current_node_count = 112;</code>
     */
    public function getCurrentNodeCount()
    {
        return $this->current_node_count;
    }

    /**
     * <pre>
     * [Output only] The number of nodes currently in the cluster.
     * </pre>
     *
     * <code>int32 current_node_count = 112;</code>
     */
    public function setCurrentNodeCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->current_node_count = $var;
    }

    /**
     * <pre>
     * [Output only] The time the cluster will be automatically
     * deleted in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     * </pre>
     *
     * <code>string expire_time = 113;</code>
     */
    public function getExpireTime()
    {
        return $this->expire_time;
    }

    /**
     * <pre>
     * [Output only] The time the cluster will be automatically
     * deleted in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
     * </pre>
     *
     * <code>string expire_time = 113;</code>
     */
    public function setExpireTime($var)
    {
        GPBUtil::checkString($var, True);
        $this->expire_time = $var;
    }

}

