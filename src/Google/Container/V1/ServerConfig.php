<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/container/v1/cluster_service.proto

namespace Google\Container\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Container Engine service configuration.
 * </pre>
 *
 * Protobuf type <code>google.container.v1.ServerConfig</code>
 */
class ServerConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * Version of Kubernetes the service deploys by default.
     * </pre>
     *
     * <code>string default_cluster_version = 1;</code>
     */
    private $default_cluster_version = '';
    /**
     * <pre>
     * List of valid node upgrade target versions.
     * </pre>
     *
     * <code>repeated string valid_node_versions = 3;</code>
     */
    private $valid_node_versions;
    /**
     * <pre>
     * Default image type.
     * </pre>
     *
     * <code>string default_image_type = 4;</code>
     */
    private $default_image_type = '';
    /**
     * <pre>
     * List of valid image types.
     * </pre>
     *
     * <code>repeated string valid_image_types = 5;</code>
     */
    private $valid_image_types;
    /**
     * <pre>
     * List of valid master versions.
     * </pre>
     *
     * <code>repeated string valid_master_versions = 6;</code>
     */
    private $valid_master_versions;

    public function __construct() {
        \GPBMetadata\Google\Container\V1\ClusterService::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * Version of Kubernetes the service deploys by default.
     * </pre>
     *
     * <code>string default_cluster_version = 1;</code>
     */
    public function getDefaultClusterVersion()
    {
        return $this->default_cluster_version;
    }

    /**
     * <pre>
     * Version of Kubernetes the service deploys by default.
     * </pre>
     *
     * <code>string default_cluster_version = 1;</code>
     */
    public function setDefaultClusterVersion($var)
    {
        GPBUtil::checkString($var, True);
        $this->default_cluster_version = $var;
    }

    /**
     * <pre>
     * List of valid node upgrade target versions.
     * </pre>
     *
     * <code>repeated string valid_node_versions = 3;</code>
     */
    public function getValidNodeVersions()
    {
        return $this->valid_node_versions;
    }

    /**
     * <pre>
     * List of valid node upgrade target versions.
     * </pre>
     *
     * <code>repeated string valid_node_versions = 3;</code>
     */
    public function setValidNodeVersions(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->valid_node_versions = $arr;
    }

    /**
     * <pre>
     * Default image type.
     * </pre>
     *
     * <code>string default_image_type = 4;</code>
     */
    public function getDefaultImageType()
    {
        return $this->default_image_type;
    }

    /**
     * <pre>
     * Default image type.
     * </pre>
     *
     * <code>string default_image_type = 4;</code>
     */
    public function setDefaultImageType($var)
    {
        GPBUtil::checkString($var, True);
        $this->default_image_type = $var;
    }

    /**
     * <pre>
     * List of valid image types.
     * </pre>
     *
     * <code>repeated string valid_image_types = 5;</code>
     */
    public function getValidImageTypes()
    {
        return $this->valid_image_types;
    }

    /**
     * <pre>
     * List of valid image types.
     * </pre>
     *
     * <code>repeated string valid_image_types = 5;</code>
     */
    public function setValidImageTypes(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->valid_image_types = $arr;
    }

    /**
     * <pre>
     * List of valid master versions.
     * </pre>
     *
     * <code>repeated string valid_master_versions = 6;</code>
     */
    public function getValidMasterVersions()
    {
        return $this->valid_master_versions;
    }

    /**
     * <pre>
     * List of valid master versions.
     * </pre>
     *
     * <code>repeated string valid_master_versions = 6;</code>
     */
    public function setValidMasterVersions(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->valid_master_versions = $arr;
    }

}

