<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/genomics/v1alpha2/pipelines.proto

namespace Google\Genomics\V1alpha2;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * The request to run a pipeline. If `pipelineId` is specified, it
 * refers to a saved pipeline created with CreatePipeline and set as
 * the `pipelineId` of the returned Pipeline object. If
 * `ephemeralPipeline` is specified, that pipeline is run once
 * with the given args and not saved. It is an error to specify both
 * `pipelineId` and `ephemeralPipeline`. `pipelineArgs`
 * must be specified.
 * </pre>
 *
 * Protobuf type <code>google.genomics.v1alpha2.RunPipelineRequest</code>
 */
class RunPipelineRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * The arguments to use when running this pipeline.
     * </pre>
     *
     * <code>.google.genomics.v1alpha2.RunPipelineArgs pipeline_args = 3;</code>
     */
    private $pipeline_args = null;
    protected $pipeline;

    public function __construct() {
        \GPBMetadata\Google\Genomics\V1Alpha2\Pipelines::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * The already created pipeline to run.
     * </pre>
     *
     * <code>string pipeline_id = 1;</code>
     */
    public function getPipelineId()
    {
        return $this->readOneof(1);
    }

    /**
     * <pre>
     * The already created pipeline to run.
     * </pre>
     *
     * <code>string pipeline_id = 1;</code>
     */
    public function setPipelineId($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(1, $var);
    }

    /**
     * <pre>
     * A new pipeline object to run once and then delete.
     * </pre>
     *
     * <code>.google.genomics.v1alpha2.Pipeline ephemeral_pipeline = 2;</code>
     */
    public function getEphemeralPipeline()
    {
        return $this->readOneof(2);
    }

    /**
     * <pre>
     * A new pipeline object to run once and then delete.
     * </pre>
     *
     * <code>.google.genomics.v1alpha2.Pipeline ephemeral_pipeline = 2;</code>
     */
    public function setEphemeralPipeline(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Genomics\V1alpha2\Pipeline::class);
        $this->writeOneof(2, $var);
    }

    /**
     * <pre>
     * The arguments to use when running this pipeline.
     * </pre>
     *
     * <code>.google.genomics.v1alpha2.RunPipelineArgs pipeline_args = 3;</code>
     */
    public function getPipelineArgs()
    {
        return $this->pipeline_args;
    }

    /**
     * <pre>
     * The arguments to use when running this pipeline.
     * </pre>
     *
     * <code>.google.genomics.v1alpha2.RunPipelineArgs pipeline_args = 3;</code>
     */
    public function setPipelineArgs(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Genomics\V1alpha2\RunPipelineArgs::class);
        $this->pipeline_args = $var;
    }

    public function getPipeline()
    {
        return $this->pipeline;
    }

}

