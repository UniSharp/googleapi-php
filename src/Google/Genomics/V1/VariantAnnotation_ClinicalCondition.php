<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/genomics/v1/annotations.proto

namespace Google\Genomics\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>google.genomics.v1.VariantAnnotation.ClinicalCondition</code>
 */
class VariantAnnotation_ClinicalCondition extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * A set of names for the condition.
     * </pre>
     *
     * <code>repeated string names = 1;</code>
     */
    private $names;
    /**
     * <pre>
     * The set of external IDs for this condition.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
     */
    private $external_ids;
    /**
     * <pre>
     * The MedGen concept id associated with this gene.
     * Search for these IDs at http://www.ncbi.nlm.nih.gov/medgen/
     * </pre>
     *
     * <code>string concept_id = 3;</code>
     */
    private $concept_id = '';
    /**
     * <pre>
     * The OMIM id for this condition.
     * Search for these IDs at http://omim.org/
     * </pre>
     *
     * <code>string omim_id = 4;</code>
     */
    private $omim_id = '';

    public function __construct() {
        \GPBMetadata\Google\Genomics\V1\Annotations::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * A set of names for the condition.
     * </pre>
     *
     * <code>repeated string names = 1;</code>
     */
    public function getNames()
    {
        return $this->names;
    }

    /**
     * <pre>
     * A set of names for the condition.
     * </pre>
     *
     * <code>repeated string names = 1;</code>
     */
    public function setNames(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->names = $var;
    }

    /**
     * <pre>
     * The set of external IDs for this condition.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
     */
    public function getExternalIds()
    {
        return $this->external_ids;
    }

    /**
     * <pre>
     * The set of external IDs for this condition.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.ExternalId external_ids = 2;</code>
     */
    public function setExternalIds(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Genomics\V1\ExternalId::class);
        $this->external_ids = $var;
    }

    /**
     * <pre>
     * The MedGen concept id associated with this gene.
     * Search for these IDs at http://www.ncbi.nlm.nih.gov/medgen/
     * </pre>
     *
     * <code>string concept_id = 3;</code>
     */
    public function getConceptId()
    {
        return $this->concept_id;
    }

    /**
     * <pre>
     * The MedGen concept id associated with this gene.
     * Search for these IDs at http://www.ncbi.nlm.nih.gov/medgen/
     * </pre>
     *
     * <code>string concept_id = 3;</code>
     */
    public function setConceptId($var)
    {
        GPBUtil::checkString($var, True);
        $this->concept_id = $var;
    }

    /**
     * <pre>
     * The OMIM id for this condition.
     * Search for these IDs at http://omim.org/
     * </pre>
     *
     * <code>string omim_id = 4;</code>
     */
    public function getOmimId()
    {
        return $this->omim_id;
    }

    /**
     * <pre>
     * The OMIM id for this condition.
     * Search for these IDs at http://omim.org/
     * </pre>
     *
     * <code>string omim_id = 4;</code>
     */
    public function setOmimId($var)
    {
        GPBUtil::checkString($var, True);
        $this->omim_id = $var;
    }

}

