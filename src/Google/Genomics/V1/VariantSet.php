<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/genomics/v1/variants.proto

namespace Google\Genomics\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * A variant set is a collection of call sets and variants. It contains summary
 * statistics of those contents. A variant set belongs to a dataset.
 * For more genomics resource definitions, see [Fundamentals of Google
 * Genomics](https://cloud.google.com/genomics/fundamentals-of-google-genomics)
 * </pre>
 *
 * Protobuf type <code>google.genomics.v1.VariantSet</code>
 */
class VariantSet extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * The dataset to which this variant set belongs.
     * </pre>
     *
     * <code>string dataset_id = 1;</code>
     */
    private $dataset_id = '';
    /**
     * <pre>
     * The server-generated variant set ID, unique across all variant sets.
     * </pre>
     *
     * <code>string id = 2;</code>
     */
    private $id = '';
    /**
     * <pre>
     * The reference set to which the variant set is mapped. The reference set
     * describes the alignment provenance of the variant set, while the
     * `referenceBounds` describe the shape of the actual variant data. The
     * reference set's reference names are a superset of those found in the
     * `referenceBounds`.
     * For example, given a variant set that is mapped to the GRCh38 reference set
     * and contains a single variant on reference 'X', `referenceBounds` would
     * contain only an entry for 'X', while the associated reference set
     * enumerates all possible references: '1', '2', 'X', 'Y', 'MT', etc.
     * </pre>
     *
     * <code>string reference_set_id = 6;</code>
     */
    private $reference_set_id = '';
    /**
     * <pre>
     * A list of all references used by the variants in a variant set
     * with associated coordinate upper bounds for each one.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.ReferenceBound reference_bounds = 5;</code>
     */
    private $reference_bounds;
    /**
     * <pre>
     * The metadata associated with this variant set.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantSetMetadata metadata = 4;</code>
     */
    private $metadata;
    /**
     * <pre>
     * User-specified, mutable name.
     * </pre>
     *
     * <code>string name = 7;</code>
     */
    private $name = '';
    /**
     * <pre>
     * A textual description of this variant set.
     * </pre>
     *
     * <code>string description = 8;</code>
     */
    private $description = '';

    public function __construct() {
        \GPBMetadata\Google\Genomics\V1\Variants::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * The dataset to which this variant set belongs.
     * </pre>
     *
     * <code>string dataset_id = 1;</code>
     */
    public function getDatasetId()
    {
        return $this->dataset_id;
    }

    /**
     * <pre>
     * The dataset to which this variant set belongs.
     * </pre>
     *
     * <code>string dataset_id = 1;</code>
     */
    public function setDatasetId($var)
    {
        GPBUtil::checkString($var, True);
        $this->dataset_id = $var;
    }

    /**
     * <pre>
     * The server-generated variant set ID, unique across all variant sets.
     * </pre>
     *
     * <code>string id = 2;</code>
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * <pre>
     * The server-generated variant set ID, unique across all variant sets.
     * </pre>
     *
     * <code>string id = 2;</code>
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;
    }

    /**
     * <pre>
     * The reference set to which the variant set is mapped. The reference set
     * describes the alignment provenance of the variant set, while the
     * `referenceBounds` describe the shape of the actual variant data. The
     * reference set's reference names are a superset of those found in the
     * `referenceBounds`.
     * For example, given a variant set that is mapped to the GRCh38 reference set
     * and contains a single variant on reference 'X', `referenceBounds` would
     * contain only an entry for 'X', while the associated reference set
     * enumerates all possible references: '1', '2', 'X', 'Y', 'MT', etc.
     * </pre>
     *
     * <code>string reference_set_id = 6;</code>
     */
    public function getReferenceSetId()
    {
        return $this->reference_set_id;
    }

    /**
     * <pre>
     * The reference set to which the variant set is mapped. The reference set
     * describes the alignment provenance of the variant set, while the
     * `referenceBounds` describe the shape of the actual variant data. The
     * reference set's reference names are a superset of those found in the
     * `referenceBounds`.
     * For example, given a variant set that is mapped to the GRCh38 reference set
     * and contains a single variant on reference 'X', `referenceBounds` would
     * contain only an entry for 'X', while the associated reference set
     * enumerates all possible references: '1', '2', 'X', 'Y', 'MT', etc.
     * </pre>
     *
     * <code>string reference_set_id = 6;</code>
     */
    public function setReferenceSetId($var)
    {
        GPBUtil::checkString($var, True);
        $this->reference_set_id = $var;
    }

    /**
     * <pre>
     * A list of all references used by the variants in a variant set
     * with associated coordinate upper bounds for each one.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.ReferenceBound reference_bounds = 5;</code>
     */
    public function getReferenceBounds()
    {
        return $this->reference_bounds;
    }

    /**
     * <pre>
     * A list of all references used by the variants in a variant set
     * with associated coordinate upper bounds for each one.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.ReferenceBound reference_bounds = 5;</code>
     */
    public function setReferenceBounds(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Genomics\V1\ReferenceBound::class);
        $this->reference_bounds = $arr;
    }

    /**
     * <pre>
     * The metadata associated with this variant set.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantSetMetadata metadata = 4;</code>
     */
    public function getMetadata()
    {
        return $this->metadata;
    }

    /**
     * <pre>
     * The metadata associated with this variant set.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.VariantSetMetadata metadata = 4;</code>
     */
    public function setMetadata(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Genomics\V1\VariantSetMetadata::class);
        $this->metadata = $arr;
    }

    /**
     * <pre>
     * User-specified, mutable name.
     * </pre>
     *
     * <code>string name = 7;</code>
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * <pre>
     * User-specified, mutable name.
     * </pre>
     *
     * <code>string name = 7;</code>
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;
    }

    /**
     * <pre>
     * A textual description of this variant set.
     * </pre>
     *
     * <code>string description = 8;</code>
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * <pre>
     * A textual description of this variant set.
     * </pre>
     *
     * <code>string description = 8;</code>
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;
    }

}

