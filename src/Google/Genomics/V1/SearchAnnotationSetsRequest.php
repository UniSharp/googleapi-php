<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/genomics/v1/annotations.proto

namespace Google\Genomics\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Protobuf type <code>google.genomics.v1.SearchAnnotationSetsRequest</code>
 */
class SearchAnnotationSetsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * Required. The dataset IDs to search within. Caller must have `READ` access
     * to these datasets.
     * </pre>
     *
     * <code>repeated string dataset_ids = 1;</code>
     */
    private $dataset_ids;
    /**
     * <pre>
     * If specified, only annotation sets associated with the given reference set
     * are returned.
     * </pre>
     *
     * <code>string reference_set_id = 2;</code>
     */
    private $reference_set_id = '';
    /**
     * <pre>
     * Only return annotations sets for which a substring of the name matches this
     * string (case insensitive).
     * </pre>
     *
     * <code>string name = 3;</code>
     */
    private $name = '';
    /**
     * <pre>
     * If specified, only annotation sets that have any of these types are
     * returned.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.AnnotationType types = 4;</code>
     */
    private $types;
    /**
     * <pre>
     * The continuation token, which is used to page through large result sets.
     * To get the next page of results, set this parameter to the value of
     * `nextPageToken` from the previous response.
     * </pre>
     *
     * <code>string page_token = 5;</code>
     */
    private $page_token = '';
    /**
     * <pre>
     * The maximum number of results to return in a single page. If unspecified,
     * defaults to 128. The maximum value is 1024.
     * </pre>
     *
     * <code>int32 page_size = 6;</code>
     */
    private $page_size = 0;

    public function __construct() {
        \GPBMetadata\Google\Genomics\V1\Annotations::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * Required. The dataset IDs to search within. Caller must have `READ` access
     * to these datasets.
     * </pre>
     *
     * <code>repeated string dataset_ids = 1;</code>
     */
    public function getDatasetIds()
    {
        return $this->dataset_ids;
    }

    /**
     * <pre>
     * Required. The dataset IDs to search within. Caller must have `READ` access
     * to these datasets.
     * </pre>
     *
     * <code>repeated string dataset_ids = 1;</code>
     */
    public function setDatasetIds(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->dataset_ids = $var;
    }

    /**
     * <pre>
     * If specified, only annotation sets associated with the given reference set
     * are returned.
     * </pre>
     *
     * <code>string reference_set_id = 2;</code>
     */
    public function getReferenceSetId()
    {
        return $this->reference_set_id;
    }

    /**
     * <pre>
     * If specified, only annotation sets associated with the given reference set
     * are returned.
     * </pre>
     *
     * <code>string reference_set_id = 2;</code>
     */
    public function setReferenceSetId($var)
    {
        GPBUtil::checkString($var, True);
        $this->reference_set_id = $var;
    }

    /**
     * <pre>
     * Only return annotations sets for which a substring of the name matches this
     * string (case insensitive).
     * </pre>
     *
     * <code>string name = 3;</code>
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * <pre>
     * Only return annotations sets for which a substring of the name matches this
     * string (case insensitive).
     * </pre>
     *
     * <code>string name = 3;</code>
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;
    }

    /**
     * <pre>
     * If specified, only annotation sets that have any of these types are
     * returned.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.AnnotationType types = 4;</code>
     */
    public function getTypes()
    {
        return $this->types;
    }

    /**
     * <pre>
     * If specified, only annotation sets that have any of these types are
     * returned.
     * </pre>
     *
     * <code>repeated .google.genomics.v1.AnnotationType types = 4;</code>
     */
    public function setTypes(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::ENUM, Google\Genomics\V1\AnnotationType::class);
        $this->types = $var;
    }

    /**
     * <pre>
     * The continuation token, which is used to page through large result sets.
     * To get the next page of results, set this parameter to the value of
     * `nextPageToken` from the previous response.
     * </pre>
     *
     * <code>string page_token = 5;</code>
     */
    public function getPageToken()
    {
        return $this->page_token;
    }

    /**
     * <pre>
     * The continuation token, which is used to page through large result sets.
     * To get the next page of results, set this parameter to the value of
     * `nextPageToken` from the previous response.
     * </pre>
     *
     * <code>string page_token = 5;</code>
     */
    public function setPageToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->page_token = $var;
    }

    /**
     * <pre>
     * The maximum number of results to return in a single page. If unspecified,
     * defaults to 128. The maximum value is 1024.
     * </pre>
     *
     * <code>int32 page_size = 6;</code>
     */
    public function getPageSize()
    {
        return $this->page_size;
    }

    /**
     * <pre>
     * The maximum number of results to return in a single page. If unspecified,
     * defaults to 128. The maximum value is 1024.
     * </pre>
     *
     * <code>int32 page_size = 6;</code>
     */
    public function setPageSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->page_size = $var;
    }

}

