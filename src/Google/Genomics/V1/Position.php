<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/genomics/v1/position.proto

namespace Google\Genomics\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * An abstraction for referring to a genomic position, in relation to some
 * already known reference. For now, represents a genomic position as a
 * reference name, a base number on that reference (0-based), and a
 * determination of forward or reverse strand.
 * </pre>
 *
 * Protobuf type <code>google.genomics.v1.Position</code>
 */
class Position extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * The name of the reference in whatever reference set is being used.
     * </pre>
     *
     * <code>string reference_name = 1;</code>
     */
    private $reference_name = '';
    /**
     * <pre>
     * The 0-based offset from the start of the forward strand for that reference.
     * </pre>
     *
     * <code>int64 position = 2;</code>
     */
    private $position = 0;
    /**
     * <pre>
     * Whether this position is on the reverse strand, as opposed to the forward
     * strand.
     * </pre>
     *
     * <code>bool reverse_strand = 3;</code>
     */
    private $reverse_strand = false;

    public function __construct() {
        \GPBMetadata\Google\Genomics\V1\Position::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * The name of the reference in whatever reference set is being used.
     * </pre>
     *
     * <code>string reference_name = 1;</code>
     */
    public function getReferenceName()
    {
        return $this->reference_name;
    }

    /**
     * <pre>
     * The name of the reference in whatever reference set is being used.
     * </pre>
     *
     * <code>string reference_name = 1;</code>
     */
    public function setReferenceName($var)
    {
        GPBUtil::checkString($var, True);
        $this->reference_name = $var;
    }

    /**
     * <pre>
     * The 0-based offset from the start of the forward strand for that reference.
     * </pre>
     *
     * <code>int64 position = 2;</code>
     */
    public function getPosition()
    {
        return $this->position;
    }

    /**
     * <pre>
     * The 0-based offset from the start of the forward strand for that reference.
     * </pre>
     *
     * <code>int64 position = 2;</code>
     */
    public function setPosition($var)
    {
        GPBUtil::checkInt64($var);
        $this->position = $var;
    }

    /**
     * <pre>
     * Whether this position is on the reverse strand, as opposed to the forward
     * strand.
     * </pre>
     *
     * <code>bool reverse_strand = 3;</code>
     */
    public function getReverseStrand()
    {
        return $this->reverse_strand;
    }

    /**
     * <pre>
     * Whether this position is on the reverse strand, as opposed to the forward
     * strand.
     * </pre>
     *
     * <code>bool reverse_strand = 3;</code>
     */
    public function setReverseStrand($var)
    {
        GPBUtil::checkBool($var);
        $this->reverse_strand = $var;
    }

}

