<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/cloudbuild/v1/cloudbuild.proto

namespace Google\Devtools\Cloudbuild\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Source describes the location of the source in a supported storage
 * service.
 * </pre>
 *
 * Protobuf type <code>google.devtools.cloudbuild.v1.Source</code>
 */
class Source extends \Google\Protobuf\Internal\Message
{
    protected $source;

    public function __construct() {
        \GPBMetadata\Google\Devtools\Cloudbuild\V1\Cloudbuild::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * If provided, get the source from this location in in Google Cloud
     * Storage.
     * </pre>
     *
     * <code>.google.devtools.cloudbuild.v1.StorageSource storage_source = 2;</code>
     */
    public function getStorageSource()
    {
        return $this->readOneof(2);
    }

    /**
     * <pre>
     * If provided, get the source from this location in in Google Cloud
     * Storage.
     * </pre>
     *
     * <code>.google.devtools.cloudbuild.v1.StorageSource storage_source = 2;</code>
     */
    public function setStorageSource(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Cloudbuild\V1\StorageSource::class);
        $this->writeOneof(2, $var);
    }

    /**
     * <pre>
     * If provided, get source from this location in a Cloud Repo.
     * </pre>
     *
     * <code>.google.devtools.cloudbuild.v1.RepoSource repo_source = 3;</code>
     */
    public function getRepoSource()
    {
        return $this->readOneof(3);
    }

    /**
     * <pre>
     * If provided, get source from this location in a Cloud Repo.
     * </pre>
     *
     * <code>.google.devtools.cloudbuild.v1.RepoSource repo_source = 3;</code>
     */
    public function setRepoSource(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Devtools\Cloudbuild\V1\RepoSource::class);
        $this->writeOneof(3, $var);
    }

    public function getSource()
    {
        return $this->whichOneof("source");
    }

}

