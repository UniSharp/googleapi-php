<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/devtools/build/v1/build_events.proto

namespace Google\Devtools\Build\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Textual output written to standard output or standard error.
 * </pre>
 *
 * Protobuf type <code>google.devtools.build.v1.BuildEvent.ConsoleOutput</code>
 */
class BuildEvent_ConsoleOutput extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * The output stream type.
     * </pre>
     *
     * <code>.google.devtools.build.v1.ConsoleOutputStream type = 1;</code>
     */
    private $type = 0;
    protected $output;

    public function __construct() {
        \GPBMetadata\Google\Devtools\Build\V1\BuildEvents::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * The output stream type.
     * </pre>
     *
     * <code>.google.devtools.build.v1.ConsoleOutputStream type = 1;</code>
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * <pre>
     * The output stream type.
     * </pre>
     *
     * <code>.google.devtools.build.v1.ConsoleOutputStream type = 1;</code>
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Google\Devtools\Build\V1\ConsoleOutputStream::class);
        $this->type = $var;
    }

    /**
     * <pre>
     * Regular UTF-8 output; normal text.
     * </pre>
     *
     * <code>string text_output = 2;</code>
     */
    public function getTextOutput()
    {
        return $this->readOneof(2);
    }

    /**
     * <pre>
     * Regular UTF-8 output; normal text.
     * </pre>
     *
     * <code>string text_output = 2;</code>
     */
    public function setTextOutput($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(2, $var);
    }

    /**
     * <pre>
     * Used if the output is not UTF-8 text (for example, a binary proto).
     * </pre>
     *
     * <code>bytes binary_output = 3;</code>
     */
    public function getBinaryOutput()
    {
        return $this->readOneof(3);
    }

    /**
     * <pre>
     * Used if the output is not UTF-8 text (for example, a binary proto).
     * </pre>
     *
     * <code>bytes binary_output = 3;</code>
     */
    public function setBinaryOutput($var)
    {
        GPBUtil::checkString($var, False);
        $this->writeOneof(3, $var);
    }

    public function getOutput()
    {
        return $this->whichOneof("output");
    }

}

