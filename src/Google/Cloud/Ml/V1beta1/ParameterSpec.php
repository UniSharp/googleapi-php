<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/ml/v1beta1/job_service.proto

namespace Google\Cloud\Ml\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Represents a single hyperparameter to optimize.
 * </pre>
 *
 * Protobuf type <code>google.cloud.ml.v1beta1.ParameterSpec</code>
 */
class ParameterSpec extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * Required. The parameter name must be unique amongst all ParameterConfigs in
     * a HyperparameterSpec message. E.g., "learning_rate".
     * </pre>
     *
     * <code>string parameter_name = 1;</code>
     */
    private $parameter_name = '';
    /**
     * <pre>
     * Required. The type of the parameter.
     * </pre>
     *
     * <code>.google.cloud.ml.v1beta1.ParameterSpec.ParameterType type = 4;</code>
     */
    private $type = 0;
    /**
     * <pre>
     * Required if type is `DOUBLE` or `INTEGER`. This field
     * should be unset if type is `CATEGORICAL`. This value should be integers if
     * type is INTEGER.
     * </pre>
     *
     * <code>double min_value = 2;</code>
     */
    private $min_value = 0.0;
    /**
     * <pre>
     * Required if typeis `DOUBLE` or `INTEGER`. This field
     * should be unset if type is `CATEGORICAL`. This value should be integers if
     * type is `INTEGER`.
     * </pre>
     *
     * <code>double max_value = 3;</code>
     */
    private $max_value = 0.0;
    /**
     * <pre>
     * Required if type is `CATEGORICAL`. The list of possible categories.
     * </pre>
     *
     * <code>repeated string categorical_values = 5;</code>
     */
    private $categorical_values;
    /**
     * <pre>
     * Required if type is `DISCRETE`.
     * A list of feasible points.
     * The list should be in strictly increasing order. For instance, this
     * parameter might have possible settings of 1.5, 2.5, and 4.0. This list
     * should not contain more than 1,000 values.
     * </pre>
     *
     * <code>repeated double discrete_values = 6;</code>
     */
    private $discrete_values;
    /**
     * <pre>
     * Optional. How the parameter should be scaled to the hypercube.
     * Leave unset for categorical parameters.
     * Some kind of scaling is strongly recommended for real or integral
     * parameters (e.g., `UNIT_LINEAR_SCALE`).
     * </pre>
     *
     * <code>.google.cloud.ml.v1beta1.ParameterSpec.ScaleType scale_type = 7;</code>
     */
    private $scale_type = 0;

    public function __construct() {
        \GPBMetadata\Google\Cloud\Ml\V1Beta1\JobService::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * Required. The parameter name must be unique amongst all ParameterConfigs in
     * a HyperparameterSpec message. E.g., "learning_rate".
     * </pre>
     *
     * <code>string parameter_name = 1;</code>
     */
    public function getParameterName()
    {
        return $this->parameter_name;
    }

    /**
     * <pre>
     * Required. The parameter name must be unique amongst all ParameterConfigs in
     * a HyperparameterSpec message. E.g., "learning_rate".
     * </pre>
     *
     * <code>string parameter_name = 1;</code>
     */
    public function setParameterName($var)
    {
        GPBUtil::checkString($var, True);
        $this->parameter_name = $var;
    }

    /**
     * <pre>
     * Required. The type of the parameter.
     * </pre>
     *
     * <code>.google.cloud.ml.v1beta1.ParameterSpec.ParameterType type = 4;</code>
     */
    public function getType()
    {
        return $this->type;
    }

    /**
     * <pre>
     * Required. The type of the parameter.
     * </pre>
     *
     * <code>.google.cloud.ml.v1beta1.ParameterSpec.ParameterType type = 4;</code>
     */
    public function setType($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\Ml\V1beta1\ParameterSpec_ParameterType::class);
        $this->type = $var;
    }

    /**
     * <pre>
     * Required if type is `DOUBLE` or `INTEGER`. This field
     * should be unset if type is `CATEGORICAL`. This value should be integers if
     * type is INTEGER.
     * </pre>
     *
     * <code>double min_value = 2;</code>
     */
    public function getMinValue()
    {
        return $this->min_value;
    }

    /**
     * <pre>
     * Required if type is `DOUBLE` or `INTEGER`. This field
     * should be unset if type is `CATEGORICAL`. This value should be integers if
     * type is INTEGER.
     * </pre>
     *
     * <code>double min_value = 2;</code>
     */
    public function setMinValue($var)
    {
        GPBUtil::checkDouble($var);
        $this->min_value = $var;
    }

    /**
     * <pre>
     * Required if typeis `DOUBLE` or `INTEGER`. This field
     * should be unset if type is `CATEGORICAL`. This value should be integers if
     * type is `INTEGER`.
     * </pre>
     *
     * <code>double max_value = 3;</code>
     */
    public function getMaxValue()
    {
        return $this->max_value;
    }

    /**
     * <pre>
     * Required if typeis `DOUBLE` or `INTEGER`. This field
     * should be unset if type is `CATEGORICAL`. This value should be integers if
     * type is `INTEGER`.
     * </pre>
     *
     * <code>double max_value = 3;</code>
     */
    public function setMaxValue($var)
    {
        GPBUtil::checkDouble($var);
        $this->max_value = $var;
    }

    /**
     * <pre>
     * Required if type is `CATEGORICAL`. The list of possible categories.
     * </pre>
     *
     * <code>repeated string categorical_values = 5;</code>
     */
    public function getCategoricalValues()
    {
        return $this->categorical_values;
    }

    /**
     * <pre>
     * Required if type is `CATEGORICAL`. The list of possible categories.
     * </pre>
     *
     * <code>repeated string categorical_values = 5;</code>
     */
    public function setCategoricalValues(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->categorical_values = $arr;
    }

    /**
     * <pre>
     * Required if type is `DISCRETE`.
     * A list of feasible points.
     * The list should be in strictly increasing order. For instance, this
     * parameter might have possible settings of 1.5, 2.5, and 4.0. This list
     * should not contain more than 1,000 values.
     * </pre>
     *
     * <code>repeated double discrete_values = 6;</code>
     */
    public function getDiscreteValues()
    {
        return $this->discrete_values;
    }

    /**
     * <pre>
     * Required if type is `DISCRETE`.
     * A list of feasible points.
     * The list should be in strictly increasing order. For instance, this
     * parameter might have possible settings of 1.5, 2.5, and 4.0. This list
     * should not contain more than 1,000 values.
     * </pre>
     *
     * <code>repeated double discrete_values = 6;</code>
     */
    public function setDiscreteValues(&$var)
    {
        $arr = GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::DOUBLE);
        $this->discrete_values = $arr;
    }

    /**
     * <pre>
     * Optional. How the parameter should be scaled to the hypercube.
     * Leave unset for categorical parameters.
     * Some kind of scaling is strongly recommended for real or integral
     * parameters (e.g., `UNIT_LINEAR_SCALE`).
     * </pre>
     *
     * <code>.google.cloud.ml.v1beta1.ParameterSpec.ScaleType scale_type = 7;</code>
     */
    public function getScaleType()
    {
        return $this->scale_type;
    }

    /**
     * <pre>
     * Optional. How the parameter should be scaled to the hypercube.
     * Leave unset for categorical parameters.
     * Some kind of scaling is strongly recommended for real or integral
     * parameters (e.g., `UNIT_LINEAR_SCALE`).
     * </pre>
     *
     * <code>.google.cloud.ml.v1beta1.ParameterSpec.ScaleType scale_type = 7;</code>
     */
    public function setScaleType($var)
    {
        GPBUtil::checkEnum($var, \Google\Cloud\Ml\V1beta1\ParameterSpec_ScaleType::class);
        $this->scale_type = $var;
    }

}

