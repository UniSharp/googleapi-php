<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/ml/v1/model_service.proto

namespace Google\Cloud\Ml\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Represents a version of the model.
 * Each version is a trained model deployed in the cloud, ready to handle
 * prediction requests. A model can have multiple versions. You can get
 * information about all of the versions of a given model by calling
 * [projects.models.versions.list](/ml/reference/rest/v1/projects.models.versions/list).
 * </pre>
 *
 * Protobuf type <code>google.cloud.ml.v1.Version</code>
 */
class Version extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * Required.The name specified for the version when it was created.
     * The version name must be unique within the model it is created in.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    private $name = '';
    /**
     * <pre>
     * Optional. The description specified for the version when it was created.
     * </pre>
     *
     * <code>string description = 2;</code>
     */
    private $description = '';
    /**
     * <pre>
     * Output only. If true, this version will be used to handle prediction
     * requests that do not specify a version.
     * You can change the default version by calling
     * [projects.methods.versions.setDefault](/ml/reference/rest/v1/projects.models.versions/setDefault).
     * </pre>
     *
     * <code>bool is_default = 3;</code>
     */
    private $is_default = false;
    /**
     * <pre>
     * Required. The Google Cloud Storage location of the trained model used to
     * create the version. See the
     * [overview of model deployment](/ml/docs/concepts/deployment-overview) for
     * more informaiton.
     * When passing Version to
     * [projects.models.versions.create](/ml/reference/rest/v1/projects.models.versions/create)
     * the model service uses the specified location as the source of the model.
     * Once deployed, the model version is hosted by the prediction service, so
     * this location is useful only as a historical record.
     * </pre>
     *
     * <code>string deployment_uri = 4;</code>
     */
    private $deployment_uri = '';
    /**
     * <pre>
     * Output only. The time the version was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 5;</code>
     */
    private $create_time = null;
    /**
     * <pre>
     * Output only. The time the version was last used for prediction.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_use_time = 6;</code>
     */
    private $last_use_time = null;
    /**
     * <pre>
     * Optional. The Google Cloud ML runtime version to use for this deployment.
     * If not set, Google Cloud ML will choose a version.
     * </pre>
     *
     * <code>string runtime_version = 8;</code>
     */
    private $runtime_version = '';
    /**
     * <pre>
     * Optional. Manually select the number of nodes to use for serving the
     * model. If unset (i.e., by default), the number of nodes used to serve
     * the model automatically scales with traffic. However, care should be
     * taken to ramp up traffic according to the model's ability to scale. If
     * your model needs to handle bursts of traffic beyond it's ability to
     * scale, it is recommended you set this field appropriately.
     * </pre>
     *
     * <code>.google.cloud.ml.v1.ManualScaling manual_scaling = 9;</code>
     */
    private $manual_scaling = null;

    public function __construct() {
        \GPBMetadata\Google\Cloud\Ml\V1\ModelService::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * Required.The name specified for the version when it was created.
     * The version name must be unique within the model it is created in.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * <pre>
     * Required.The name specified for the version when it was created.
     * The version name must be unique within the model it is created in.
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;
    }

    /**
     * <pre>
     * Optional. The description specified for the version when it was created.
     * </pre>
     *
     * <code>string description = 2;</code>
     */
    public function getDescription()
    {
        return $this->description;
    }

    /**
     * <pre>
     * Optional. The description specified for the version when it was created.
     * </pre>
     *
     * <code>string description = 2;</code>
     */
    public function setDescription($var)
    {
        GPBUtil::checkString($var, True);
        $this->description = $var;
    }

    /**
     * <pre>
     * Output only. If true, this version will be used to handle prediction
     * requests that do not specify a version.
     * You can change the default version by calling
     * [projects.methods.versions.setDefault](/ml/reference/rest/v1/projects.models.versions/setDefault).
     * </pre>
     *
     * <code>bool is_default = 3;</code>
     */
    public function getIsDefault()
    {
        return $this->is_default;
    }

    /**
     * <pre>
     * Output only. If true, this version will be used to handle prediction
     * requests that do not specify a version.
     * You can change the default version by calling
     * [projects.methods.versions.setDefault](/ml/reference/rest/v1/projects.models.versions/setDefault).
     * </pre>
     *
     * <code>bool is_default = 3;</code>
     */
    public function setIsDefault($var)
    {
        GPBUtil::checkBool($var);
        $this->is_default = $var;
    }

    /**
     * <pre>
     * Required. The Google Cloud Storage location of the trained model used to
     * create the version. See the
     * [overview of model deployment](/ml/docs/concepts/deployment-overview) for
     * more informaiton.
     * When passing Version to
     * [projects.models.versions.create](/ml/reference/rest/v1/projects.models.versions/create)
     * the model service uses the specified location as the source of the model.
     * Once deployed, the model version is hosted by the prediction service, so
     * this location is useful only as a historical record.
     * </pre>
     *
     * <code>string deployment_uri = 4;</code>
     */
    public function getDeploymentUri()
    {
        return $this->deployment_uri;
    }

    /**
     * <pre>
     * Required. The Google Cloud Storage location of the trained model used to
     * create the version. See the
     * [overview of model deployment](/ml/docs/concepts/deployment-overview) for
     * more informaiton.
     * When passing Version to
     * [projects.models.versions.create](/ml/reference/rest/v1/projects.models.versions/create)
     * the model service uses the specified location as the source of the model.
     * Once deployed, the model version is hosted by the prediction service, so
     * this location is useful only as a historical record.
     * </pre>
     *
     * <code>string deployment_uri = 4;</code>
     */
    public function setDeploymentUri($var)
    {
        GPBUtil::checkString($var, True);
        $this->deployment_uri = $var;
    }

    /**
     * <pre>
     * Output only. The time the version was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 5;</code>
     */
    public function getCreateTime()
    {
        return $this->create_time;
    }

    /**
     * <pre>
     * Output only. The time the version was created.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp create_time = 5;</code>
     */
    public function setCreateTime(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->create_time = $var;
    }

    /**
     * <pre>
     * Output only. The time the version was last used for prediction.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_use_time = 6;</code>
     */
    public function getLastUseTime()
    {
        return $this->last_use_time;
    }

    /**
     * <pre>
     * Output only. The time the version was last used for prediction.
     * </pre>
     *
     * <code>.google.protobuf.Timestamp last_use_time = 6;</code>
     */
    public function setLastUseTime(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Protobuf\Timestamp::class);
        $this->last_use_time = $var;
    }

    /**
     * <pre>
     * Optional. The Google Cloud ML runtime version to use for this deployment.
     * If not set, Google Cloud ML will choose a version.
     * </pre>
     *
     * <code>string runtime_version = 8;</code>
     */
    public function getRuntimeVersion()
    {
        return $this->runtime_version;
    }

    /**
     * <pre>
     * Optional. The Google Cloud ML runtime version to use for this deployment.
     * If not set, Google Cloud ML will choose a version.
     * </pre>
     *
     * <code>string runtime_version = 8;</code>
     */
    public function setRuntimeVersion($var)
    {
        GPBUtil::checkString($var, True);
        $this->runtime_version = $var;
    }

    /**
     * <pre>
     * Optional. Manually select the number of nodes to use for serving the
     * model. If unset (i.e., by default), the number of nodes used to serve
     * the model automatically scales with traffic. However, care should be
     * taken to ramp up traffic according to the model's ability to scale. If
     * your model needs to handle bursts of traffic beyond it's ability to
     * scale, it is recommended you set this field appropriately.
     * </pre>
     *
     * <code>.google.cloud.ml.v1.ManualScaling manual_scaling = 9;</code>
     */
    public function getManualScaling()
    {
        return $this->manual_scaling;
    }

    /**
     * <pre>
     * Optional. Manually select the number of nodes to use for serving the
     * model. If unset (i.e., by default), the number of nodes used to serve
     * the model automatically scales with traffic. However, care should be
     * taken to ramp up traffic according to the model's ability to scale. If
     * your model needs to handle bursts of traffic beyond it's ability to
     * scale, it is recommended you set this field appropriately.
     * </pre>
     *
     * <code>.google.cloud.ml.v1.ManualScaling manual_scaling = 9;</code>
     */
    public function setManualScaling(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Ml\V1\ManualScaling::class);
        $this->manual_scaling = $var;
    }

}

