<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/support/common.proto

namespace Google\Cloud\Support\Common;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Represents the category of issue (Technical or Non-Technical)
 * reported through a support case.
 * </pre>
 *
 * Protobuf type <code>google.cloud.support.common.IssueTaxonomy.Category</code>
 */
class IssueTaxonomy_Category extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * User friendly name of this category.
     * </pre>
     *
     * <code>string display_name = 1;</code>
     */
    private $display_name = '';
    /**
     * <pre>
     * Map of product components under this category.
     * </pre>
     *
     * <code>map&lt;string, .google.cloud.support.common.IssueTaxonomy.Component&gt; components = 2;</code>
     */
    private $components;

    public function __construct() {
        \GPBMetadata\Google\Cloud\Support\Common::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * User friendly name of this category.
     * </pre>
     *
     * <code>string display_name = 1;</code>
     */
    public function getDisplayName()
    {
        return $this->display_name;
    }

    /**
     * <pre>
     * User friendly name of this category.
     * </pre>
     *
     * <code>string display_name = 1;</code>
     */
    public function setDisplayName($var)
    {
        GPBUtil::checkString($var, True);
        $this->display_name = $var;
    }

    /**
     * <pre>
     * Map of product components under this category.
     * </pre>
     *
     * <code>map&lt;string, .google.cloud.support.common.IssueTaxonomy.Component&gt; components = 2;</code>
     */
    public function getComponents()
    {
        return $this->components;
    }

    /**
     * <pre>
     * Map of product components under this category.
     * </pre>
     *
     * <code>map&lt;string, .google.cloud.support.common.IssueTaxonomy.Component&gt; components = 2;</code>
     */
    public function setComponents(&$var)
    {
        $this->components = $var;
    }

}

