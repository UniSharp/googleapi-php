<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/dataproc/v1/clusters.proto

namespace Google\Cloud\Dataproc\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Common config settings for resources of Google Compute Engine cluster
 * instances, applicable to all instances in the cluster.
 * </pre>
 *
 * Protobuf type <code>google.cloud.dataproc.v1.GceClusterConfig</code>
 */
class GceClusterConfig extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * [Required] The zone where the Google Compute Engine cluster will be located.
     * Example: `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]`.
     * </pre>
     *
     * <code>string zone_uri = 1;</code>
     */
    private $zone_uri = '';
    /**
     * <pre>
     * [Optional] The Google Compute Engine network to be used for machine
     * communications. Cannot be specified with subnetwork_uri. If neither
     * `network_uri` nor `subnetwork_uri` is specified, the "default" network of
     * the project is used, if it exists. Cannot be a "Custom Subnet Network" (see
     * [Using Subnetworks](/compute/docs/subnetworks) for more information).
     * Example: `https://www.googleapis.com/compute/v1/projects/[project_id]/regions/global/default`.
     * </pre>
     *
     * <code>string network_uri = 2;</code>
     */
    private $network_uri = '';
    /**
     * <pre>
     * [Optional] The Google Compute Engine subnetwork to be used for machine
     * communications. Cannot be specified with network_uri.
     * Example: `https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/sub0`.
     * </pre>
     *
     * <code>string subnetwork_uri = 6;</code>
     */
    private $subnetwork_uri = '';
    /**
     * <pre>
     * [Optional] If true, all instances in the cluster will only have internal IP
     * addresses. By default, clusters are not restricted to internal IP addresses,
     * and will have ephemeral external IP addresses assigned to each instance.
     * This `internal_ip_only` restriction can only be enabled for subnetwork
     * enabled networks, and all off-cluster dependencies must be configured to be
     * accessible without external IP addresses.
     * </pre>
     *
     * <code>bool internal_ip_only = 7;</code>
     */
    private $internal_ip_only = false;
    /**
     * <pre>
     * [Optional] The URIs of service account scopes to be included in Google
     * Compute Engine instances. The following base set of scopes is always
     * included:
     * * https://www.googleapis.com/auth/cloud.useraccounts.readonly
     * * https://www.googleapis.com/auth/devstorage.read_write
     * * https://www.googleapis.com/auth/logging.write
     * If no scopes are specified, the following defaults are also provided:
     * * https://www.googleapis.com/auth/bigquery
     * * https://www.googleapis.com/auth/bigtable.admin.table
     * * https://www.googleapis.com/auth/bigtable.data
     * * https://www.googleapis.com/auth/devstorage.full_control
     * </pre>
     *
     * <code>repeated string service_account_scopes = 3;</code>
     */
    private $service_account_scopes;
    /**
     * <pre>
     * The Google Compute Engine tags to add to all instances (see
     * [Labeling instances](/compute/docs/label-or-tag-resources#labeling_instances)).
     * </pre>
     *
     * <code>repeated string tags = 4;</code>
     */
    private $tags;
    /**
     * <pre>
     * The Google Compute Engine metadata entries to add to all instances (see
     * [Project and instance metadata](https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 5;</code>
     */
    private $metadata;

    public function __construct() {
        \GPBMetadata\Google\Cloud\Dataproc\V1\Clusters::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * [Required] The zone where the Google Compute Engine cluster will be located.
     * Example: `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]`.
     * </pre>
     *
     * <code>string zone_uri = 1;</code>
     */
    public function getZoneUri()
    {
        return $this->zone_uri;
    }

    /**
     * <pre>
     * [Required] The zone where the Google Compute Engine cluster will be located.
     * Example: `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]`.
     * </pre>
     *
     * <code>string zone_uri = 1;</code>
     */
    public function setZoneUri($var)
    {
        GPBUtil::checkString($var, True);
        $this->zone_uri = $var;
    }

    /**
     * <pre>
     * [Optional] The Google Compute Engine network to be used for machine
     * communications. Cannot be specified with subnetwork_uri. If neither
     * `network_uri` nor `subnetwork_uri` is specified, the "default" network of
     * the project is used, if it exists. Cannot be a "Custom Subnet Network" (see
     * [Using Subnetworks](/compute/docs/subnetworks) for more information).
     * Example: `https://www.googleapis.com/compute/v1/projects/[project_id]/regions/global/default`.
     * </pre>
     *
     * <code>string network_uri = 2;</code>
     */
    public function getNetworkUri()
    {
        return $this->network_uri;
    }

    /**
     * <pre>
     * [Optional] The Google Compute Engine network to be used for machine
     * communications. Cannot be specified with subnetwork_uri. If neither
     * `network_uri` nor `subnetwork_uri` is specified, the "default" network of
     * the project is used, if it exists. Cannot be a "Custom Subnet Network" (see
     * [Using Subnetworks](/compute/docs/subnetworks) for more information).
     * Example: `https://www.googleapis.com/compute/v1/projects/[project_id]/regions/global/default`.
     * </pre>
     *
     * <code>string network_uri = 2;</code>
     */
    public function setNetworkUri($var)
    {
        GPBUtil::checkString($var, True);
        $this->network_uri = $var;
    }

    /**
     * <pre>
     * [Optional] The Google Compute Engine subnetwork to be used for machine
     * communications. Cannot be specified with network_uri.
     * Example: `https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/sub0`.
     * </pre>
     *
     * <code>string subnetwork_uri = 6;</code>
     */
    public function getSubnetworkUri()
    {
        return $this->subnetwork_uri;
    }

    /**
     * <pre>
     * [Optional] The Google Compute Engine subnetwork to be used for machine
     * communications. Cannot be specified with network_uri.
     * Example: `https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/sub0`.
     * </pre>
     *
     * <code>string subnetwork_uri = 6;</code>
     */
    public function setSubnetworkUri($var)
    {
        GPBUtil::checkString($var, True);
        $this->subnetwork_uri = $var;
    }

    /**
     * <pre>
     * [Optional] If true, all instances in the cluster will only have internal IP
     * addresses. By default, clusters are not restricted to internal IP addresses,
     * and will have ephemeral external IP addresses assigned to each instance.
     * This `internal_ip_only` restriction can only be enabled for subnetwork
     * enabled networks, and all off-cluster dependencies must be configured to be
     * accessible without external IP addresses.
     * </pre>
     *
     * <code>bool internal_ip_only = 7;</code>
     */
    public function getInternalIpOnly()
    {
        return $this->internal_ip_only;
    }

    /**
     * <pre>
     * [Optional] If true, all instances in the cluster will only have internal IP
     * addresses. By default, clusters are not restricted to internal IP addresses,
     * and will have ephemeral external IP addresses assigned to each instance.
     * This `internal_ip_only` restriction can only be enabled for subnetwork
     * enabled networks, and all off-cluster dependencies must be configured to be
     * accessible without external IP addresses.
     * </pre>
     *
     * <code>bool internal_ip_only = 7;</code>
     */
    public function setInternalIpOnly($var)
    {
        GPBUtil::checkBool($var);
        $this->internal_ip_only = $var;
    }

    /**
     * <pre>
     * [Optional] The URIs of service account scopes to be included in Google
     * Compute Engine instances. The following base set of scopes is always
     * included:
     * * https://www.googleapis.com/auth/cloud.useraccounts.readonly
     * * https://www.googleapis.com/auth/devstorage.read_write
     * * https://www.googleapis.com/auth/logging.write
     * If no scopes are specified, the following defaults are also provided:
     * * https://www.googleapis.com/auth/bigquery
     * * https://www.googleapis.com/auth/bigtable.admin.table
     * * https://www.googleapis.com/auth/bigtable.data
     * * https://www.googleapis.com/auth/devstorage.full_control
     * </pre>
     *
     * <code>repeated string service_account_scopes = 3;</code>
     */
    public function getServiceAccountScopes()
    {
        return $this->service_account_scopes;
    }

    /**
     * <pre>
     * [Optional] The URIs of service account scopes to be included in Google
     * Compute Engine instances. The following base set of scopes is always
     * included:
     * * https://www.googleapis.com/auth/cloud.useraccounts.readonly
     * * https://www.googleapis.com/auth/devstorage.read_write
     * * https://www.googleapis.com/auth/logging.write
     * If no scopes are specified, the following defaults are also provided:
     * * https://www.googleapis.com/auth/bigquery
     * * https://www.googleapis.com/auth/bigtable.admin.table
     * * https://www.googleapis.com/auth/bigtable.data
     * * https://www.googleapis.com/auth/devstorage.full_control
     * </pre>
     *
     * <code>repeated string service_account_scopes = 3;</code>
     */
    public function setServiceAccountScopes(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->service_account_scopes = $var;
    }

    /**
     * <pre>
     * The Google Compute Engine tags to add to all instances (see
     * [Labeling instances](/compute/docs/label-or-tag-resources#labeling_instances)).
     * </pre>
     *
     * <code>repeated string tags = 4;</code>
     */
    public function getTags()
    {
        return $this->tags;
    }

    /**
     * <pre>
     * The Google Compute Engine tags to add to all instances (see
     * [Labeling instances](/compute/docs/label-or-tag-resources#labeling_instances)).
     * </pre>
     *
     * <code>repeated string tags = 4;</code>
     */
    public function setTags(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->tags = $var;
    }

    /**
     * <pre>
     * The Google Compute Engine metadata entries to add to all instances (see
     * [Project and instance metadata](https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 5;</code>
     */
    public function getMetadata()
    {
        return $this->metadata;
    }

    /**
     * <pre>
     * The Google Compute Engine metadata entries to add to all instances (see
     * [Project and instance metadata](https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
     * </pre>
     *
     * <code>map&lt;string, string&gt; metadata = 5;</code>
     */
    public function setMetadata(&$var)
    {
        $this->metadata = $var;
    }

}

