<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/dataproc/v1/jobs.proto

namespace Google\Cloud\Dataproc\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * A Cloud Dataproc job for running [Apache Spark](http://spark.apache.org/)
 * applications on YARN.
 * </pre>
 *
 * Protobuf type <code>google.cloud.dataproc.v1.SparkJob</code>
 */
class SparkJob extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * [Optional] The arguments to pass to the driver. Do not include arguments,
     * such as `--conf`, that can be set as job properties, since a collision may
     * occur that causes an incorrect job submission.
     * </pre>
     *
     * <code>repeated string args = 3;</code>
     */
    private $args;
    /**
     * <pre>
     * [Optional] HCFS URIs of jar files to add to the CLASSPATHs of the
     * Spark driver and tasks.
     * </pre>
     *
     * <code>repeated string jar_file_uris = 4;</code>
     */
    private $jar_file_uris;
    /**
     * <pre>
     * [Optional] HCFS URIs of files to be copied to the working directory of
     * Spark drivers and distributed tasks. Useful for naively parallel tasks.
     * </pre>
     *
     * <code>repeated string file_uris = 5;</code>
     */
    private $file_uris;
    /**
     * <pre>
     * [Optional] HCFS URIs of archives to be extracted in the working directory
     * of Spark drivers and tasks. Supported file types:
     * .jar, .tar, .tar.gz, .tgz, and .zip.
     * </pre>
     *
     * <code>repeated string archive_uris = 6;</code>
     */
    private $archive_uris;
    /**
     * <pre>
     * [Optional] A mapping of property names to values, used to configure Spark.
     * Properties that conflict with values set by the Cloud Dataproc API may be
     * overwritten. Can include properties set in
     * /etc/spark/conf/spark-defaults.conf and classes in user code.
     * </pre>
     *
     * <code>map&lt;string, string&gt; properties = 7;</code>
     */
    private $properties;
    /**
     * <pre>
     * [Optional] The runtime log config for job execution.
     * </pre>
     *
     * <code>.google.cloud.dataproc.v1.LoggingConfig logging_config = 8;</code>
     */
    private $logging_config = null;
    protected $driver;

    public function __construct() {
        \GPBMetadata\Google\Cloud\Dataproc\V1\Jobs::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * The HCFS URI of the jar file that contains the main class.
     * </pre>
     *
     * <code>string main_jar_file_uri = 1;</code>
     */
    public function getMainJarFileUri()
    {
        return $this->readOneof(1);
    }

    /**
     * <pre>
     * The HCFS URI of the jar file that contains the main class.
     * </pre>
     *
     * <code>string main_jar_file_uri = 1;</code>
     */
    public function setMainJarFileUri($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(1, $var);
    }

    /**
     * <pre>
     * The name of the driver's main class. The jar file that contains the class
     * must be in the default CLASSPATH or specified in `jar_file_uris`.
     * </pre>
     *
     * <code>string main_class = 2;</code>
     */
    public function getMainClass()
    {
        return $this->readOneof(2);
    }

    /**
     * <pre>
     * The name of the driver's main class. The jar file that contains the class
     * must be in the default CLASSPATH or specified in `jar_file_uris`.
     * </pre>
     *
     * <code>string main_class = 2;</code>
     */
    public function setMainClass($var)
    {
        GPBUtil::checkString($var, True);
        $this->writeOneof(2, $var);
    }

    /**
     * <pre>
     * [Optional] The arguments to pass to the driver. Do not include arguments,
     * such as `--conf`, that can be set as job properties, since a collision may
     * occur that causes an incorrect job submission.
     * </pre>
     *
     * <code>repeated string args = 3;</code>
     */
    public function getArgs()
    {
        return $this->args;
    }

    /**
     * <pre>
     * [Optional] The arguments to pass to the driver. Do not include arguments,
     * such as `--conf`, that can be set as job properties, since a collision may
     * occur that causes an incorrect job submission.
     * </pre>
     *
     * <code>repeated string args = 3;</code>
     */
    public function setArgs(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->args = $var;
    }

    /**
     * <pre>
     * [Optional] HCFS URIs of jar files to add to the CLASSPATHs of the
     * Spark driver and tasks.
     * </pre>
     *
     * <code>repeated string jar_file_uris = 4;</code>
     */
    public function getJarFileUris()
    {
        return $this->jar_file_uris;
    }

    /**
     * <pre>
     * [Optional] HCFS URIs of jar files to add to the CLASSPATHs of the
     * Spark driver and tasks.
     * </pre>
     *
     * <code>repeated string jar_file_uris = 4;</code>
     */
    public function setJarFileUris(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->jar_file_uris = $var;
    }

    /**
     * <pre>
     * [Optional] HCFS URIs of files to be copied to the working directory of
     * Spark drivers and distributed tasks. Useful for naively parallel tasks.
     * </pre>
     *
     * <code>repeated string file_uris = 5;</code>
     */
    public function getFileUris()
    {
        return $this->file_uris;
    }

    /**
     * <pre>
     * [Optional] HCFS URIs of files to be copied to the working directory of
     * Spark drivers and distributed tasks. Useful for naively parallel tasks.
     * </pre>
     *
     * <code>repeated string file_uris = 5;</code>
     */
    public function setFileUris(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->file_uris = $var;
    }

    /**
     * <pre>
     * [Optional] HCFS URIs of archives to be extracted in the working directory
     * of Spark drivers and tasks. Supported file types:
     * .jar, .tar, .tar.gz, .tgz, and .zip.
     * </pre>
     *
     * <code>repeated string archive_uris = 6;</code>
     */
    public function getArchiveUris()
    {
        return $this->archive_uris;
    }

    /**
     * <pre>
     * [Optional] HCFS URIs of archives to be extracted in the working directory
     * of Spark drivers and tasks. Supported file types:
     * .jar, .tar, .tar.gz, .tgz, and .zip.
     * </pre>
     *
     * <code>repeated string archive_uris = 6;</code>
     */
    public function setArchiveUris(&$var)
    {
        GPBUtil::checkRepeatedField($var, \Google\Protobuf\Internal\GPBType::STRING);
        $this->archive_uris = $var;
    }

    /**
     * <pre>
     * [Optional] A mapping of property names to values, used to configure Spark.
     * Properties that conflict with values set by the Cloud Dataproc API may be
     * overwritten. Can include properties set in
     * /etc/spark/conf/spark-defaults.conf and classes in user code.
     * </pre>
     *
     * <code>map&lt;string, string&gt; properties = 7;</code>
     */
    public function getProperties()
    {
        return $this->properties;
    }

    /**
     * <pre>
     * [Optional] A mapping of property names to values, used to configure Spark.
     * Properties that conflict with values set by the Cloud Dataproc API may be
     * overwritten. Can include properties set in
     * /etc/spark/conf/spark-defaults.conf and classes in user code.
     * </pre>
     *
     * <code>map&lt;string, string&gt; properties = 7;</code>
     */
    public function setProperties(&$var)
    {
        $this->properties = $var;
    }

    /**
     * <pre>
     * [Optional] The runtime log config for job execution.
     * </pre>
     *
     * <code>.google.cloud.dataproc.v1.LoggingConfig logging_config = 8;</code>
     */
    public function getLoggingConfig()
    {
        return $this->logging_config;
    }

    /**
     * <pre>
     * [Optional] The runtime log config for job execution.
     * </pre>
     *
     * <code>.google.cloud.dataproc.v1.LoggingConfig logging_config = 8;</code>
     */
    public function setLoggingConfig(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Dataproc\V1\LoggingConfig::class);
        $this->logging_config = $var;
    }

    public function getDriver()
    {
        return $this->driver;
    }

}

