<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/runtimeconfig/v1beta1/runtimeconfig.proto

namespace Google\Cloud\Runtimeconfig\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Request for the `ListVariables()` method.
 * </pre>
 *
 * Protobuf type <code>google.cloud.runtimeconfig.v1beta1.ListVariablesRequest</code>
 */
class ListVariablesRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * The path to the RuntimeConfig resource for which you want to list variables.
     * The configuration must exist beforehand; the path must by in the format:
     * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
     * </pre>
     *
     * <code>string parent = 1;</code>
     */
    private $parent = '';
    /**
     * <pre>
     * Filters variables by matching the specified filter. For example:
     * `projects/example-project/config/[CONFIG_NAME]/variables/example-variable`.
     * </pre>
     *
     * <code>string filter = 2;</code>
     */
    private $filter = '';
    /**
     * <pre>
     * Specifies the number of results to return per page. If there are fewer
     * elements than the specified number, returns all elements.
     * </pre>
     *
     * <code>int32 page_size = 3;</code>
     */
    private $page_size = 0;
    /**
     * <pre>
     * Specifies a page token to use. Set `pageToken` to a `nextPageToken`
     * returned by a previous list request to get the next page of results.
     * </pre>
     *
     * <code>string page_token = 4;</code>
     */
    private $page_token = '';
    /**
     * <pre>
     * The flag indicates whether the user wants to return values of variables.
     * If true, then only those variables that user has IAM GetVariable permission
     * will be returned along with their values.
     * </pre>
     *
     * <code>bool return_values = 5;</code>
     */
    private $return_values = false;

    public function __construct() {
        \GPBMetadata\Google\Cloud\Runtimeconfig\V1Beta1\Runtimeconfig::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * The path to the RuntimeConfig resource for which you want to list variables.
     * The configuration must exist beforehand; the path must by in the format:
     * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
     * </pre>
     *
     * <code>string parent = 1;</code>
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * <pre>
     * The path to the RuntimeConfig resource for which you want to list variables.
     * The configuration must exist beforehand; the path must by in the format:
     * `projects/[PROJECT_ID]/configs/[CONFIG_NAME]`
     * </pre>
     *
     * <code>string parent = 1;</code>
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;
    }

    /**
     * <pre>
     * Filters variables by matching the specified filter. For example:
     * `projects/example-project/config/[CONFIG_NAME]/variables/example-variable`.
     * </pre>
     *
     * <code>string filter = 2;</code>
     */
    public function getFilter()
    {
        return $this->filter;
    }

    /**
     * <pre>
     * Filters variables by matching the specified filter. For example:
     * `projects/example-project/config/[CONFIG_NAME]/variables/example-variable`.
     * </pre>
     *
     * <code>string filter = 2;</code>
     */
    public function setFilter($var)
    {
        GPBUtil::checkString($var, True);
        $this->filter = $var;
    }

    /**
     * <pre>
     * Specifies the number of results to return per page. If there are fewer
     * elements than the specified number, returns all elements.
     * </pre>
     *
     * <code>int32 page_size = 3;</code>
     */
    public function getPageSize()
    {
        return $this->page_size;
    }

    /**
     * <pre>
     * Specifies the number of results to return per page. If there are fewer
     * elements than the specified number, returns all elements.
     * </pre>
     *
     * <code>int32 page_size = 3;</code>
     */
    public function setPageSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->page_size = $var;
    }

    /**
     * <pre>
     * Specifies a page token to use. Set `pageToken` to a `nextPageToken`
     * returned by a previous list request to get the next page of results.
     * </pre>
     *
     * <code>string page_token = 4;</code>
     */
    public function getPageToken()
    {
        return $this->page_token;
    }

    /**
     * <pre>
     * Specifies a page token to use. Set `pageToken` to a `nextPageToken`
     * returned by a previous list request to get the next page of results.
     * </pre>
     *
     * <code>string page_token = 4;</code>
     */
    public function setPageToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->page_token = $var;
    }

    /**
     * <pre>
     * The flag indicates whether the user wants to return values of variables.
     * If true, then only those variables that user has IAM GetVariable permission
     * will be returned along with their values.
     * </pre>
     *
     * <code>bool return_values = 5;</code>
     */
    public function getReturnValues()
    {
        return $this->return_values;
    }

    /**
     * <pre>
     * The flag indicates whether the user wants to return values of variables.
     * If true, then only those variables that user has IAM GetVariable permission
     * will be returned along with their values.
     * </pre>
     *
     * <code>bool return_values = 5;</code>
     */
    public function setReturnValues($var)
    {
        GPBUtil::checkBool($var);
        $this->return_values = $var;
    }

}

