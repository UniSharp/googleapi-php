<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/cloud/runtimeconfig/v1beta1/runtimeconfig.proto

namespace Google\Cloud\Runtimeconfig\V1beta1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Creates a RuntimeConfig resource.
 * </pre>
 *
 * Protobuf type <code>google.cloud.runtimeconfig.v1beta1.CreateConfigRequest</code>
 */
class CreateConfigRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * The [project ID](https://support.google.com/cloud/answer/6158840?hl=en&amp;ref_topic=6158848)
     * for this request, in the format `projects/[PROJECT_ID]`.
     * </pre>
     *
     * <code>string parent = 1;</code>
     */
    private $parent = '';
    /**
     * <pre>
     * The RuntimeConfig to create.
     * </pre>
     *
     * <code>.google.cloud.runtimeconfig.v1beta1.RuntimeConfig config = 2;</code>
     */
    private $config = null;
    /**
     * <pre>
     * An optional but recommended unique `request_id`. If the server
     * receives two `create()` requests  with the same
     * `request_id`, then the second request will be ignored and the
     * first resource created and stored in the backend is returned.
     * Empty `request_id` fields are ignored.
     * It is responsibility of the client to ensure uniqueness of the
     * `request_id` strings.
     * `request_id` strings are limited to 64 characters.
     * </pre>
     *
     * <code>string request_id = 3;</code>
     */
    private $request_id = '';

    public function __construct() {
        \GPBMetadata\Google\Cloud\Runtimeconfig\V1Beta1\Runtimeconfig::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * The [project ID](https://support.google.com/cloud/answer/6158840?hl=en&amp;ref_topic=6158848)
     * for this request, in the format `projects/[PROJECT_ID]`.
     * </pre>
     *
     * <code>string parent = 1;</code>
     */
    public function getParent()
    {
        return $this->parent;
    }

    /**
     * <pre>
     * The [project ID](https://support.google.com/cloud/answer/6158840?hl=en&amp;ref_topic=6158848)
     * for this request, in the format `projects/[PROJECT_ID]`.
     * </pre>
     *
     * <code>string parent = 1;</code>
     */
    public function setParent($var)
    {
        GPBUtil::checkString($var, True);
        $this->parent = $var;
    }

    /**
     * <pre>
     * The RuntimeConfig to create.
     * </pre>
     *
     * <code>.google.cloud.runtimeconfig.v1beta1.RuntimeConfig config = 2;</code>
     */
    public function getConfig()
    {
        return $this->config;
    }

    /**
     * <pre>
     * The RuntimeConfig to create.
     * </pre>
     *
     * <code>.google.cloud.runtimeconfig.v1beta1.RuntimeConfig config = 2;</code>
     */
    public function setConfig(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Cloud\Runtimeconfig\V1beta1\RuntimeConfig::class);
        $this->config = $var;
    }

    /**
     * <pre>
     * An optional but recommended unique `request_id`. If the server
     * receives two `create()` requests  with the same
     * `request_id`, then the second request will be ignored and the
     * first resource created and stored in the backend is returned.
     * Empty `request_id` fields are ignored.
     * It is responsibility of the client to ensure uniqueness of the
     * `request_id` strings.
     * `request_id` strings are limited to 64 characters.
     * </pre>
     *
     * <code>string request_id = 3;</code>
     */
    public function getRequestId()
    {
        return $this->request_id;
    }

    /**
     * <pre>
     * An optional but recommended unique `request_id`. If the server
     * receives two `create()` requests  with the same
     * `request_id`, then the second request will be ignored and the
     * first resource created and stored in the backend is returned.
     * Empty `request_id` fields are ignored.
     * It is responsibility of the client to ensure uniqueness of the
     * `request_id` strings.
     * `request_id` strings are limited to 64 characters.
     * </pre>
     *
     * <code>string request_id = 3;</code>
     */
    public function setRequestId($var)
    {
        GPBUtil::checkString($var, True);
        $this->request_id = $var;
    }

}

