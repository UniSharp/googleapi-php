<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/bigtable/v1/bigtable_data.proto

namespace Google\Bigtable\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Specifies a contiguous range of raw byte values.
 * </pre>
 *
 * Protobuf type <code>google.bigtable.v1.ValueRange</code>
 */
class ValueRange extends \Google\Protobuf\Internal\Message
{
    protected $start_value;
    protected $end_value;

    public function __construct() {
        \GPBMetadata\Google\Bigtable\V1\BigtableData::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * Used when giving an inclusive lower bound for the range.
     * </pre>
     *
     * <code>bytes start_value_inclusive = 1;</code>
     */
    public function getStartValueInclusive()
    {
        return $this->readOneof(1);
    }

    /**
     * <pre>
     * Used when giving an inclusive lower bound for the range.
     * </pre>
     *
     * <code>bytes start_value_inclusive = 1;</code>
     */
    public function setStartValueInclusive($var)
    {
        GPBUtil::checkString($var, False);
        $this->writeOneof(1, $var);
    }

    /**
     * <pre>
     * Used when giving an exclusive lower bound for the range.
     * </pre>
     *
     * <code>bytes start_value_exclusive = 2;</code>
     */
    public function getStartValueExclusive()
    {
        return $this->readOneof(2);
    }

    /**
     * <pre>
     * Used when giving an exclusive lower bound for the range.
     * </pre>
     *
     * <code>bytes start_value_exclusive = 2;</code>
     */
    public function setStartValueExclusive($var)
    {
        GPBUtil::checkString($var, False);
        $this->writeOneof(2, $var);
    }

    /**
     * <pre>
     * Used when giving an inclusive upper bound for the range.
     * </pre>
     *
     * <code>bytes end_value_inclusive = 3;</code>
     */
    public function getEndValueInclusive()
    {
        return $this->readOneof(3);
    }

    /**
     * <pre>
     * Used when giving an inclusive upper bound for the range.
     * </pre>
     *
     * <code>bytes end_value_inclusive = 3;</code>
     */
    public function setEndValueInclusive($var)
    {
        GPBUtil::checkString($var, False);
        $this->writeOneof(3, $var);
    }

    /**
     * <pre>
     * Used when giving an exclusive upper bound for the range.
     * </pre>
     *
     * <code>bytes end_value_exclusive = 4;</code>
     */
    public function getEndValueExclusive()
    {
        return $this->readOneof(4);
    }

    /**
     * <pre>
     * Used when giving an exclusive upper bound for the range.
     * </pre>
     *
     * <code>bytes end_value_exclusive = 4;</code>
     */
    public function setEndValueExclusive($var)
    {
        GPBUtil::checkString($var, False);
        $this->writeOneof(4, $var);
    }

    public function getStartValue()
    {
        return $this->start_value;
    }

    public function getEndValue()
    {
        return $this->end_value;
    }

}

