<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/storagetransfer/v1/transfer.proto

namespace Google\Storagetransfer\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * `project_id`, `job_names`, and `job_statuses` are query parameters that can
 * be specified when listing transfer jobs.
 * </pre>
 *
 * Protobuf type <code>google.storagetransfer.v1.ListTransferJobsRequest</code>
 */
class ListTransferJobsRequest extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * A list of query parameters specified as JSON text in the form of
     * {"project_id":"my_project_id",
     * "job_names":["jobid1","jobid2",...],
     * "job_statuses":["status1","status2",...]}.
     * Since `job_names` and `job_statuses` support multiple values, their values
     * must be specified with array notation. `project_id` is required. `job_names`
     * and `job_statuses` are optional.  The valid values for `job_statuses` are
     * case-insensitive: `ENABLED`, `DISABLED`, and `DELETED`.
     * </pre>
     *
     * <code>string filter = 1;</code>
     */
    private $filter = '';
    /**
     * <pre>
     * The list page size. The max allowed value is 256.
     * </pre>
     *
     * <code>int32 page_size = 4;</code>
     */
    private $page_size = 0;
    /**
     * <pre>
     * The list page token.
     * </pre>
     *
     * <code>string page_token = 5;</code>
     */
    private $page_token = '';

    public function __construct() {
        \GPBMetadata\Google\Storagetransfer\V1\Transfer::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * A list of query parameters specified as JSON text in the form of
     * {"project_id":"my_project_id",
     * "job_names":["jobid1","jobid2",...],
     * "job_statuses":["status1","status2",...]}.
     * Since `job_names` and `job_statuses` support multiple values, their values
     * must be specified with array notation. `project_id` is required. `job_names`
     * and `job_statuses` are optional.  The valid values for `job_statuses` are
     * case-insensitive: `ENABLED`, `DISABLED`, and `DELETED`.
     * </pre>
     *
     * <code>string filter = 1;</code>
     */
    public function getFilter()
    {
        return $this->filter;
    }

    /**
     * <pre>
     * A list of query parameters specified as JSON text in the form of
     * {"project_id":"my_project_id",
     * "job_names":["jobid1","jobid2",...],
     * "job_statuses":["status1","status2",...]}.
     * Since `job_names` and `job_statuses` support multiple values, their values
     * must be specified with array notation. `project_id` is required. `job_names`
     * and `job_statuses` are optional.  The valid values for `job_statuses` are
     * case-insensitive: `ENABLED`, `DISABLED`, and `DELETED`.
     * </pre>
     *
     * <code>string filter = 1;</code>
     */
    public function setFilter($var)
    {
        GPBUtil::checkString($var, True);
        $this->filter = $var;
    }

    /**
     * <pre>
     * The list page size. The max allowed value is 256.
     * </pre>
     *
     * <code>int32 page_size = 4;</code>
     */
    public function getPageSize()
    {
        return $this->page_size;
    }

    /**
     * <pre>
     * The list page size. The max allowed value is 256.
     * </pre>
     *
     * <code>int32 page_size = 4;</code>
     */
    public function setPageSize($var)
    {
        GPBUtil::checkInt32($var);
        $this->page_size = $var;
    }

    /**
     * <pre>
     * The list page token.
     * </pre>
     *
     * <code>string page_token = 5;</code>
     */
    public function getPageToken()
    {
        return $this->page_token;
    }

    /**
     * <pre>
     * The list page token.
     * </pre>
     *
     * <code>string page_token = 5;</code>
     */
    public function setPageToken($var)
    {
        GPBUtil::checkString($var, True);
        $this->page_token = $var;
    }

}

