<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/appengine/v1/service.proto

namespace Google\Appengine\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * A Service resource is a logical component of an application that can share
 * state and communicate in a secure fashion with other services.
 * For example, an application that handles customer requests might
 * include separate services to handle tasks such as backend data
 * analysis or API requests from mobile devices. Each service has a
 * collection of versions that define a specific set of code used to
 * implement the functionality of that service.
 * </pre>
 *
 * Protobuf type <code>google.appengine.v1.Service</code>
 */
class Service extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * Full path to the Service resource in the API.
     * Example: `apps/myapp/services/default`.
     * &#64;OutputOnly
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    private $name = '';
    /**
     * <pre>
     * Relative name of the service within the application.
     * Example: `default`.
     * &#64;OutputOnly
     * </pre>
     *
     * <code>string id = 2;</code>
     */
    private $id = '';
    /**
     * <pre>
     * Mapping that defines fractional HTTP traffic diversion to
     * different versions within the service.
     * </pre>
     *
     * <code>.google.appengine.v1.TrafficSplit split = 3;</code>
     */
    private $split = null;

    public function __construct() {
        \GPBMetadata\Google\Appengine\V1\Service::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * Full path to the Service resource in the API.
     * Example: `apps/myapp/services/default`.
     * &#64;OutputOnly
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * <pre>
     * Full path to the Service resource in the API.
     * Example: `apps/myapp/services/default`.
     * &#64;OutputOnly
     * </pre>
     *
     * <code>string name = 1;</code>
     */
    public function setName($var)
    {
        GPBUtil::checkString($var, True);
        $this->name = $var;
    }

    /**
     * <pre>
     * Relative name of the service within the application.
     * Example: `default`.
     * &#64;OutputOnly
     * </pre>
     *
     * <code>string id = 2;</code>
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * <pre>
     * Relative name of the service within the application.
     * Example: `default`.
     * &#64;OutputOnly
     * </pre>
     *
     * <code>string id = 2;</code>
     */
    public function setId($var)
    {
        GPBUtil::checkString($var, True);
        $this->id = $var;
    }

    /**
     * <pre>
     * Mapping that defines fractional HTTP traffic diversion to
     * different versions within the service.
     * </pre>
     *
     * <code>.google.appengine.v1.TrafficSplit split = 3;</code>
     */
    public function getSplit()
    {
        return $this->split;
    }

    /**
     * <pre>
     * Mapping that defines fractional HTTP traffic diversion to
     * different versions within the service.
     * </pre>
     *
     * <code>.google.appengine.v1.TrafficSplit split = 3;</code>
     */
    public function setSplit(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Appengine\V1\TrafficSplit::class);
        $this->split = $var;
    }

}

