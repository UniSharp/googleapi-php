<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/appengine/v1/deploy.proto

namespace Google\Appengine\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Code and application artifacts used to deploy a version to App Engine.
 * </pre>
 *
 * Protobuf type <code>google.appengine.v1.Deployment</code>
 */
class Deployment extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * Manifest of the files stored in Google Cloud Storage that are included
     * as part of this version. All files must be readable using the
     * credentials supplied with this call.
     * </pre>
     *
     * <code>map&lt;string, .google.appengine.v1.FileInfo&gt; files = 1;</code>
     */
    private $files;
    /**
     * <pre>
     * A Docker image that App Engine uses to run the version.
     * Only applicable for instances in App Engine flexible environment.
     * </pre>
     *
     * <code>.google.appengine.v1.ContainerInfo container = 2;</code>
     */
    private $container = null;
    /**
     * <pre>
     * The zip file for this deployment, if this is a zip deployment.
     * </pre>
     *
     * <code>.google.appengine.v1.ZipInfo zip = 3;</code>
     */
    private $zip = null;

    public function __construct() {
        \GPBMetadata\Google\Appengine\V1\Deploy::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * Manifest of the files stored in Google Cloud Storage that are included
     * as part of this version. All files must be readable using the
     * credentials supplied with this call.
     * </pre>
     *
     * <code>map&lt;string, .google.appengine.v1.FileInfo&gt; files = 1;</code>
     */
    public function getFiles()
    {
        return $this->files;
    }

    /**
     * <pre>
     * Manifest of the files stored in Google Cloud Storage that are included
     * as part of this version. All files must be readable using the
     * credentials supplied with this call.
     * </pre>
     *
     * <code>map&lt;string, .google.appengine.v1.FileInfo&gt; files = 1;</code>
     */
    public function setFiles(&$var)
    {
        $arr = GPBUtil::checkMapField($var, \Google\Protobuf\Internal\GPBType::STRING, \Google\Protobuf\Internal\GPBType::MESSAGE, \Google\Appengine\V1\FileInfo::class);
        $this->files = $arr;
    }

    /**
     * <pre>
     * A Docker image that App Engine uses to run the version.
     * Only applicable for instances in App Engine flexible environment.
     * </pre>
     *
     * <code>.google.appengine.v1.ContainerInfo container = 2;</code>
     */
    public function getContainer()
    {
        return $this->container;
    }

    /**
     * <pre>
     * A Docker image that App Engine uses to run the version.
     * Only applicable for instances in App Engine flexible environment.
     * </pre>
     *
     * <code>.google.appengine.v1.ContainerInfo container = 2;</code>
     */
    public function setContainer(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Appengine\V1\ContainerInfo::class);
        $this->container = $var;
    }

    /**
     * <pre>
     * The zip file for this deployment, if this is a zip deployment.
     * </pre>
     *
     * <code>.google.appengine.v1.ZipInfo zip = 3;</code>
     */
    public function getZip()
    {
        return $this->zip;
    }

    /**
     * <pre>
     * The zip file for this deployment, if this is a zip deployment.
     * </pre>
     *
     * <code>.google.appengine.v1.ZipInfo zip = 3;</code>
     */
    public function setZip(&$var)
    {
        GPBUtil::checkMessage($var, \Google\Appengine\V1\ZipInfo::class);
        $this->zip = $var;
    }

}

