<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: google/appengine/v1/application.proto

namespace Google\Appengine\V1;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * <pre>
 * Rules to match an HTTP request and dispatch that request to a service.
 * </pre>
 *
 * Protobuf type <code>google.appengine.v1.UrlDispatchRule</code>
 */
class UrlDispatchRule extends \Google\Protobuf\Internal\Message
{
    /**
     * <pre>
     * Domain name to match against. The wildcard "`*`" is supported if
     * specified before a period: "`*.`".
     * Defaults to matching all domains: "`*`".
     * </pre>
     *
     * <code>string domain = 1;</code>
     */
    private $domain = '';
    /**
     * <pre>
     * Pathname within the host. Must start with a "`/`". A
     * single "`*`" can be included at the end of the path. The sum
     * of the lengths of the domain and path may not exceed 100
     * characters.
     * </pre>
     *
     * <code>string path = 2;</code>
     */
    private $path = '';
    /**
     * <pre>
     * Resource ID of a service in this application that should
     * serve the matched request. The service must already
     * exist. Example: `default`.
     * </pre>
     *
     * <code>string service = 3;</code>
     */
    private $service = '';

    public function __construct() {
        \GPBMetadata\Google\Appengine\V1\Application::initOnce();
        parent::__construct();
    }

    /**
     * <pre>
     * Domain name to match against. The wildcard "`*`" is supported if
     * specified before a period: "`*.`".
     * Defaults to matching all domains: "`*`".
     * </pre>
     *
     * <code>string domain = 1;</code>
     */
    public function getDomain()
    {
        return $this->domain;
    }

    /**
     * <pre>
     * Domain name to match against. The wildcard "`*`" is supported if
     * specified before a period: "`*.`".
     * Defaults to matching all domains: "`*`".
     * </pre>
     *
     * <code>string domain = 1;</code>
     */
    public function setDomain($var)
    {
        GPBUtil::checkString($var, True);
        $this->domain = $var;
    }

    /**
     * <pre>
     * Pathname within the host. Must start with a "`/`". A
     * single "`*`" can be included at the end of the path. The sum
     * of the lengths of the domain and path may not exceed 100
     * characters.
     * </pre>
     *
     * <code>string path = 2;</code>
     */
    public function getPath()
    {
        return $this->path;
    }

    /**
     * <pre>
     * Pathname within the host. Must start with a "`/`". A
     * single "`*`" can be included at the end of the path. The sum
     * of the lengths of the domain and path may not exceed 100
     * characters.
     * </pre>
     *
     * <code>string path = 2;</code>
     */
    public function setPath($var)
    {
        GPBUtil::checkString($var, True);
        $this->path = $var;
    }

    /**
     * <pre>
     * Resource ID of a service in this application that should
     * serve the matched request. The service must already
     * exist. Example: `default`.
     * </pre>
     *
     * <code>string service = 3;</code>
     */
    public function getService()
    {
        return $this->service;
    }

    /**
     * <pre>
     * Resource ID of a service in this application that should
     * serve the matched request. The service must already
     * exist. Example: `default`.
     * </pre>
     *
     * <code>string service = 3;</code>
     */
    public function setService($var)
    {
        GPBUtil::checkString($var, True);
        $this->service = $var;
    }

}

