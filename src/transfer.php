<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: google/storagetransfer/v1/transfer.proto
//   Date: 2017-06-13 04:26:42

namespace google\storagetransfer\v1 {

  class GetGoogleServiceAccountRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $project_id = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.storagetransfer.v1.GetGoogleServiceAccountRequest');

      // OPTIONAL STRING project_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "project_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <project_id> has a value
     *
     * @return boolean
     */
    public function hasProjectId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <project_id> value
     *
     * @return \google\storagetransfer\v1\GetGoogleServiceAccountRequest
     */
    public function clearProjectId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <project_id> value
     *
     * @return string
     */
    public function getProjectId(){
      return $this->_get(1);
    }
    
    /**
     * Set <project_id> value
     *
     * @param string $value
     * @return \google\storagetransfer\v1\GetGoogleServiceAccountRequest
     */
    public function setProjectId( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\storagetransfer\v1 {

  class CreateTransferJobRequest extends \DrSlump\Protobuf\Message {

    /**  @var \google\storagetransfer\v1\TransferJob */
    public $transfer_job = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.storagetransfer.v1.CreateTransferJobRequest');

      // OPTIONAL MESSAGE transfer_job = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "transfer_job";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\storagetransfer\v1\TransferJob';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <transfer_job> has a value
     *
     * @return boolean
     */
    public function hasTransferJob(){
      return $this->_has(1);
    }
    
    /**
     * Clear <transfer_job> value
     *
     * @return \google\storagetransfer\v1\CreateTransferJobRequest
     */
    public function clearTransferJob(){
      return $this->_clear(1);
    }
    
    /**
     * Get <transfer_job> value
     *
     * @return \google\storagetransfer\v1\TransferJob
     */
    public function getTransferJob(){
      return $this->_get(1);
    }
    
    /**
     * Set <transfer_job> value
     *
     * @param \google\storagetransfer\v1\TransferJob $value
     * @return \google\storagetransfer\v1\CreateTransferJobRequest
     */
    public function setTransferJob(\google\storagetransfer\v1\TransferJob $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\storagetransfer\v1 {

  class UpdateTransferJobRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $job_name = null;
    
    /**  @var string */
    public $project_id = null;
    
    /**  @var \google\storagetransfer\v1\TransferJob */
    public $transfer_job = null;
    
    /**  @var \google\protobuf\FieldMask */
    public $update_transfer_job_field_mask = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.storagetransfer.v1.UpdateTransferJobRequest');

      // OPTIONAL STRING job_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "job_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING project_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "project_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE transfer_job = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "transfer_job";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\storagetransfer\v1\TransferJob';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE update_transfer_job_field_mask = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "update_transfer_job_field_mask";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\FieldMask';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <job_name> has a value
     *
     * @return boolean
     */
    public function hasJobName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <job_name> value
     *
     * @return \google\storagetransfer\v1\UpdateTransferJobRequest
     */
    public function clearJobName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <job_name> value
     *
     * @return string
     */
    public function getJobName(){
      return $this->_get(1);
    }
    
    /**
     * Set <job_name> value
     *
     * @param string $value
     * @return \google\storagetransfer\v1\UpdateTransferJobRequest
     */
    public function setJobName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <project_id> has a value
     *
     * @return boolean
     */
    public function hasProjectId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <project_id> value
     *
     * @return \google\storagetransfer\v1\UpdateTransferJobRequest
     */
    public function clearProjectId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <project_id> value
     *
     * @return string
     */
    public function getProjectId(){
      return $this->_get(2);
    }
    
    /**
     * Set <project_id> value
     *
     * @param string $value
     * @return \google\storagetransfer\v1\UpdateTransferJobRequest
     */
    public function setProjectId( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <transfer_job> has a value
     *
     * @return boolean
     */
    public function hasTransferJob(){
      return $this->_has(3);
    }
    
    /**
     * Clear <transfer_job> value
     *
     * @return \google\storagetransfer\v1\UpdateTransferJobRequest
     */
    public function clearTransferJob(){
      return $this->_clear(3);
    }
    
    /**
     * Get <transfer_job> value
     *
     * @return \google\storagetransfer\v1\TransferJob
     */
    public function getTransferJob(){
      return $this->_get(3);
    }
    
    /**
     * Set <transfer_job> value
     *
     * @param \google\storagetransfer\v1\TransferJob $value
     * @return \google\storagetransfer\v1\UpdateTransferJobRequest
     */
    public function setTransferJob(\google\storagetransfer\v1\TransferJob $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <update_transfer_job_field_mask> has a value
     *
     * @return boolean
     */
    public function hasUpdateTransferJobFieldMask(){
      return $this->_has(4);
    }
    
    /**
     * Clear <update_transfer_job_field_mask> value
     *
     * @return \google\storagetransfer\v1\UpdateTransferJobRequest
     */
    public function clearUpdateTransferJobFieldMask(){
      return $this->_clear(4);
    }
    
    /**
     * Get <update_transfer_job_field_mask> value
     *
     * @return \google\protobuf\FieldMask
     */
    public function getUpdateTransferJobFieldMask(){
      return $this->_get(4);
    }
    
    /**
     * Set <update_transfer_job_field_mask> value
     *
     * @param \google\protobuf\FieldMask $value
     * @return \google\storagetransfer\v1\UpdateTransferJobRequest
     */
    public function setUpdateTransferJobFieldMask(\google\protobuf\FieldMask $value){
      return $this->_set(4, $value);
    }
  }
}

namespace google\storagetransfer\v1 {

  class GetTransferJobRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $job_name = null;
    
    /**  @var string */
    public $project_id = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.storagetransfer.v1.GetTransferJobRequest');

      // OPTIONAL STRING job_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "job_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING project_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "project_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <job_name> has a value
     *
     * @return boolean
     */
    public function hasJobName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <job_name> value
     *
     * @return \google\storagetransfer\v1\GetTransferJobRequest
     */
    public function clearJobName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <job_name> value
     *
     * @return string
     */
    public function getJobName(){
      return $this->_get(1);
    }
    
    /**
     * Set <job_name> value
     *
     * @param string $value
     * @return \google\storagetransfer\v1\GetTransferJobRequest
     */
    public function setJobName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <project_id> has a value
     *
     * @return boolean
     */
    public function hasProjectId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <project_id> value
     *
     * @return \google\storagetransfer\v1\GetTransferJobRequest
     */
    public function clearProjectId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <project_id> value
     *
     * @return string
     */
    public function getProjectId(){
      return $this->_get(2);
    }
    
    /**
     * Set <project_id> value
     *
     * @param string $value
     * @return \google\storagetransfer\v1\GetTransferJobRequest
     */
    public function setProjectId( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\storagetransfer\v1 {

  class ListTransferJobsRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $filter = null;
    
    /**  @var int */
    public $page_size = null;
    
    /**  @var string */
    public $page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.storagetransfer.v1.ListTransferJobsRequest');

      // OPTIONAL STRING filter = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "filter";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 page_size = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "page_size";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING page_token = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <filter> has a value
     *
     * @return boolean
     */
    public function hasFilter(){
      return $this->_has(1);
    }
    
    /**
     * Clear <filter> value
     *
     * @return \google\storagetransfer\v1\ListTransferJobsRequest
     */
    public function clearFilter(){
      return $this->_clear(1);
    }
    
    /**
     * Get <filter> value
     *
     * @return string
     */
    public function getFilter(){
      return $this->_get(1);
    }
    
    /**
     * Set <filter> value
     *
     * @param string $value
     * @return \google\storagetransfer\v1\ListTransferJobsRequest
     */
    public function setFilter( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <page_size> has a value
     *
     * @return boolean
     */
    public function hasPageSize(){
      return $this->_has(4);
    }
    
    /**
     * Clear <page_size> value
     *
     * @return \google\storagetransfer\v1\ListTransferJobsRequest
     */
    public function clearPageSize(){
      return $this->_clear(4);
    }
    
    /**
     * Get <page_size> value
     *
     * @return int
     */
    public function getPageSize(){
      return $this->_get(4);
    }
    
    /**
     * Set <page_size> value
     *
     * @param int $value
     * @return \google\storagetransfer\v1\ListTransferJobsRequest
     */
    public function setPageSize( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <page_token> has a value
     *
     * @return boolean
     */
    public function hasPageToken(){
      return $this->_has(5);
    }
    
    /**
     * Clear <page_token> value
     *
     * @return \google\storagetransfer\v1\ListTransferJobsRequest
     */
    public function clearPageToken(){
      return $this->_clear(5);
    }
    
    /**
     * Get <page_token> value
     *
     * @return string
     */
    public function getPageToken(){
      return $this->_get(5);
    }
    
    /**
     * Set <page_token> value
     *
     * @param string $value
     * @return \google\storagetransfer\v1\ListTransferJobsRequest
     */
    public function setPageToken( $value){
      return $this->_set(5, $value);
    }
  }
}

namespace google\storagetransfer\v1 {

  class ListTransferJobsResponse extends \DrSlump\Protobuf\Message {

    /**  @var \google\storagetransfer\v1\TransferJob[]  */
    public $transfer_jobs = array();
    
    /**  @var string */
    public $next_page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.storagetransfer.v1.ListTransferJobsResponse');

      // REPEATED MESSAGE transfer_jobs = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "transfer_jobs";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\storagetransfer\v1\TransferJob';
      $descriptor->addField($f);

      // OPTIONAL STRING next_page_token = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "next_page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <transfer_jobs> has a value
     *
     * @return boolean
     */
    public function hasTransferJobs(){
      return $this->_has(1);
    }
    
    /**
     * Clear <transfer_jobs> value
     *
     * @return \google\storagetransfer\v1\ListTransferJobsResponse
     */
    public function clearTransferJobs(){
      return $this->_clear(1);
    }
    
    /**
     * Get <transfer_jobs> value
     *
     * @param int $idx
     * @return \google\storagetransfer\v1\TransferJob
     */
    public function getTransferJobs($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <transfer_jobs> value
     *
     * @param \google\storagetransfer\v1\TransferJob $value
     * @return \google\storagetransfer\v1\ListTransferJobsResponse
     */
    public function setTransferJobs(\google\storagetransfer\v1\TransferJob $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <transfer_jobs>
     *
     * @return \google\storagetransfer\v1\TransferJob[]
     */
    public function getTransferJobsList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <transfer_jobs>
     *
     * @param \google\storagetransfer\v1\TransferJob $value
     * @return \google\storagetransfer\v1\ListTransferJobsResponse
     */
    public function addTransferJobs(\google\storagetransfer\v1\TransferJob $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <next_page_token> has a value
     *
     * @return boolean
     */
    public function hasNextPageToken(){
      return $this->_has(2);
    }
    
    /**
     * Clear <next_page_token> value
     *
     * @return \google\storagetransfer\v1\ListTransferJobsResponse
     */
    public function clearNextPageToken(){
      return $this->_clear(2);
    }
    
    /**
     * Get <next_page_token> value
     *
     * @return string
     */
    public function getNextPageToken(){
      return $this->_get(2);
    }
    
    /**
     * Set <next_page_token> value
     *
     * @param string $value
     * @return \google\storagetransfer\v1\ListTransferJobsResponse
     */
    public function setNextPageToken( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\storagetransfer\v1 {

  class PauseTransferOperationRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.storagetransfer.v1.PauseTransferOperationRequest');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\storagetransfer\v1\PauseTransferOperationRequest
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\storagetransfer\v1\PauseTransferOperationRequest
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\storagetransfer\v1 {

  class ResumeTransferOperationRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.storagetransfer.v1.ResumeTransferOperationRequest');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\storagetransfer\v1\ResumeTransferOperationRequest
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\storagetransfer\v1\ResumeTransferOperationRequest
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\storagetransfer\v1 {

  class StorageTransferServiceClient extends \Grpc\BaseStub {

    public function __construct($hostname, $opts, $channel = null) {
      parent::__construct($hostname, $opts, $channel);
    }
    /**
     * @param google\storagetransfer\v1\GetGoogleServiceAccountRequest $input
     */
    public function GetGoogleServiceAccount(\google\storagetransfer\v1\GetGoogleServiceAccountRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.storagetransfer.v1.StorageTransferService/GetGoogleServiceAccount', $argument, '\google\storagetransfer\v1\GoogleServiceAccount::deserialize', $metadata, $options);
    }
    /**
     * @param google\storagetransfer\v1\CreateTransferJobRequest $input
     */
    public function CreateTransferJob(\google\storagetransfer\v1\CreateTransferJobRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.storagetransfer.v1.StorageTransferService/CreateTransferJob', $argument, '\google\storagetransfer\v1\TransferJob::deserialize', $metadata, $options);
    }
    /**
     * @param google\storagetransfer\v1\UpdateTransferJobRequest $input
     */
    public function UpdateTransferJob(\google\storagetransfer\v1\UpdateTransferJobRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.storagetransfer.v1.StorageTransferService/UpdateTransferJob', $argument, '\google\storagetransfer\v1\TransferJob::deserialize', $metadata, $options);
    }
    /**
     * @param google\storagetransfer\v1\GetTransferJobRequest $input
     */
    public function GetTransferJob(\google\storagetransfer\v1\GetTransferJobRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.storagetransfer.v1.StorageTransferService/GetTransferJob', $argument, '\google\storagetransfer\v1\TransferJob::deserialize', $metadata, $options);
    }
    /**
     * @param google\storagetransfer\v1\ListTransferJobsRequest $input
     */
    public function ListTransferJobs(\google\storagetransfer\v1\ListTransferJobsRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.storagetransfer.v1.StorageTransferService/ListTransferJobs', $argument, '\google\storagetransfer\v1\ListTransferJobsResponse::deserialize', $metadata, $options);
    }
    /**
     * @param google\storagetransfer\v1\PauseTransferOperationRequest $input
     */
    public function PauseTransferOperation(\google\storagetransfer\v1\PauseTransferOperationRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.storagetransfer.v1.StorageTransferService/PauseTransferOperation', $argument, '\google\protobuf\Empty::deserialize', $metadata, $options);
    }
    /**
     * @param google\storagetransfer\v1\ResumeTransferOperationRequest $input
     */
    public function ResumeTransferOperation(\google\storagetransfer\v1\ResumeTransferOperationRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.storagetransfer.v1.StorageTransferService/ResumeTransferOperation', $argument, '\google\protobuf\Empty::deserialize', $metadata, $options);
    }
  }
}
