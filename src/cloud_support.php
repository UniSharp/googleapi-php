<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: google/cloud/support/v1alpha1/cloud_support.proto
//   Date: 2017-06-13 04:24:37

namespace google\cloud\support\v1alpha1 {

  class GetSupportAccountRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.support.v1alpha1.GetSupportAccountRequest');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\cloud\support\v1alpha1\GetSupportAccountRequest
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\cloud\support\v1alpha1\GetSupportAccountRequest
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\cloud\support\v1alpha1 {

  class ListSupportAccountsRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $filter = null;
    
    /**  @var int */
    public $page_size = null;
    
    /**  @var string */
    public $page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.support.v1alpha1.ListSupportAccountsRequest');

      // OPTIONAL STRING filter = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "filter";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 page_size = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "page_size";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING page_token = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <filter> has a value
     *
     * @return boolean
     */
    public function hasFilter(){
      return $this->_has(1);
    }
    
    /**
     * Clear <filter> value
     *
     * @return \google\cloud\support\v1alpha1\ListSupportAccountsRequest
     */
    public function clearFilter(){
      return $this->_clear(1);
    }
    
    /**
     * Get <filter> value
     *
     * @return string
     */
    public function getFilter(){
      return $this->_get(1);
    }
    
    /**
     * Set <filter> value
     *
     * @param string $value
     * @return \google\cloud\support\v1alpha1\ListSupportAccountsRequest
     */
    public function setFilter( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <page_size> has a value
     *
     * @return boolean
     */
    public function hasPageSize(){
      return $this->_has(2);
    }
    
    /**
     * Clear <page_size> value
     *
     * @return \google\cloud\support\v1alpha1\ListSupportAccountsRequest
     */
    public function clearPageSize(){
      return $this->_clear(2);
    }
    
    /**
     * Get <page_size> value
     *
     * @return int
     */
    public function getPageSize(){
      return $this->_get(2);
    }
    
    /**
     * Set <page_size> value
     *
     * @param int $value
     * @return \google\cloud\support\v1alpha1\ListSupportAccountsRequest
     */
    public function setPageSize( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <page_token> has a value
     *
     * @return boolean
     */
    public function hasPageToken(){
      return $this->_has(3);
    }
    
    /**
     * Clear <page_token> value
     *
     * @return \google\cloud\support\v1alpha1\ListSupportAccountsRequest
     */
    public function clearPageToken(){
      return $this->_clear(3);
    }
    
    /**
     * Get <page_token> value
     *
     * @return string
     */
    public function getPageToken(){
      return $this->_get(3);
    }
    
    /**
     * Set <page_token> value
     *
     * @param string $value
     * @return \google\cloud\support\v1alpha1\ListSupportAccountsRequest
     */
    public function setPageToken( $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\cloud\support\v1alpha1 {

  class ListSupportAccountsResponse extends \DrSlump\Protobuf\Message {

    /**  @var \google\cloud\support\common\SupportAccount[]  */
    public $accounts = array();
    
    /**  @var string */
    public $next_page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.support.v1alpha1.ListSupportAccountsResponse');

      // REPEATED MESSAGE accounts = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "accounts";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\cloud\support\common\SupportAccount';
      $descriptor->addField($f);

      // OPTIONAL STRING next_page_token = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "next_page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <accounts> has a value
     *
     * @return boolean
     */
    public function hasAccounts(){
      return $this->_has(1);
    }
    
    /**
     * Clear <accounts> value
     *
     * @return \google\cloud\support\v1alpha1\ListSupportAccountsResponse
     */
    public function clearAccounts(){
      return $this->_clear(1);
    }
    
    /**
     * Get <accounts> value
     *
     * @param int $idx
     * @return \google\cloud\support\common\SupportAccount
     */
    public function getAccounts($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <accounts> value
     *
     * @param \google\cloud\support\common\SupportAccount $value
     * @return \google\cloud\support\v1alpha1\ListSupportAccountsResponse
     */
    public function setAccounts(\google\cloud\support\common\SupportAccount $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <accounts>
     *
     * @return \google\cloud\support\common\SupportAccount[]
     */
    public function getAccountsList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <accounts>
     *
     * @param \google\cloud\support\common\SupportAccount $value
     * @return \google\cloud\support\v1alpha1\ListSupportAccountsResponse
     */
    public function addAccounts(\google\cloud\support\common\SupportAccount $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <next_page_token> has a value
     *
     * @return boolean
     */
    public function hasNextPageToken(){
      return $this->_has(2);
    }
    
    /**
     * Clear <next_page_token> value
     *
     * @return \google\cloud\support\v1alpha1\ListSupportAccountsResponse
     */
    public function clearNextPageToken(){
      return $this->_clear(2);
    }
    
    /**
     * Get <next_page_token> value
     *
     * @return string
     */
    public function getNextPageToken(){
      return $this->_get(2);
    }
    
    /**
     * Set <next_page_token> value
     *
     * @param string $value
     * @return \google\cloud\support\v1alpha1\ListSupportAccountsResponse
     */
    public function setNextPageToken( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\cloud\support\v1alpha1 {

  class GetCaseRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.support.v1alpha1.GetCaseRequest');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\cloud\support\v1alpha1\GetCaseRequest
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\cloud\support\v1alpha1\GetCaseRequest
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\cloud\support\v1alpha1 {

  class ListCasesRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var string */
    public $filter = null;
    
    /**  @var int */
    public $page_size = null;
    
    /**  @var string */
    public $page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.support.v1alpha1.ListCasesRequest');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING filter = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "filter";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT64 page_size = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "page_size";
      $f->type      = \DrSlump\Protobuf::TYPE_INT64;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING page_token = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\cloud\support\v1alpha1\ListCasesRequest
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\cloud\support\v1alpha1\ListCasesRequest
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <filter> has a value
     *
     * @return boolean
     */
    public function hasFilter(){
      return $this->_has(2);
    }
    
    /**
     * Clear <filter> value
     *
     * @return \google\cloud\support\v1alpha1\ListCasesRequest
     */
    public function clearFilter(){
      return $this->_clear(2);
    }
    
    /**
     * Get <filter> value
     *
     * @return string
     */
    public function getFilter(){
      return $this->_get(2);
    }
    
    /**
     * Set <filter> value
     *
     * @param string $value
     * @return \google\cloud\support\v1alpha1\ListCasesRequest
     */
    public function setFilter( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <page_size> has a value
     *
     * @return boolean
     */
    public function hasPageSize(){
      return $this->_has(3);
    }
    
    /**
     * Clear <page_size> value
     *
     * @return \google\cloud\support\v1alpha1\ListCasesRequest
     */
    public function clearPageSize(){
      return $this->_clear(3);
    }
    
    /**
     * Get <page_size> value
     *
     * @return int
     */
    public function getPageSize(){
      return $this->_get(3);
    }
    
    /**
     * Set <page_size> value
     *
     * @param int $value
     * @return \google\cloud\support\v1alpha1\ListCasesRequest
     */
    public function setPageSize( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <page_token> has a value
     *
     * @return boolean
     */
    public function hasPageToken(){
      return $this->_has(4);
    }
    
    /**
     * Clear <page_token> value
     *
     * @return \google\cloud\support\v1alpha1\ListCasesRequest
     */
    public function clearPageToken(){
      return $this->_clear(4);
    }
    
    /**
     * Get <page_token> value
     *
     * @return string
     */
    public function getPageToken(){
      return $this->_get(4);
    }
    
    /**
     * Set <page_token> value
     *
     * @param string $value
     * @return \google\cloud\support\v1alpha1\ListCasesRequest
     */
    public function setPageToken( $value){
      return $this->_set(4, $value);
    }
  }
}

namespace google\cloud\support\v1alpha1 {

  class ListCasesResponse extends \DrSlump\Protobuf\Message {

    /**  @var \google\cloud\support\common\Case[]  */
    public $cases = array();
    
    /**  @var string */
    public $next_page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.support.v1alpha1.ListCasesResponse');

      // REPEATED MESSAGE cases = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "cases";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\cloud\support\common\Case';
      $descriptor->addField($f);

      // OPTIONAL STRING next_page_token = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "next_page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <cases> has a value
     *
     * @return boolean
     */
    public function hasCases(){
      return $this->_has(1);
    }
    
    /**
     * Clear <cases> value
     *
     * @return \google\cloud\support\v1alpha1\ListCasesResponse
     */
    public function clearCases(){
      return $this->_clear(1);
    }
    
    /**
     * Get <cases> value
     *
     * @param int $idx
     * @return \google\cloud\support\common\Case
     */
    public function getCases($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <cases> value
     *
     * @param \google\cloud\support\common\Case $value
     * @return \google\cloud\support\v1alpha1\ListCasesResponse
     */
    public function setCases(\google\cloud\support\common\Case $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <cases>
     *
     * @return \google\cloud\support\common\Case[]
     */
    public function getCasesList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <cases>
     *
     * @param \google\cloud\support\common\Case $value
     * @return \google\cloud\support\v1alpha1\ListCasesResponse
     */
    public function addCases(\google\cloud\support\common\Case $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <next_page_token> has a value
     *
     * @return boolean
     */
    public function hasNextPageToken(){
      return $this->_has(2);
    }
    
    /**
     * Clear <next_page_token> value
     *
     * @return \google\cloud\support\v1alpha1\ListCasesResponse
     */
    public function clearNextPageToken(){
      return $this->_clear(2);
    }
    
    /**
     * Get <next_page_token> value
     *
     * @return string
     */
    public function getNextPageToken(){
      return $this->_get(2);
    }
    
    /**
     * Set <next_page_token> value
     *
     * @param string $value
     * @return \google\cloud\support\v1alpha1\ListCasesResponse
     */
    public function setNextPageToken( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\cloud\support\v1alpha1 {

  class ListCommentsRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.support.v1alpha1.ListCommentsRequest');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\cloud\support\v1alpha1\ListCommentsRequest
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\cloud\support\v1alpha1\ListCommentsRequest
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\cloud\support\v1alpha1 {

  class ListCommentsResponse extends \DrSlump\Protobuf\Message {

    /**  @var \google\cloud\support\common\Comment[]  */
    public $comments = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.support.v1alpha1.ListCommentsResponse');

      // REPEATED MESSAGE comments = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "comments";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\cloud\support\common\Comment';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <comments> has a value
     *
     * @return boolean
     */
    public function hasComments(){
      return $this->_has(1);
    }
    
    /**
     * Clear <comments> value
     *
     * @return \google\cloud\support\v1alpha1\ListCommentsResponse
     */
    public function clearComments(){
      return $this->_clear(1);
    }
    
    /**
     * Get <comments> value
     *
     * @param int $idx
     * @return \google\cloud\support\common\Comment
     */
    public function getComments($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <comments> value
     *
     * @param \google\cloud\support\common\Comment $value
     * @return \google\cloud\support\v1alpha1\ListCommentsResponse
     */
    public function setComments(\google\cloud\support\common\Comment $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <comments>
     *
     * @return \google\cloud\support\common\Comment[]
     */
    public function getCommentsList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <comments>
     *
     * @param \google\cloud\support\common\Comment $value
     * @return \google\cloud\support\v1alpha1\ListCommentsResponse
     */
    public function addComments(\google\cloud\support\common\Comment $value){
     return $this->_add(1, $value);
    }
  }
}

namespace google\cloud\support\v1alpha1 {

  class CreateCaseRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $parent = null;
    
    /**  @var \google\cloud\support\common\Case */
    public $case = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.support.v1alpha1.CreateCaseRequest');

      // OPTIONAL STRING parent = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "parent";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE case = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "case";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\support\common\Case';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <parent> has a value
     *
     * @return boolean
     */
    public function hasParent(){
      return $this->_has(1);
    }
    
    /**
     * Clear <parent> value
     *
     * @return \google\cloud\support\v1alpha1\CreateCaseRequest
     */
    public function clearParent(){
      return $this->_clear(1);
    }
    
    /**
     * Get <parent> value
     *
     * @return string
     */
    public function getParent(){
      return $this->_get(1);
    }
    
    /**
     * Set <parent> value
     *
     * @param string $value
     * @return \google\cloud\support\v1alpha1\CreateCaseRequest
     */
    public function setParent( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <case> has a value
     *
     * @return boolean
     */
    public function hasCase(){
      return $this->_has(2);
    }
    
    /**
     * Clear <case> value
     *
     * @return \google\cloud\support\v1alpha1\CreateCaseRequest
     */
    public function clearCase(){
      return $this->_clear(2);
    }
    
    /**
     * Get <case> value
     *
     * @return \google\cloud\support\common\Case
     */
    public function getCase(){
      return $this->_get(2);
    }
    
    /**
     * Set <case> value
     *
     * @param \google\cloud\support\common\Case $value
     * @return \google\cloud\support\v1alpha1\CreateCaseRequest
     */
    public function setCase(\google\cloud\support\common\Case $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\cloud\support\v1alpha1 {

  class UpdateCaseRequest extends \DrSlump\Protobuf\Message {

    /**  @var \google\cloud\support\common\Case */
    public $case = null;
    
    /**  @var \google\protobuf\FieldMask */
    public $update_mask = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.support.v1alpha1.UpdateCaseRequest');

      // OPTIONAL MESSAGE case = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "case";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\support\common\Case';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE update_mask = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "update_mask";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\FieldMask';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <case> has a value
     *
     * @return boolean
     */
    public function hasCase(){
      return $this->_has(1);
    }
    
    /**
     * Clear <case> value
     *
     * @return \google\cloud\support\v1alpha1\UpdateCaseRequest
     */
    public function clearCase(){
      return $this->_clear(1);
    }
    
    /**
     * Get <case> value
     *
     * @return \google\cloud\support\common\Case
     */
    public function getCase(){
      return $this->_get(1);
    }
    
    /**
     * Set <case> value
     *
     * @param \google\cloud\support\common\Case $value
     * @return \google\cloud\support\v1alpha1\UpdateCaseRequest
     */
    public function setCase(\google\cloud\support\common\Case $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <update_mask> has a value
     *
     * @return boolean
     */
    public function hasUpdateMask(){
      return $this->_has(2);
    }
    
    /**
     * Clear <update_mask> value
     *
     * @return \google\cloud\support\v1alpha1\UpdateCaseRequest
     */
    public function clearUpdateMask(){
      return $this->_clear(2);
    }
    
    /**
     * Get <update_mask> value
     *
     * @return \google\protobuf\FieldMask
     */
    public function getUpdateMask(){
      return $this->_get(2);
    }
    
    /**
     * Set <update_mask> value
     *
     * @param \google\protobuf\FieldMask $value
     * @return \google\cloud\support\v1alpha1\UpdateCaseRequest
     */
    public function setUpdateMask(\google\protobuf\FieldMask $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\cloud\support\v1alpha1 {

  class CreateCommentRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var \google\cloud\support\common\Comment */
    public $comment = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.support.v1alpha1.CreateCommentRequest');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE comment = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "comment";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\support\common\Comment';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\cloud\support\v1alpha1\CreateCommentRequest
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\cloud\support\v1alpha1\CreateCommentRequest
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <comment> has a value
     *
     * @return boolean
     */
    public function hasComment(){
      return $this->_has(2);
    }
    
    /**
     * Clear <comment> value
     *
     * @return \google\cloud\support\v1alpha1\CreateCommentRequest
     */
    public function clearComment(){
      return $this->_clear(2);
    }
    
    /**
     * Get <comment> value
     *
     * @return \google\cloud\support\common\Comment
     */
    public function getComment(){
      return $this->_get(2);
    }
    
    /**
     * Set <comment> value
     *
     * @param \google\cloud\support\common\Comment $value
     * @return \google\cloud\support\v1alpha1\CreateCommentRequest
     */
    public function setComment(\google\cloud\support\common\Comment $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\cloud\support\v1alpha1 {

  class GetIssueTaxonomyRequest extends \DrSlump\Protobuf\Message {


    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.support.v1alpha1.GetIssueTaxonomyRequest');

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }
  }
}

namespace google\cloud\support\v1alpha1 {

  class CloudSupportClient extends \Grpc\BaseStub {

    public function __construct($hostname, $opts, $channel = null) {
      parent::__construct($hostname, $opts, $channel);
    }
    /**
     * @param google\cloud\support\v1alpha1\GetSupportAccountRequest $input
     */
    public function GetSupportAccount(\google\cloud\support\v1alpha1\GetSupportAccountRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.cloud.support.v1alpha1.CloudSupport/GetSupportAccount', $argument, '\google\cloud\support\common\SupportAccount::deserialize', $metadata, $options);
    }
    /**
     * @param google\cloud\support\v1alpha1\ListSupportAccountsRequest $input
     */
    public function ListSupportAccounts(\google\cloud\support\v1alpha1\ListSupportAccountsRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.cloud.support.v1alpha1.CloudSupport/ListSupportAccounts', $argument, '\google\cloud\support\v1alpha1\ListSupportAccountsResponse::deserialize', $metadata, $options);
    }
    /**
     * @param google\cloud\support\v1alpha1\GetCaseRequest $input
     */
    public function GetCase(\google\cloud\support\v1alpha1\GetCaseRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.cloud.support.v1alpha1.CloudSupport/GetCase', $argument, '\google\cloud\support\common\Case::deserialize', $metadata, $options);
    }
    /**
     * @param google\cloud\support\v1alpha1\ListCasesRequest $input
     */
    public function ListCases(\google\cloud\support\v1alpha1\ListCasesRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.cloud.support.v1alpha1.CloudSupport/ListCases', $argument, '\google\cloud\support\v1alpha1\ListCasesResponse::deserialize', $metadata, $options);
    }
    /**
     * @param google\cloud\support\v1alpha1\ListCommentsRequest $input
     */
    public function ListComments(\google\cloud\support\v1alpha1\ListCommentsRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.cloud.support.v1alpha1.CloudSupport/ListComments', $argument, '\google\cloud\support\v1alpha1\ListCommentsResponse::deserialize', $metadata, $options);
    }
    /**
     * @param google\cloud\support\v1alpha1\CreateCaseRequest $input
     */
    public function CreateCase(\google\cloud\support\v1alpha1\CreateCaseRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.cloud.support.v1alpha1.CloudSupport/CreateCase', $argument, '\google\cloud\support\common\Case::deserialize', $metadata, $options);
    }
    /**
     * @param google\cloud\support\v1alpha1\UpdateCaseRequest $input
     */
    public function UpdateCase(\google\cloud\support\v1alpha1\UpdateCaseRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.cloud.support.v1alpha1.CloudSupport/UpdateCase', $argument, '\google\cloud\support\common\Case::deserialize', $metadata, $options);
    }
    /**
     * @param google\cloud\support\v1alpha1\CreateCommentRequest $input
     */
    public function CreateComment(\google\cloud\support\v1alpha1\CreateCommentRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.cloud.support.v1alpha1.CloudSupport/CreateComment', $argument, '\google\cloud\support\common\Comment::deserialize', $metadata, $options);
    }
    /**
     * @param google\cloud\support\v1alpha1\GetIssueTaxonomyRequest $input
     */
    public function GetIssueTaxonomy(\google\cloud\support\v1alpha1\GetIssueTaxonomyRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.cloud.support.v1alpha1.CloudSupport/GetIssueTaxonomy', $argument, '\google\cloud\support\common\IssueTaxonomy::deserialize', $metadata, $options);
    }
  }
}
