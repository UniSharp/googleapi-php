<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: google/example/library/v1/library.proto
//   Date: 2017-06-13 04:25:26

namespace google\example\library\v1 {

  class Book extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var string */
    public $author = null;
    
    /**  @var string */
    public $title = null;
    
    /**  @var boolean */
    public $read = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.example.library.v1.Book');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING author = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "author";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING title = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "title";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL BOOL read = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "read";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\example\library\v1\Book
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\example\library\v1\Book
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <author> has a value
     *
     * @return boolean
     */
    public function hasAuthor(){
      return $this->_has(2);
    }
    
    /**
     * Clear <author> value
     *
     * @return \google\example\library\v1\Book
     */
    public function clearAuthor(){
      return $this->_clear(2);
    }
    
    /**
     * Get <author> value
     *
     * @return string
     */
    public function getAuthor(){
      return $this->_get(2);
    }
    
    /**
     * Set <author> value
     *
     * @param string $value
     * @return \google\example\library\v1\Book
     */
    public function setAuthor( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <title> has a value
     *
     * @return boolean
     */
    public function hasTitle(){
      return $this->_has(3);
    }
    
    /**
     * Clear <title> value
     *
     * @return \google\example\library\v1\Book
     */
    public function clearTitle(){
      return $this->_clear(3);
    }
    
    /**
     * Get <title> value
     *
     * @return string
     */
    public function getTitle(){
      return $this->_get(3);
    }
    
    /**
     * Set <title> value
     *
     * @param string $value
     * @return \google\example\library\v1\Book
     */
    public function setTitle( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <read> has a value
     *
     * @return boolean
     */
    public function hasRead(){
      return $this->_has(4);
    }
    
    /**
     * Clear <read> value
     *
     * @return \google\example\library\v1\Book
     */
    public function clearRead(){
      return $this->_clear(4);
    }
    
    /**
     * Get <read> value
     *
     * @return boolean
     */
    public function getRead(){
      return $this->_get(4);
    }
    
    /**
     * Set <read> value
     *
     * @param boolean $value
     * @return \google\example\library\v1\Book
     */
    public function setRead( $value){
      return $this->_set(4, $value);
    }
  }
}

namespace google\example\library\v1 {

  class Shelf extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var string */
    public $theme = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.example.library.v1.Shelf');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING theme = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "theme";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\example\library\v1\Shelf
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\example\library\v1\Shelf
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <theme> has a value
     *
     * @return boolean
     */
    public function hasTheme(){
      return $this->_has(2);
    }
    
    /**
     * Clear <theme> value
     *
     * @return \google\example\library\v1\Shelf
     */
    public function clearTheme(){
      return $this->_clear(2);
    }
    
    /**
     * Get <theme> value
     *
     * @return string
     */
    public function getTheme(){
      return $this->_get(2);
    }
    
    /**
     * Set <theme> value
     *
     * @param string $value
     * @return \google\example\library\v1\Shelf
     */
    public function setTheme( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\example\library\v1 {

  class CreateShelfRequest extends \DrSlump\Protobuf\Message {

    /**  @var \google\example\library\v1\Shelf */
    public $shelf = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.example.library.v1.CreateShelfRequest');

      // OPTIONAL MESSAGE shelf = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "shelf";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\example\library\v1\Shelf';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <shelf> has a value
     *
     * @return boolean
     */
    public function hasShelf(){
      return $this->_has(1);
    }
    
    /**
     * Clear <shelf> value
     *
     * @return \google\example\library\v1\CreateShelfRequest
     */
    public function clearShelf(){
      return $this->_clear(1);
    }
    
    /**
     * Get <shelf> value
     *
     * @return \google\example\library\v1\Shelf
     */
    public function getShelf(){
      return $this->_get(1);
    }
    
    /**
     * Set <shelf> value
     *
     * @param \google\example\library\v1\Shelf $value
     * @return \google\example\library\v1\CreateShelfRequest
     */
    public function setShelf(\google\example\library\v1\Shelf $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\example\library\v1 {

  class GetShelfRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.example.library.v1.GetShelfRequest');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\example\library\v1\GetShelfRequest
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\example\library\v1\GetShelfRequest
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\example\library\v1 {

  class ListShelvesRequest extends \DrSlump\Protobuf\Message {

    /**  @var int */
    public $page_size = null;
    
    /**  @var string */
    public $page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.example.library.v1.ListShelvesRequest');

      // OPTIONAL INT32 page_size = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "page_size";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING page_token = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <page_size> has a value
     *
     * @return boolean
     */
    public function hasPageSize(){
      return $this->_has(1);
    }
    
    /**
     * Clear <page_size> value
     *
     * @return \google\example\library\v1\ListShelvesRequest
     */
    public function clearPageSize(){
      return $this->_clear(1);
    }
    
    /**
     * Get <page_size> value
     *
     * @return int
     */
    public function getPageSize(){
      return $this->_get(1);
    }
    
    /**
     * Set <page_size> value
     *
     * @param int $value
     * @return \google\example\library\v1\ListShelvesRequest
     */
    public function setPageSize( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <page_token> has a value
     *
     * @return boolean
     */
    public function hasPageToken(){
      return $this->_has(2);
    }
    
    /**
     * Clear <page_token> value
     *
     * @return \google\example\library\v1\ListShelvesRequest
     */
    public function clearPageToken(){
      return $this->_clear(2);
    }
    
    /**
     * Get <page_token> value
     *
     * @return string
     */
    public function getPageToken(){
      return $this->_get(2);
    }
    
    /**
     * Set <page_token> value
     *
     * @param string $value
     * @return \google\example\library\v1\ListShelvesRequest
     */
    public function setPageToken( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\example\library\v1 {

  class ListShelvesResponse extends \DrSlump\Protobuf\Message {

    /**  @var \google\example\library\v1\Shelf[]  */
    public $shelves = array();
    
    /**  @var string */
    public $next_page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.example.library.v1.ListShelvesResponse');

      // REPEATED MESSAGE shelves = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "shelves";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\example\library\v1\Shelf';
      $descriptor->addField($f);

      // OPTIONAL STRING next_page_token = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "next_page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <shelves> has a value
     *
     * @return boolean
     */
    public function hasShelves(){
      return $this->_has(1);
    }
    
    /**
     * Clear <shelves> value
     *
     * @return \google\example\library\v1\ListShelvesResponse
     */
    public function clearShelves(){
      return $this->_clear(1);
    }
    
    /**
     * Get <shelves> value
     *
     * @param int $idx
     * @return \google\example\library\v1\Shelf
     */
    public function getShelves($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <shelves> value
     *
     * @param \google\example\library\v1\Shelf $value
     * @return \google\example\library\v1\ListShelvesResponse
     */
    public function setShelves(\google\example\library\v1\Shelf $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <shelves>
     *
     * @return \google\example\library\v1\Shelf[]
     */
    public function getShelvesList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <shelves>
     *
     * @param \google\example\library\v1\Shelf $value
     * @return \google\example\library\v1\ListShelvesResponse
     */
    public function addShelves(\google\example\library\v1\Shelf $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <next_page_token> has a value
     *
     * @return boolean
     */
    public function hasNextPageToken(){
      return $this->_has(2);
    }
    
    /**
     * Clear <next_page_token> value
     *
     * @return \google\example\library\v1\ListShelvesResponse
     */
    public function clearNextPageToken(){
      return $this->_clear(2);
    }
    
    /**
     * Get <next_page_token> value
     *
     * @return string
     */
    public function getNextPageToken(){
      return $this->_get(2);
    }
    
    /**
     * Set <next_page_token> value
     *
     * @param string $value
     * @return \google\example\library\v1\ListShelvesResponse
     */
    public function setNextPageToken( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\example\library\v1 {

  class DeleteShelfRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.example.library.v1.DeleteShelfRequest');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\example\library\v1\DeleteShelfRequest
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\example\library\v1\DeleteShelfRequest
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\example\library\v1 {

  class MergeShelvesRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var string */
    public $other_shelf_name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.example.library.v1.MergeShelvesRequest');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING other_shelf_name = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "other_shelf_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\example\library\v1\MergeShelvesRequest
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\example\library\v1\MergeShelvesRequest
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <other_shelf_name> has a value
     *
     * @return boolean
     */
    public function hasOtherShelfName(){
      return $this->_has(2);
    }
    
    /**
     * Clear <other_shelf_name> value
     *
     * @return \google\example\library\v1\MergeShelvesRequest
     */
    public function clearOtherShelfName(){
      return $this->_clear(2);
    }
    
    /**
     * Get <other_shelf_name> value
     *
     * @return string
     */
    public function getOtherShelfName(){
      return $this->_get(2);
    }
    
    /**
     * Set <other_shelf_name> value
     *
     * @param string $value
     * @return \google\example\library\v1\MergeShelvesRequest
     */
    public function setOtherShelfName( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\example\library\v1 {

  class CreateBookRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var \google\example\library\v1\Book */
    public $book = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.example.library.v1.CreateBookRequest');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE book = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "book";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\example\library\v1\Book';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\example\library\v1\CreateBookRequest
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\example\library\v1\CreateBookRequest
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <book> has a value
     *
     * @return boolean
     */
    public function hasBook(){
      return $this->_has(2);
    }
    
    /**
     * Clear <book> value
     *
     * @return \google\example\library\v1\CreateBookRequest
     */
    public function clearBook(){
      return $this->_clear(2);
    }
    
    /**
     * Get <book> value
     *
     * @return \google\example\library\v1\Book
     */
    public function getBook(){
      return $this->_get(2);
    }
    
    /**
     * Set <book> value
     *
     * @param \google\example\library\v1\Book $value
     * @return \google\example\library\v1\CreateBookRequest
     */
    public function setBook(\google\example\library\v1\Book $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\example\library\v1 {

  class GetBookRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.example.library.v1.GetBookRequest');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\example\library\v1\GetBookRequest
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\example\library\v1\GetBookRequest
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\example\library\v1 {

  class ListBooksRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var int */
    public $page_size = null;
    
    /**  @var string */
    public $page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.example.library.v1.ListBooksRequest');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 page_size = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "page_size";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING page_token = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\example\library\v1\ListBooksRequest
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\example\library\v1\ListBooksRequest
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <page_size> has a value
     *
     * @return boolean
     */
    public function hasPageSize(){
      return $this->_has(2);
    }
    
    /**
     * Clear <page_size> value
     *
     * @return \google\example\library\v1\ListBooksRequest
     */
    public function clearPageSize(){
      return $this->_clear(2);
    }
    
    /**
     * Get <page_size> value
     *
     * @return int
     */
    public function getPageSize(){
      return $this->_get(2);
    }
    
    /**
     * Set <page_size> value
     *
     * @param int $value
     * @return \google\example\library\v1\ListBooksRequest
     */
    public function setPageSize( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <page_token> has a value
     *
     * @return boolean
     */
    public function hasPageToken(){
      return $this->_has(3);
    }
    
    /**
     * Clear <page_token> value
     *
     * @return \google\example\library\v1\ListBooksRequest
     */
    public function clearPageToken(){
      return $this->_clear(3);
    }
    
    /**
     * Get <page_token> value
     *
     * @return string
     */
    public function getPageToken(){
      return $this->_get(3);
    }
    
    /**
     * Set <page_token> value
     *
     * @param string $value
     * @return \google\example\library\v1\ListBooksRequest
     */
    public function setPageToken( $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\example\library\v1 {

  class ListBooksResponse extends \DrSlump\Protobuf\Message {

    /**  @var \google\example\library\v1\Book[]  */
    public $books = array();
    
    /**  @var string */
    public $next_page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.example.library.v1.ListBooksResponse');

      // REPEATED MESSAGE books = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "books";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\example\library\v1\Book';
      $descriptor->addField($f);

      // OPTIONAL STRING next_page_token = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "next_page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <books> has a value
     *
     * @return boolean
     */
    public function hasBooks(){
      return $this->_has(1);
    }
    
    /**
     * Clear <books> value
     *
     * @return \google\example\library\v1\ListBooksResponse
     */
    public function clearBooks(){
      return $this->_clear(1);
    }
    
    /**
     * Get <books> value
     *
     * @param int $idx
     * @return \google\example\library\v1\Book
     */
    public function getBooks($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <books> value
     *
     * @param \google\example\library\v1\Book $value
     * @return \google\example\library\v1\ListBooksResponse
     */
    public function setBooks(\google\example\library\v1\Book $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <books>
     *
     * @return \google\example\library\v1\Book[]
     */
    public function getBooksList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <books>
     *
     * @param \google\example\library\v1\Book $value
     * @return \google\example\library\v1\ListBooksResponse
     */
    public function addBooks(\google\example\library\v1\Book $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <next_page_token> has a value
     *
     * @return boolean
     */
    public function hasNextPageToken(){
      return $this->_has(2);
    }
    
    /**
     * Clear <next_page_token> value
     *
     * @return \google\example\library\v1\ListBooksResponse
     */
    public function clearNextPageToken(){
      return $this->_clear(2);
    }
    
    /**
     * Get <next_page_token> value
     *
     * @return string
     */
    public function getNextPageToken(){
      return $this->_get(2);
    }
    
    /**
     * Set <next_page_token> value
     *
     * @param string $value
     * @return \google\example\library\v1\ListBooksResponse
     */
    public function setNextPageToken( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\example\library\v1 {

  class UpdateBookRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var \google\example\library\v1\Book */
    public $book = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.example.library.v1.UpdateBookRequest');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE book = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "book";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\example\library\v1\Book';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\example\library\v1\UpdateBookRequest
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\example\library\v1\UpdateBookRequest
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <book> has a value
     *
     * @return boolean
     */
    public function hasBook(){
      return $this->_has(2);
    }
    
    /**
     * Clear <book> value
     *
     * @return \google\example\library\v1\UpdateBookRequest
     */
    public function clearBook(){
      return $this->_clear(2);
    }
    
    /**
     * Get <book> value
     *
     * @return \google\example\library\v1\Book
     */
    public function getBook(){
      return $this->_get(2);
    }
    
    /**
     * Set <book> value
     *
     * @param \google\example\library\v1\Book $value
     * @return \google\example\library\v1\UpdateBookRequest
     */
    public function setBook(\google\example\library\v1\Book $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\example\library\v1 {

  class DeleteBookRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.example.library.v1.DeleteBookRequest');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\example\library\v1\DeleteBookRequest
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\example\library\v1\DeleteBookRequest
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\example\library\v1 {

  class MoveBookRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var string */
    public $other_shelf_name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.example.library.v1.MoveBookRequest');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING other_shelf_name = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "other_shelf_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\example\library\v1\MoveBookRequest
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\example\library\v1\MoveBookRequest
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <other_shelf_name> has a value
     *
     * @return boolean
     */
    public function hasOtherShelfName(){
      return $this->_has(2);
    }
    
    /**
     * Clear <other_shelf_name> value
     *
     * @return \google\example\library\v1\MoveBookRequest
     */
    public function clearOtherShelfName(){
      return $this->_clear(2);
    }
    
    /**
     * Get <other_shelf_name> value
     *
     * @return string
     */
    public function getOtherShelfName(){
      return $this->_get(2);
    }
    
    /**
     * Set <other_shelf_name> value
     *
     * @param string $value
     * @return \google\example\library\v1\MoveBookRequest
     */
    public function setOtherShelfName( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\example\library\v1 {

  class LibraryServiceClient extends \Grpc\BaseStub {

    public function __construct($hostname, $opts, $channel = null) {
      parent::__construct($hostname, $opts, $channel);
    }
    /**
     * @param google\example\library\v1\CreateShelfRequest $input
     */
    public function CreateShelf(\google\example\library\v1\CreateShelfRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.example.library.v1.LibraryService/CreateShelf', $argument, '\google\example\library\v1\Shelf::deserialize', $metadata, $options);
    }
    /**
     * @param google\example\library\v1\GetShelfRequest $input
     */
    public function GetShelf(\google\example\library\v1\GetShelfRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.example.library.v1.LibraryService/GetShelf', $argument, '\google\example\library\v1\Shelf::deserialize', $metadata, $options);
    }
    /**
     * @param google\example\library\v1\ListShelvesRequest $input
     */
    public function ListShelves(\google\example\library\v1\ListShelvesRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.example.library.v1.LibraryService/ListShelves', $argument, '\google\example\library\v1\ListShelvesResponse::deserialize', $metadata, $options);
    }
    /**
     * @param google\example\library\v1\DeleteShelfRequest $input
     */
    public function DeleteShelf(\google\example\library\v1\DeleteShelfRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.example.library.v1.LibraryService/DeleteShelf', $argument, '\google\protobuf\Empty::deserialize', $metadata, $options);
    }
    /**
     * @param google\example\library\v1\MergeShelvesRequest $input
     */
    public function MergeShelves(\google\example\library\v1\MergeShelvesRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.example.library.v1.LibraryService/MergeShelves', $argument, '\google\example\library\v1\Shelf::deserialize', $metadata, $options);
    }
    /**
     * @param google\example\library\v1\CreateBookRequest $input
     */
    public function CreateBook(\google\example\library\v1\CreateBookRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.example.library.v1.LibraryService/CreateBook', $argument, '\google\example\library\v1\Book::deserialize', $metadata, $options);
    }
    /**
     * @param google\example\library\v1\GetBookRequest $input
     */
    public function GetBook(\google\example\library\v1\GetBookRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.example.library.v1.LibraryService/GetBook', $argument, '\google\example\library\v1\Book::deserialize', $metadata, $options);
    }
    /**
     * @param google\example\library\v1\ListBooksRequest $input
     */
    public function ListBooks(\google\example\library\v1\ListBooksRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.example.library.v1.LibraryService/ListBooks', $argument, '\google\example\library\v1\ListBooksResponse::deserialize', $metadata, $options);
    }
    /**
     * @param google\example\library\v1\DeleteBookRequest $input
     */
    public function DeleteBook(\google\example\library\v1\DeleteBookRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.example.library.v1.LibraryService/DeleteBook', $argument, '\google\protobuf\Empty::deserialize', $metadata, $options);
    }
    /**
     * @param google\example\library\v1\UpdateBookRequest $input
     */
    public function UpdateBook(\google\example\library\v1\UpdateBookRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.example.library.v1.LibraryService/UpdateBook', $argument, '\google\example\library\v1\Book::deserialize', $metadata, $options);
    }
    /**
     * @param google\example\library\v1\MoveBookRequest $input
     */
    public function MoveBook(\google\example\library\v1\MoveBookRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.example.library.v1.LibraryService/MoveBook', $argument, '\google\example\library\v1\Book::deserialize', $metadata, $options);
    }
  }
}
