<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: google/cloud/dataproc/v1/jobs.proto
//   Date: 2017-06-13 04:23:56

namespace google\cloud\dataproc\v1\LoggingConfig {

  class Level extends \DrSlump\Protobuf\Enum {
    const LEVEL_UNSPECIFIED = 0;
    const ALL = 1;
    const TRACE = 2;
    const DEBUG = 3;
    const INFO = 4;
    const WARN = 5;
    const ERROR = 6;
    const FATAL = 7;
    const OFF = 8;
  }
}
namespace google\cloud\dataproc\v1\LoggingConfig {

  class DriverLogLevelsEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $key = null;
    
    /**  @var int - \google\cloud\dataproc\v1\LoggingConfig\Level */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.dataproc.v1.LoggingConfig.DriverLogLevelsEntry');

      // OPTIONAL STRING key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL ENUM value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\dataproc\v1\LoggingConfig\Level';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <key> has a value
     *
     * @return boolean
     */
    public function hasKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <key> value
     *
     * @return \google\cloud\dataproc\v1\LoggingConfig\DriverLogLevelsEntry
     */
    public function clearKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <key> value
     *
     * @return string
     */
    public function getKey(){
      return $this->_get(1);
    }
    
    /**
     * Set <key> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\LoggingConfig\DriverLogLevelsEntry
     */
    public function setKey( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\cloud\dataproc\v1\LoggingConfig\DriverLogLevelsEntry
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return int - \google\cloud\dataproc\v1\LoggingConfig\Level
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param int - \google\cloud\dataproc\v1\LoggingConfig\Level $value
     * @return \google\cloud\dataproc\v1\LoggingConfig\DriverLogLevelsEntry
     */
    public function setValue( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\cloud\dataproc\v1 {

  class LoggingConfig extends \DrSlump\Protobuf\Message {

    /**  @var \google\cloud\dataproc\v1\LoggingConfig\DriverLogLevelsEntry[]  */
    public $driver_log_levels = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.dataproc.v1.LoggingConfig');

      // REPEATED MESSAGE driver_log_levels = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "driver_log_levels";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\cloud\dataproc\v1\LoggingConfig\DriverLogLevelsEntry';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <driver_log_levels> has a value
     *
     * @return boolean
     */
    public function hasDriverLogLevels(){
      return $this->_has(2);
    }
    
    /**
     * Clear <driver_log_levels> value
     *
     * @return \google\cloud\dataproc\v1\LoggingConfig
     */
    public function clearDriverLogLevels(){
      return $this->_clear(2);
    }
    
    /**
     * Get <driver_log_levels> value
     *
     * @param int $idx
     * @return \google\cloud\dataproc\v1\LoggingConfig\DriverLogLevelsEntry
     */
    public function getDriverLogLevels($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <driver_log_levels> value
     *
     * @param \google\cloud\dataproc\v1\LoggingConfig\DriverLogLevelsEntry $value
     * @return \google\cloud\dataproc\v1\LoggingConfig
     */
    public function setDriverLogLevels(\google\cloud\dataproc\v1\LoggingConfig\DriverLogLevelsEntry $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <driver_log_levels>
     *
     * @return \google\cloud\dataproc\v1\LoggingConfig\DriverLogLevelsEntry[]
     */
    public function getDriverLogLevelsList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <driver_log_levels>
     *
     * @param \google\cloud\dataproc\v1\LoggingConfig\DriverLogLevelsEntry $value
     * @return \google\cloud\dataproc\v1\LoggingConfig
     */
    public function addDriverLogLevels(\google\cloud\dataproc\v1\LoggingConfig\DriverLogLevelsEntry $value){
     return $this->_add(2, $value);
    }
  }
}

namespace google\cloud\dataproc\v1\HadoopJob {

  class PropertiesEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $key = null;
    
    /**  @var string */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.dataproc.v1.HadoopJob.PropertiesEntry');

      // OPTIONAL STRING key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <key> has a value
     *
     * @return boolean
     */
    public function hasKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <key> value
     *
     * @return \google\cloud\dataproc\v1\HadoopJob\PropertiesEntry
     */
    public function clearKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <key> value
     *
     * @return string
     */
    public function getKey(){
      return $this->_get(1);
    }
    
    /**
     * Set <key> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\HadoopJob\PropertiesEntry
     */
    public function setKey( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\cloud\dataproc\v1\HadoopJob\PropertiesEntry
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return string
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\HadoopJob\PropertiesEntry
     */
    public function setValue( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\cloud\dataproc\v1 {

  class HadoopJob extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $main_jar_file_uri = null;
    
    /**  @var string */
    public $main_class = null;
    
    /**  @var string[]  */
    public $args = array();
    
    /**  @var string[]  */
    public $jar_file_uris = array();
    
    /**  @var string[]  */
    public $file_uris = array();
    
    /**  @var string[]  */
    public $archive_uris = array();
    
    /**  @var \google\cloud\dataproc\v1\HadoopJob\PropertiesEntry[]  */
    public $properties = array();
    
    /**  @var \google\cloud\dataproc\v1\LoggingConfig */
    public $logging_config = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.dataproc.v1.HadoopJob');

      // OPTIONAL STRING main_jar_file_uri = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "main_jar_file_uri";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING main_class = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "main_class";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED STRING args = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "args";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // REPEATED STRING jar_file_uris = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "jar_file_uris";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // REPEATED STRING file_uris = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "file_uris";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // REPEATED STRING archive_uris = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "archive_uris";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // REPEATED MESSAGE properties = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "properties";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\cloud\dataproc\v1\HadoopJob\PropertiesEntry';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE logging_config = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "logging_config";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\dataproc\v1\LoggingConfig';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <main_jar_file_uri> has a value
     *
     * @return boolean
     */
    public function hasMainJarFileUri(){
      return $this->_has(1);
    }
    
    /**
     * Clear <main_jar_file_uri> value
     *
     * @return \google\cloud\dataproc\v1\HadoopJob
     */
    public function clearMainJarFileUri(){
      return $this->_clear(1);
    }
    
    /**
     * Get <main_jar_file_uri> value
     *
     * @return string
     */
    public function getMainJarFileUri(){
      return $this->_get(1);
    }
    
    /**
     * Set <main_jar_file_uri> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\HadoopJob
     */
    public function setMainJarFileUri( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <main_class> has a value
     *
     * @return boolean
     */
    public function hasMainClass(){
      return $this->_has(2);
    }
    
    /**
     * Clear <main_class> value
     *
     * @return \google\cloud\dataproc\v1\HadoopJob
     */
    public function clearMainClass(){
      return $this->_clear(2);
    }
    
    /**
     * Get <main_class> value
     *
     * @return string
     */
    public function getMainClass(){
      return $this->_get(2);
    }
    
    /**
     * Set <main_class> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\HadoopJob
     */
    public function setMainClass( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <args> has a value
     *
     * @return boolean
     */
    public function hasArgs(){
      return $this->_has(3);
    }
    
    /**
     * Clear <args> value
     *
     * @return \google\cloud\dataproc\v1\HadoopJob
     */
    public function clearArgs(){
      return $this->_clear(3);
    }
    
    /**
     * Get <args> value
     *
     * @param int $idx
     * @return string
     */
    public function getArgs($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <args> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\HadoopJob
     */
    public function setArgs( $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <args>
     *
     * @return string[]
     */
    public function getArgsList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <args>
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\HadoopJob
     */
    public function addArgs( $value){
     return $this->_add(3, $value);
    }
    
    /**
     * Check if <jar_file_uris> has a value
     *
     * @return boolean
     */
    public function hasJarFileUris(){
      return $this->_has(4);
    }
    
    /**
     * Clear <jar_file_uris> value
     *
     * @return \google\cloud\dataproc\v1\HadoopJob
     */
    public function clearJarFileUris(){
      return $this->_clear(4);
    }
    
    /**
     * Get <jar_file_uris> value
     *
     * @param int $idx
     * @return string
     */
    public function getJarFileUris($idx = NULL){
      return $this->_get(4, $idx);
    }
    
    /**
     * Set <jar_file_uris> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\HadoopJob
     */
    public function setJarFileUris( $value, $idx = NULL){
      return $this->_set(4, $value, $idx);
    }
    
    /**
     * Get all elements of <jar_file_uris>
     *
     * @return string[]
     */
    public function getJarFileUrisList(){
     return $this->_get(4);
    }
    
    /**
     * Add a new element to <jar_file_uris>
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\HadoopJob
     */
    public function addJarFileUris( $value){
     return $this->_add(4, $value);
    }
    
    /**
     * Check if <file_uris> has a value
     *
     * @return boolean
     */
    public function hasFileUris(){
      return $this->_has(5);
    }
    
    /**
     * Clear <file_uris> value
     *
     * @return \google\cloud\dataproc\v1\HadoopJob
     */
    public function clearFileUris(){
      return $this->_clear(5);
    }
    
    /**
     * Get <file_uris> value
     *
     * @param int $idx
     * @return string
     */
    public function getFileUris($idx = NULL){
      return $this->_get(5, $idx);
    }
    
    /**
     * Set <file_uris> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\HadoopJob
     */
    public function setFileUris( $value, $idx = NULL){
      return $this->_set(5, $value, $idx);
    }
    
    /**
     * Get all elements of <file_uris>
     *
     * @return string[]
     */
    public function getFileUrisList(){
     return $this->_get(5);
    }
    
    /**
     * Add a new element to <file_uris>
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\HadoopJob
     */
    public function addFileUris( $value){
     return $this->_add(5, $value);
    }
    
    /**
     * Check if <archive_uris> has a value
     *
     * @return boolean
     */
    public function hasArchiveUris(){
      return $this->_has(6);
    }
    
    /**
     * Clear <archive_uris> value
     *
     * @return \google\cloud\dataproc\v1\HadoopJob
     */
    public function clearArchiveUris(){
      return $this->_clear(6);
    }
    
    /**
     * Get <archive_uris> value
     *
     * @param int $idx
     * @return string
     */
    public function getArchiveUris($idx = NULL){
      return $this->_get(6, $idx);
    }
    
    /**
     * Set <archive_uris> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\HadoopJob
     */
    public function setArchiveUris( $value, $idx = NULL){
      return $this->_set(6, $value, $idx);
    }
    
    /**
     * Get all elements of <archive_uris>
     *
     * @return string[]
     */
    public function getArchiveUrisList(){
     return $this->_get(6);
    }
    
    /**
     * Add a new element to <archive_uris>
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\HadoopJob
     */
    public function addArchiveUris( $value){
     return $this->_add(6, $value);
    }
    
    /**
     * Check if <properties> has a value
     *
     * @return boolean
     */
    public function hasProperties(){
      return $this->_has(7);
    }
    
    /**
     * Clear <properties> value
     *
     * @return \google\cloud\dataproc\v1\HadoopJob
     */
    public function clearProperties(){
      return $this->_clear(7);
    }
    
    /**
     * Get <properties> value
     *
     * @param int $idx
     * @return \google\cloud\dataproc\v1\HadoopJob\PropertiesEntry
     */
    public function getProperties($idx = NULL){
      return $this->_get(7, $idx);
    }
    
    /**
     * Set <properties> value
     *
     * @param \google\cloud\dataproc\v1\HadoopJob\PropertiesEntry $value
     * @return \google\cloud\dataproc\v1\HadoopJob
     */
    public function setProperties(\google\cloud\dataproc\v1\HadoopJob\PropertiesEntry $value, $idx = NULL){
      return $this->_set(7, $value, $idx);
    }
    
    /**
     * Get all elements of <properties>
     *
     * @return \google\cloud\dataproc\v1\HadoopJob\PropertiesEntry[]
     */
    public function getPropertiesList(){
     return $this->_get(7);
    }
    
    /**
     * Add a new element to <properties>
     *
     * @param \google\cloud\dataproc\v1\HadoopJob\PropertiesEntry $value
     * @return \google\cloud\dataproc\v1\HadoopJob
     */
    public function addProperties(\google\cloud\dataproc\v1\HadoopJob\PropertiesEntry $value){
     return $this->_add(7, $value);
    }
    
    /**
     * Check if <logging_config> has a value
     *
     * @return boolean
     */
    public function hasLoggingConfig(){
      return $this->_has(8);
    }
    
    /**
     * Clear <logging_config> value
     *
     * @return \google\cloud\dataproc\v1\HadoopJob
     */
    public function clearLoggingConfig(){
      return $this->_clear(8);
    }
    
    /**
     * Get <logging_config> value
     *
     * @return \google\cloud\dataproc\v1\LoggingConfig
     */
    public function getLoggingConfig(){
      return $this->_get(8);
    }
    
    /**
     * Set <logging_config> value
     *
     * @param \google\cloud\dataproc\v1\LoggingConfig $value
     * @return \google\cloud\dataproc\v1\HadoopJob
     */
    public function setLoggingConfig(\google\cloud\dataproc\v1\LoggingConfig $value){
      return $this->_set(8, $value);
    }
  }
}

namespace google\cloud\dataproc\v1\SparkJob {

  class PropertiesEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $key = null;
    
    /**  @var string */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.dataproc.v1.SparkJob.PropertiesEntry');

      // OPTIONAL STRING key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <key> has a value
     *
     * @return boolean
     */
    public function hasKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <key> value
     *
     * @return \google\cloud\dataproc\v1\SparkJob\PropertiesEntry
     */
    public function clearKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <key> value
     *
     * @return string
     */
    public function getKey(){
      return $this->_get(1);
    }
    
    /**
     * Set <key> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\SparkJob\PropertiesEntry
     */
    public function setKey( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\cloud\dataproc\v1\SparkJob\PropertiesEntry
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return string
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\SparkJob\PropertiesEntry
     */
    public function setValue( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\cloud\dataproc\v1 {

  class SparkJob extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $main_jar_file_uri = null;
    
    /**  @var string */
    public $main_class = null;
    
    /**  @var string[]  */
    public $args = array();
    
    /**  @var string[]  */
    public $jar_file_uris = array();
    
    /**  @var string[]  */
    public $file_uris = array();
    
    /**  @var string[]  */
    public $archive_uris = array();
    
    /**  @var \google\cloud\dataproc\v1\SparkJob\PropertiesEntry[]  */
    public $properties = array();
    
    /**  @var \google\cloud\dataproc\v1\LoggingConfig */
    public $logging_config = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.dataproc.v1.SparkJob');

      // OPTIONAL STRING main_jar_file_uri = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "main_jar_file_uri";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING main_class = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "main_class";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED STRING args = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "args";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // REPEATED STRING jar_file_uris = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "jar_file_uris";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // REPEATED STRING file_uris = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "file_uris";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // REPEATED STRING archive_uris = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "archive_uris";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // REPEATED MESSAGE properties = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "properties";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\cloud\dataproc\v1\SparkJob\PropertiesEntry';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE logging_config = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "logging_config";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\dataproc\v1\LoggingConfig';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <main_jar_file_uri> has a value
     *
     * @return boolean
     */
    public function hasMainJarFileUri(){
      return $this->_has(1);
    }
    
    /**
     * Clear <main_jar_file_uri> value
     *
     * @return \google\cloud\dataproc\v1\SparkJob
     */
    public function clearMainJarFileUri(){
      return $this->_clear(1);
    }
    
    /**
     * Get <main_jar_file_uri> value
     *
     * @return string
     */
    public function getMainJarFileUri(){
      return $this->_get(1);
    }
    
    /**
     * Set <main_jar_file_uri> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\SparkJob
     */
    public function setMainJarFileUri( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <main_class> has a value
     *
     * @return boolean
     */
    public function hasMainClass(){
      return $this->_has(2);
    }
    
    /**
     * Clear <main_class> value
     *
     * @return \google\cloud\dataproc\v1\SparkJob
     */
    public function clearMainClass(){
      return $this->_clear(2);
    }
    
    /**
     * Get <main_class> value
     *
     * @return string
     */
    public function getMainClass(){
      return $this->_get(2);
    }
    
    /**
     * Set <main_class> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\SparkJob
     */
    public function setMainClass( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <args> has a value
     *
     * @return boolean
     */
    public function hasArgs(){
      return $this->_has(3);
    }
    
    /**
     * Clear <args> value
     *
     * @return \google\cloud\dataproc\v1\SparkJob
     */
    public function clearArgs(){
      return $this->_clear(3);
    }
    
    /**
     * Get <args> value
     *
     * @param int $idx
     * @return string
     */
    public function getArgs($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <args> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\SparkJob
     */
    public function setArgs( $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <args>
     *
     * @return string[]
     */
    public function getArgsList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <args>
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\SparkJob
     */
    public function addArgs( $value){
     return $this->_add(3, $value);
    }
    
    /**
     * Check if <jar_file_uris> has a value
     *
     * @return boolean
     */
    public function hasJarFileUris(){
      return $this->_has(4);
    }
    
    /**
     * Clear <jar_file_uris> value
     *
     * @return \google\cloud\dataproc\v1\SparkJob
     */
    public function clearJarFileUris(){
      return $this->_clear(4);
    }
    
    /**
     * Get <jar_file_uris> value
     *
     * @param int $idx
     * @return string
     */
    public function getJarFileUris($idx = NULL){
      return $this->_get(4, $idx);
    }
    
    /**
     * Set <jar_file_uris> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\SparkJob
     */
    public function setJarFileUris( $value, $idx = NULL){
      return $this->_set(4, $value, $idx);
    }
    
    /**
     * Get all elements of <jar_file_uris>
     *
     * @return string[]
     */
    public function getJarFileUrisList(){
     return $this->_get(4);
    }
    
    /**
     * Add a new element to <jar_file_uris>
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\SparkJob
     */
    public function addJarFileUris( $value){
     return $this->_add(4, $value);
    }
    
    /**
     * Check if <file_uris> has a value
     *
     * @return boolean
     */
    public function hasFileUris(){
      return $this->_has(5);
    }
    
    /**
     * Clear <file_uris> value
     *
     * @return \google\cloud\dataproc\v1\SparkJob
     */
    public function clearFileUris(){
      return $this->_clear(5);
    }
    
    /**
     * Get <file_uris> value
     *
     * @param int $idx
     * @return string
     */
    public function getFileUris($idx = NULL){
      return $this->_get(5, $idx);
    }
    
    /**
     * Set <file_uris> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\SparkJob
     */
    public function setFileUris( $value, $idx = NULL){
      return $this->_set(5, $value, $idx);
    }
    
    /**
     * Get all elements of <file_uris>
     *
     * @return string[]
     */
    public function getFileUrisList(){
     return $this->_get(5);
    }
    
    /**
     * Add a new element to <file_uris>
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\SparkJob
     */
    public function addFileUris( $value){
     return $this->_add(5, $value);
    }
    
    /**
     * Check if <archive_uris> has a value
     *
     * @return boolean
     */
    public function hasArchiveUris(){
      return $this->_has(6);
    }
    
    /**
     * Clear <archive_uris> value
     *
     * @return \google\cloud\dataproc\v1\SparkJob
     */
    public function clearArchiveUris(){
      return $this->_clear(6);
    }
    
    /**
     * Get <archive_uris> value
     *
     * @param int $idx
     * @return string
     */
    public function getArchiveUris($idx = NULL){
      return $this->_get(6, $idx);
    }
    
    /**
     * Set <archive_uris> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\SparkJob
     */
    public function setArchiveUris( $value, $idx = NULL){
      return $this->_set(6, $value, $idx);
    }
    
    /**
     * Get all elements of <archive_uris>
     *
     * @return string[]
     */
    public function getArchiveUrisList(){
     return $this->_get(6);
    }
    
    /**
     * Add a new element to <archive_uris>
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\SparkJob
     */
    public function addArchiveUris( $value){
     return $this->_add(6, $value);
    }
    
    /**
     * Check if <properties> has a value
     *
     * @return boolean
     */
    public function hasProperties(){
      return $this->_has(7);
    }
    
    /**
     * Clear <properties> value
     *
     * @return \google\cloud\dataproc\v1\SparkJob
     */
    public function clearProperties(){
      return $this->_clear(7);
    }
    
    /**
     * Get <properties> value
     *
     * @param int $idx
     * @return \google\cloud\dataproc\v1\SparkJob\PropertiesEntry
     */
    public function getProperties($idx = NULL){
      return $this->_get(7, $idx);
    }
    
    /**
     * Set <properties> value
     *
     * @param \google\cloud\dataproc\v1\SparkJob\PropertiesEntry $value
     * @return \google\cloud\dataproc\v1\SparkJob
     */
    public function setProperties(\google\cloud\dataproc\v1\SparkJob\PropertiesEntry $value, $idx = NULL){
      return $this->_set(7, $value, $idx);
    }
    
    /**
     * Get all elements of <properties>
     *
     * @return \google\cloud\dataproc\v1\SparkJob\PropertiesEntry[]
     */
    public function getPropertiesList(){
     return $this->_get(7);
    }
    
    /**
     * Add a new element to <properties>
     *
     * @param \google\cloud\dataproc\v1\SparkJob\PropertiesEntry $value
     * @return \google\cloud\dataproc\v1\SparkJob
     */
    public function addProperties(\google\cloud\dataproc\v1\SparkJob\PropertiesEntry $value){
     return $this->_add(7, $value);
    }
    
    /**
     * Check if <logging_config> has a value
     *
     * @return boolean
     */
    public function hasLoggingConfig(){
      return $this->_has(8);
    }
    
    /**
     * Clear <logging_config> value
     *
     * @return \google\cloud\dataproc\v1\SparkJob
     */
    public function clearLoggingConfig(){
      return $this->_clear(8);
    }
    
    /**
     * Get <logging_config> value
     *
     * @return \google\cloud\dataproc\v1\LoggingConfig
     */
    public function getLoggingConfig(){
      return $this->_get(8);
    }
    
    /**
     * Set <logging_config> value
     *
     * @param \google\cloud\dataproc\v1\LoggingConfig $value
     * @return \google\cloud\dataproc\v1\SparkJob
     */
    public function setLoggingConfig(\google\cloud\dataproc\v1\LoggingConfig $value){
      return $this->_set(8, $value);
    }
  }
}

namespace google\cloud\dataproc\v1\PySparkJob {

  class PropertiesEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $key = null;
    
    /**  @var string */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.dataproc.v1.PySparkJob.PropertiesEntry');

      // OPTIONAL STRING key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <key> has a value
     *
     * @return boolean
     */
    public function hasKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <key> value
     *
     * @return \google\cloud\dataproc\v1\PySparkJob\PropertiesEntry
     */
    public function clearKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <key> value
     *
     * @return string
     */
    public function getKey(){
      return $this->_get(1);
    }
    
    /**
     * Set <key> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\PySparkJob\PropertiesEntry
     */
    public function setKey( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\cloud\dataproc\v1\PySparkJob\PropertiesEntry
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return string
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\PySparkJob\PropertiesEntry
     */
    public function setValue( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\cloud\dataproc\v1 {

  class PySparkJob extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $main_python_file_uri = null;
    
    /**  @var string[]  */
    public $args = array();
    
    /**  @var string[]  */
    public $python_file_uris = array();
    
    /**  @var string[]  */
    public $jar_file_uris = array();
    
    /**  @var string[]  */
    public $file_uris = array();
    
    /**  @var string[]  */
    public $archive_uris = array();
    
    /**  @var \google\cloud\dataproc\v1\PySparkJob\PropertiesEntry[]  */
    public $properties = array();
    
    /**  @var \google\cloud\dataproc\v1\LoggingConfig */
    public $logging_config = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.dataproc.v1.PySparkJob');

      // OPTIONAL STRING main_python_file_uri = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "main_python_file_uri";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED STRING args = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "args";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // REPEATED STRING python_file_uris = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "python_file_uris";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // REPEATED STRING jar_file_uris = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "jar_file_uris";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // REPEATED STRING file_uris = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "file_uris";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // REPEATED STRING archive_uris = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "archive_uris";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // REPEATED MESSAGE properties = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "properties";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\cloud\dataproc\v1\PySparkJob\PropertiesEntry';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE logging_config = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "logging_config";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\dataproc\v1\LoggingConfig';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <main_python_file_uri> has a value
     *
     * @return boolean
     */
    public function hasMainPythonFileUri(){
      return $this->_has(1);
    }
    
    /**
     * Clear <main_python_file_uri> value
     *
     * @return \google\cloud\dataproc\v1\PySparkJob
     */
    public function clearMainPythonFileUri(){
      return $this->_clear(1);
    }
    
    /**
     * Get <main_python_file_uri> value
     *
     * @return string
     */
    public function getMainPythonFileUri(){
      return $this->_get(1);
    }
    
    /**
     * Set <main_python_file_uri> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\PySparkJob
     */
    public function setMainPythonFileUri( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <args> has a value
     *
     * @return boolean
     */
    public function hasArgs(){
      return $this->_has(2);
    }
    
    /**
     * Clear <args> value
     *
     * @return \google\cloud\dataproc\v1\PySparkJob
     */
    public function clearArgs(){
      return $this->_clear(2);
    }
    
    /**
     * Get <args> value
     *
     * @param int $idx
     * @return string
     */
    public function getArgs($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <args> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\PySparkJob
     */
    public function setArgs( $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <args>
     *
     * @return string[]
     */
    public function getArgsList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <args>
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\PySparkJob
     */
    public function addArgs( $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <python_file_uris> has a value
     *
     * @return boolean
     */
    public function hasPythonFileUris(){
      return $this->_has(3);
    }
    
    /**
     * Clear <python_file_uris> value
     *
     * @return \google\cloud\dataproc\v1\PySparkJob
     */
    public function clearPythonFileUris(){
      return $this->_clear(3);
    }
    
    /**
     * Get <python_file_uris> value
     *
     * @param int $idx
     * @return string
     */
    public function getPythonFileUris($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <python_file_uris> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\PySparkJob
     */
    public function setPythonFileUris( $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <python_file_uris>
     *
     * @return string[]
     */
    public function getPythonFileUrisList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <python_file_uris>
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\PySparkJob
     */
    public function addPythonFileUris( $value){
     return $this->_add(3, $value);
    }
    
    /**
     * Check if <jar_file_uris> has a value
     *
     * @return boolean
     */
    public function hasJarFileUris(){
      return $this->_has(4);
    }
    
    /**
     * Clear <jar_file_uris> value
     *
     * @return \google\cloud\dataproc\v1\PySparkJob
     */
    public function clearJarFileUris(){
      return $this->_clear(4);
    }
    
    /**
     * Get <jar_file_uris> value
     *
     * @param int $idx
     * @return string
     */
    public function getJarFileUris($idx = NULL){
      return $this->_get(4, $idx);
    }
    
    /**
     * Set <jar_file_uris> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\PySparkJob
     */
    public function setJarFileUris( $value, $idx = NULL){
      return $this->_set(4, $value, $idx);
    }
    
    /**
     * Get all elements of <jar_file_uris>
     *
     * @return string[]
     */
    public function getJarFileUrisList(){
     return $this->_get(4);
    }
    
    /**
     * Add a new element to <jar_file_uris>
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\PySparkJob
     */
    public function addJarFileUris( $value){
     return $this->_add(4, $value);
    }
    
    /**
     * Check if <file_uris> has a value
     *
     * @return boolean
     */
    public function hasFileUris(){
      return $this->_has(5);
    }
    
    /**
     * Clear <file_uris> value
     *
     * @return \google\cloud\dataproc\v1\PySparkJob
     */
    public function clearFileUris(){
      return $this->_clear(5);
    }
    
    /**
     * Get <file_uris> value
     *
     * @param int $idx
     * @return string
     */
    public function getFileUris($idx = NULL){
      return $this->_get(5, $idx);
    }
    
    /**
     * Set <file_uris> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\PySparkJob
     */
    public function setFileUris( $value, $idx = NULL){
      return $this->_set(5, $value, $idx);
    }
    
    /**
     * Get all elements of <file_uris>
     *
     * @return string[]
     */
    public function getFileUrisList(){
     return $this->_get(5);
    }
    
    /**
     * Add a new element to <file_uris>
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\PySparkJob
     */
    public function addFileUris( $value){
     return $this->_add(5, $value);
    }
    
    /**
     * Check if <archive_uris> has a value
     *
     * @return boolean
     */
    public function hasArchiveUris(){
      return $this->_has(6);
    }
    
    /**
     * Clear <archive_uris> value
     *
     * @return \google\cloud\dataproc\v1\PySparkJob
     */
    public function clearArchiveUris(){
      return $this->_clear(6);
    }
    
    /**
     * Get <archive_uris> value
     *
     * @param int $idx
     * @return string
     */
    public function getArchiveUris($idx = NULL){
      return $this->_get(6, $idx);
    }
    
    /**
     * Set <archive_uris> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\PySparkJob
     */
    public function setArchiveUris( $value, $idx = NULL){
      return $this->_set(6, $value, $idx);
    }
    
    /**
     * Get all elements of <archive_uris>
     *
     * @return string[]
     */
    public function getArchiveUrisList(){
     return $this->_get(6);
    }
    
    /**
     * Add a new element to <archive_uris>
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\PySparkJob
     */
    public function addArchiveUris( $value){
     return $this->_add(6, $value);
    }
    
    /**
     * Check if <properties> has a value
     *
     * @return boolean
     */
    public function hasProperties(){
      return $this->_has(7);
    }
    
    /**
     * Clear <properties> value
     *
     * @return \google\cloud\dataproc\v1\PySparkJob
     */
    public function clearProperties(){
      return $this->_clear(7);
    }
    
    /**
     * Get <properties> value
     *
     * @param int $idx
     * @return \google\cloud\dataproc\v1\PySparkJob\PropertiesEntry
     */
    public function getProperties($idx = NULL){
      return $this->_get(7, $idx);
    }
    
    /**
     * Set <properties> value
     *
     * @param \google\cloud\dataproc\v1\PySparkJob\PropertiesEntry $value
     * @return \google\cloud\dataproc\v1\PySparkJob
     */
    public function setProperties(\google\cloud\dataproc\v1\PySparkJob\PropertiesEntry $value, $idx = NULL){
      return $this->_set(7, $value, $idx);
    }
    
    /**
     * Get all elements of <properties>
     *
     * @return \google\cloud\dataproc\v1\PySparkJob\PropertiesEntry[]
     */
    public function getPropertiesList(){
     return $this->_get(7);
    }
    
    /**
     * Add a new element to <properties>
     *
     * @param \google\cloud\dataproc\v1\PySparkJob\PropertiesEntry $value
     * @return \google\cloud\dataproc\v1\PySparkJob
     */
    public function addProperties(\google\cloud\dataproc\v1\PySparkJob\PropertiesEntry $value){
     return $this->_add(7, $value);
    }
    
    /**
     * Check if <logging_config> has a value
     *
     * @return boolean
     */
    public function hasLoggingConfig(){
      return $this->_has(8);
    }
    
    /**
     * Clear <logging_config> value
     *
     * @return \google\cloud\dataproc\v1\PySparkJob
     */
    public function clearLoggingConfig(){
      return $this->_clear(8);
    }
    
    /**
     * Get <logging_config> value
     *
     * @return \google\cloud\dataproc\v1\LoggingConfig
     */
    public function getLoggingConfig(){
      return $this->_get(8);
    }
    
    /**
     * Set <logging_config> value
     *
     * @param \google\cloud\dataproc\v1\LoggingConfig $value
     * @return \google\cloud\dataproc\v1\PySparkJob
     */
    public function setLoggingConfig(\google\cloud\dataproc\v1\LoggingConfig $value){
      return $this->_set(8, $value);
    }
  }
}

namespace google\cloud\dataproc\v1 {

  class QueryList extends \DrSlump\Protobuf\Message {

    /**  @var string[]  */
    public $queries = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.dataproc.v1.QueryList');

      // REPEATED STRING queries = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "queries";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <queries> has a value
     *
     * @return boolean
     */
    public function hasQueries(){
      return $this->_has(1);
    }
    
    /**
     * Clear <queries> value
     *
     * @return \google\cloud\dataproc\v1\QueryList
     */
    public function clearQueries(){
      return $this->_clear(1);
    }
    
    /**
     * Get <queries> value
     *
     * @param int $idx
     * @return string
     */
    public function getQueries($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <queries> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\QueryList
     */
    public function setQueries( $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <queries>
     *
     * @return string[]
     */
    public function getQueriesList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <queries>
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\QueryList
     */
    public function addQueries( $value){
     return $this->_add(1, $value);
    }
  }
}

namespace google\cloud\dataproc\v1\HiveJob {

  class ScriptVariablesEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $key = null;
    
    /**  @var string */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.dataproc.v1.HiveJob.ScriptVariablesEntry');

      // OPTIONAL STRING key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <key> has a value
     *
     * @return boolean
     */
    public function hasKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <key> value
     *
     * @return \google\cloud\dataproc\v1\HiveJob\ScriptVariablesEntry
     */
    public function clearKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <key> value
     *
     * @return string
     */
    public function getKey(){
      return $this->_get(1);
    }
    
    /**
     * Set <key> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\HiveJob\ScriptVariablesEntry
     */
    public function setKey( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\cloud\dataproc\v1\HiveJob\ScriptVariablesEntry
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return string
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\HiveJob\ScriptVariablesEntry
     */
    public function setValue( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\cloud\dataproc\v1\HiveJob {

  class PropertiesEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $key = null;
    
    /**  @var string */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.dataproc.v1.HiveJob.PropertiesEntry');

      // OPTIONAL STRING key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <key> has a value
     *
     * @return boolean
     */
    public function hasKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <key> value
     *
     * @return \google\cloud\dataproc\v1\HiveJob\PropertiesEntry
     */
    public function clearKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <key> value
     *
     * @return string
     */
    public function getKey(){
      return $this->_get(1);
    }
    
    /**
     * Set <key> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\HiveJob\PropertiesEntry
     */
    public function setKey( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\cloud\dataproc\v1\HiveJob\PropertiesEntry
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return string
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\HiveJob\PropertiesEntry
     */
    public function setValue( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\cloud\dataproc\v1 {

  class HiveJob extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $query_file_uri = null;
    
    /**  @var \google\cloud\dataproc\v1\QueryList */
    public $query_list = null;
    
    /**  @var boolean */
    public $continue_on_failure = null;
    
    /**  @var \google\cloud\dataproc\v1\HiveJob\ScriptVariablesEntry[]  */
    public $script_variables = array();
    
    /**  @var \google\cloud\dataproc\v1\HiveJob\PropertiesEntry[]  */
    public $properties = array();
    
    /**  @var string[]  */
    public $jar_file_uris = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.dataproc.v1.HiveJob');

      // OPTIONAL STRING query_file_uri = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "query_file_uri";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE query_list = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "query_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\dataproc\v1\QueryList';
      $descriptor->addField($f);

      // OPTIONAL BOOL continue_on_failure = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "continue_on_failure";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE script_variables = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "script_variables";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\cloud\dataproc\v1\HiveJob\ScriptVariablesEntry';
      $descriptor->addField($f);

      // REPEATED MESSAGE properties = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "properties";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\cloud\dataproc\v1\HiveJob\PropertiesEntry';
      $descriptor->addField($f);

      // REPEATED STRING jar_file_uris = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "jar_file_uris";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <query_file_uri> has a value
     *
     * @return boolean
     */
    public function hasQueryFileUri(){
      return $this->_has(1);
    }
    
    /**
     * Clear <query_file_uri> value
     *
     * @return \google\cloud\dataproc\v1\HiveJob
     */
    public function clearQueryFileUri(){
      return $this->_clear(1);
    }
    
    /**
     * Get <query_file_uri> value
     *
     * @return string
     */
    public function getQueryFileUri(){
      return $this->_get(1);
    }
    
    /**
     * Set <query_file_uri> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\HiveJob
     */
    public function setQueryFileUri( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <query_list> has a value
     *
     * @return boolean
     */
    public function hasQueryList(){
      return $this->_has(2);
    }
    
    /**
     * Clear <query_list> value
     *
     * @return \google\cloud\dataproc\v1\HiveJob
     */
    public function clearQueryList(){
      return $this->_clear(2);
    }
    
    /**
     * Get <query_list> value
     *
     * @return \google\cloud\dataproc\v1\QueryList
     */
    public function getQueryList(){
      return $this->_get(2);
    }
    
    /**
     * Set <query_list> value
     *
     * @param \google\cloud\dataproc\v1\QueryList $value
     * @return \google\cloud\dataproc\v1\HiveJob
     */
    public function setQueryList(\google\cloud\dataproc\v1\QueryList $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <continue_on_failure> has a value
     *
     * @return boolean
     */
    public function hasContinueOnFailure(){
      return $this->_has(3);
    }
    
    /**
     * Clear <continue_on_failure> value
     *
     * @return \google\cloud\dataproc\v1\HiveJob
     */
    public function clearContinueOnFailure(){
      return $this->_clear(3);
    }
    
    /**
     * Get <continue_on_failure> value
     *
     * @return boolean
     */
    public function getContinueOnFailure(){
      return $this->_get(3);
    }
    
    /**
     * Set <continue_on_failure> value
     *
     * @param boolean $value
     * @return \google\cloud\dataproc\v1\HiveJob
     */
    public function setContinueOnFailure( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <script_variables> has a value
     *
     * @return boolean
     */
    public function hasScriptVariables(){
      return $this->_has(4);
    }
    
    /**
     * Clear <script_variables> value
     *
     * @return \google\cloud\dataproc\v1\HiveJob
     */
    public function clearScriptVariables(){
      return $this->_clear(4);
    }
    
    /**
     * Get <script_variables> value
     *
     * @param int $idx
     * @return \google\cloud\dataproc\v1\HiveJob\ScriptVariablesEntry
     */
    public function getScriptVariables($idx = NULL){
      return $this->_get(4, $idx);
    }
    
    /**
     * Set <script_variables> value
     *
     * @param \google\cloud\dataproc\v1\HiveJob\ScriptVariablesEntry $value
     * @return \google\cloud\dataproc\v1\HiveJob
     */
    public function setScriptVariables(\google\cloud\dataproc\v1\HiveJob\ScriptVariablesEntry $value, $idx = NULL){
      return $this->_set(4, $value, $idx);
    }
    
    /**
     * Get all elements of <script_variables>
     *
     * @return \google\cloud\dataproc\v1\HiveJob\ScriptVariablesEntry[]
     */
    public function getScriptVariablesList(){
     return $this->_get(4);
    }
    
    /**
     * Add a new element to <script_variables>
     *
     * @param \google\cloud\dataproc\v1\HiveJob\ScriptVariablesEntry $value
     * @return \google\cloud\dataproc\v1\HiveJob
     */
    public function addScriptVariables(\google\cloud\dataproc\v1\HiveJob\ScriptVariablesEntry $value){
     return $this->_add(4, $value);
    }
    
    /**
     * Check if <properties> has a value
     *
     * @return boolean
     */
    public function hasProperties(){
      return $this->_has(5);
    }
    
    /**
     * Clear <properties> value
     *
     * @return \google\cloud\dataproc\v1\HiveJob
     */
    public function clearProperties(){
      return $this->_clear(5);
    }
    
    /**
     * Get <properties> value
     *
     * @param int $idx
     * @return \google\cloud\dataproc\v1\HiveJob\PropertiesEntry
     */
    public function getProperties($idx = NULL){
      return $this->_get(5, $idx);
    }
    
    /**
     * Set <properties> value
     *
     * @param \google\cloud\dataproc\v1\HiveJob\PropertiesEntry $value
     * @return \google\cloud\dataproc\v1\HiveJob
     */
    public function setProperties(\google\cloud\dataproc\v1\HiveJob\PropertiesEntry $value, $idx = NULL){
      return $this->_set(5, $value, $idx);
    }
    
    /**
     * Get all elements of <properties>
     *
     * @return \google\cloud\dataproc\v1\HiveJob\PropertiesEntry[]
     */
    public function getPropertiesList(){
     return $this->_get(5);
    }
    
    /**
     * Add a new element to <properties>
     *
     * @param \google\cloud\dataproc\v1\HiveJob\PropertiesEntry $value
     * @return \google\cloud\dataproc\v1\HiveJob
     */
    public function addProperties(\google\cloud\dataproc\v1\HiveJob\PropertiesEntry $value){
     return $this->_add(5, $value);
    }
    
    /**
     * Check if <jar_file_uris> has a value
     *
     * @return boolean
     */
    public function hasJarFileUris(){
      return $this->_has(6);
    }
    
    /**
     * Clear <jar_file_uris> value
     *
     * @return \google\cloud\dataproc\v1\HiveJob
     */
    public function clearJarFileUris(){
      return $this->_clear(6);
    }
    
    /**
     * Get <jar_file_uris> value
     *
     * @param int $idx
     * @return string
     */
    public function getJarFileUris($idx = NULL){
      return $this->_get(6, $idx);
    }
    
    /**
     * Set <jar_file_uris> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\HiveJob
     */
    public function setJarFileUris( $value, $idx = NULL){
      return $this->_set(6, $value, $idx);
    }
    
    /**
     * Get all elements of <jar_file_uris>
     *
     * @return string[]
     */
    public function getJarFileUrisList(){
     return $this->_get(6);
    }
    
    /**
     * Add a new element to <jar_file_uris>
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\HiveJob
     */
    public function addJarFileUris( $value){
     return $this->_add(6, $value);
    }
  }
}

namespace google\cloud\dataproc\v1\SparkSqlJob {

  class ScriptVariablesEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $key = null;
    
    /**  @var string */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.dataproc.v1.SparkSqlJob.ScriptVariablesEntry');

      // OPTIONAL STRING key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <key> has a value
     *
     * @return boolean
     */
    public function hasKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <key> value
     *
     * @return \google\cloud\dataproc\v1\SparkSqlJob\ScriptVariablesEntry
     */
    public function clearKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <key> value
     *
     * @return string
     */
    public function getKey(){
      return $this->_get(1);
    }
    
    /**
     * Set <key> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\SparkSqlJob\ScriptVariablesEntry
     */
    public function setKey( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\cloud\dataproc\v1\SparkSqlJob\ScriptVariablesEntry
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return string
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\SparkSqlJob\ScriptVariablesEntry
     */
    public function setValue( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\cloud\dataproc\v1\SparkSqlJob {

  class PropertiesEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $key = null;
    
    /**  @var string */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.dataproc.v1.SparkSqlJob.PropertiesEntry');

      // OPTIONAL STRING key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <key> has a value
     *
     * @return boolean
     */
    public function hasKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <key> value
     *
     * @return \google\cloud\dataproc\v1\SparkSqlJob\PropertiesEntry
     */
    public function clearKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <key> value
     *
     * @return string
     */
    public function getKey(){
      return $this->_get(1);
    }
    
    /**
     * Set <key> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\SparkSqlJob\PropertiesEntry
     */
    public function setKey( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\cloud\dataproc\v1\SparkSqlJob\PropertiesEntry
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return string
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\SparkSqlJob\PropertiesEntry
     */
    public function setValue( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\cloud\dataproc\v1 {

  class SparkSqlJob extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $query_file_uri = null;
    
    /**  @var \google\cloud\dataproc\v1\QueryList */
    public $query_list = null;
    
    /**  @var \google\cloud\dataproc\v1\SparkSqlJob\ScriptVariablesEntry[]  */
    public $script_variables = array();
    
    /**  @var \google\cloud\dataproc\v1\SparkSqlJob\PropertiesEntry[]  */
    public $properties = array();
    
    /**  @var string[]  */
    public $jar_file_uris = array();
    
    /**  @var \google\cloud\dataproc\v1\LoggingConfig */
    public $logging_config = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.dataproc.v1.SparkSqlJob');

      // OPTIONAL STRING query_file_uri = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "query_file_uri";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE query_list = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "query_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\dataproc\v1\QueryList';
      $descriptor->addField($f);

      // REPEATED MESSAGE script_variables = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "script_variables";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\cloud\dataproc\v1\SparkSqlJob\ScriptVariablesEntry';
      $descriptor->addField($f);

      // REPEATED MESSAGE properties = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "properties";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\cloud\dataproc\v1\SparkSqlJob\PropertiesEntry';
      $descriptor->addField($f);

      // REPEATED STRING jar_file_uris = 56
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 56;
      $f->name      = "jar_file_uris";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE logging_config = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "logging_config";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\dataproc\v1\LoggingConfig';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <query_file_uri> has a value
     *
     * @return boolean
     */
    public function hasQueryFileUri(){
      return $this->_has(1);
    }
    
    /**
     * Clear <query_file_uri> value
     *
     * @return \google\cloud\dataproc\v1\SparkSqlJob
     */
    public function clearQueryFileUri(){
      return $this->_clear(1);
    }
    
    /**
     * Get <query_file_uri> value
     *
     * @return string
     */
    public function getQueryFileUri(){
      return $this->_get(1);
    }
    
    /**
     * Set <query_file_uri> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\SparkSqlJob
     */
    public function setQueryFileUri( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <query_list> has a value
     *
     * @return boolean
     */
    public function hasQueryList(){
      return $this->_has(2);
    }
    
    /**
     * Clear <query_list> value
     *
     * @return \google\cloud\dataproc\v1\SparkSqlJob
     */
    public function clearQueryList(){
      return $this->_clear(2);
    }
    
    /**
     * Get <query_list> value
     *
     * @return \google\cloud\dataproc\v1\QueryList
     */
    public function getQueryList(){
      return $this->_get(2);
    }
    
    /**
     * Set <query_list> value
     *
     * @param \google\cloud\dataproc\v1\QueryList $value
     * @return \google\cloud\dataproc\v1\SparkSqlJob
     */
    public function setQueryList(\google\cloud\dataproc\v1\QueryList $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <script_variables> has a value
     *
     * @return boolean
     */
    public function hasScriptVariables(){
      return $this->_has(3);
    }
    
    /**
     * Clear <script_variables> value
     *
     * @return \google\cloud\dataproc\v1\SparkSqlJob
     */
    public function clearScriptVariables(){
      return $this->_clear(3);
    }
    
    /**
     * Get <script_variables> value
     *
     * @param int $idx
     * @return \google\cloud\dataproc\v1\SparkSqlJob\ScriptVariablesEntry
     */
    public function getScriptVariables($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <script_variables> value
     *
     * @param \google\cloud\dataproc\v1\SparkSqlJob\ScriptVariablesEntry $value
     * @return \google\cloud\dataproc\v1\SparkSqlJob
     */
    public function setScriptVariables(\google\cloud\dataproc\v1\SparkSqlJob\ScriptVariablesEntry $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <script_variables>
     *
     * @return \google\cloud\dataproc\v1\SparkSqlJob\ScriptVariablesEntry[]
     */
    public function getScriptVariablesList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <script_variables>
     *
     * @param \google\cloud\dataproc\v1\SparkSqlJob\ScriptVariablesEntry $value
     * @return \google\cloud\dataproc\v1\SparkSqlJob
     */
    public function addScriptVariables(\google\cloud\dataproc\v1\SparkSqlJob\ScriptVariablesEntry $value){
     return $this->_add(3, $value);
    }
    
    /**
     * Check if <properties> has a value
     *
     * @return boolean
     */
    public function hasProperties(){
      return $this->_has(4);
    }
    
    /**
     * Clear <properties> value
     *
     * @return \google\cloud\dataproc\v1\SparkSqlJob
     */
    public function clearProperties(){
      return $this->_clear(4);
    }
    
    /**
     * Get <properties> value
     *
     * @param int $idx
     * @return \google\cloud\dataproc\v1\SparkSqlJob\PropertiesEntry
     */
    public function getProperties($idx = NULL){
      return $this->_get(4, $idx);
    }
    
    /**
     * Set <properties> value
     *
     * @param \google\cloud\dataproc\v1\SparkSqlJob\PropertiesEntry $value
     * @return \google\cloud\dataproc\v1\SparkSqlJob
     */
    public function setProperties(\google\cloud\dataproc\v1\SparkSqlJob\PropertiesEntry $value, $idx = NULL){
      return $this->_set(4, $value, $idx);
    }
    
    /**
     * Get all elements of <properties>
     *
     * @return \google\cloud\dataproc\v1\SparkSqlJob\PropertiesEntry[]
     */
    public function getPropertiesList(){
     return $this->_get(4);
    }
    
    /**
     * Add a new element to <properties>
     *
     * @param \google\cloud\dataproc\v1\SparkSqlJob\PropertiesEntry $value
     * @return \google\cloud\dataproc\v1\SparkSqlJob
     */
    public function addProperties(\google\cloud\dataproc\v1\SparkSqlJob\PropertiesEntry $value){
     return $this->_add(4, $value);
    }
    
    /**
     * Check if <jar_file_uris> has a value
     *
     * @return boolean
     */
    public function hasJarFileUris(){
      return $this->_has(56);
    }
    
    /**
     * Clear <jar_file_uris> value
     *
     * @return \google\cloud\dataproc\v1\SparkSqlJob
     */
    public function clearJarFileUris(){
      return $this->_clear(56);
    }
    
    /**
     * Get <jar_file_uris> value
     *
     * @param int $idx
     * @return string
     */
    public function getJarFileUris($idx = NULL){
      return $this->_get(56, $idx);
    }
    
    /**
     * Set <jar_file_uris> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\SparkSqlJob
     */
    public function setJarFileUris( $value, $idx = NULL){
      return $this->_set(56, $value, $idx);
    }
    
    /**
     * Get all elements of <jar_file_uris>
     *
     * @return string[]
     */
    public function getJarFileUrisList(){
     return $this->_get(56);
    }
    
    /**
     * Add a new element to <jar_file_uris>
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\SparkSqlJob
     */
    public function addJarFileUris( $value){
     return $this->_add(56, $value);
    }
    
    /**
     * Check if <logging_config> has a value
     *
     * @return boolean
     */
    public function hasLoggingConfig(){
      return $this->_has(6);
    }
    
    /**
     * Clear <logging_config> value
     *
     * @return \google\cloud\dataproc\v1\SparkSqlJob
     */
    public function clearLoggingConfig(){
      return $this->_clear(6);
    }
    
    /**
     * Get <logging_config> value
     *
     * @return \google\cloud\dataproc\v1\LoggingConfig
     */
    public function getLoggingConfig(){
      return $this->_get(6);
    }
    
    /**
     * Set <logging_config> value
     *
     * @param \google\cloud\dataproc\v1\LoggingConfig $value
     * @return \google\cloud\dataproc\v1\SparkSqlJob
     */
    public function setLoggingConfig(\google\cloud\dataproc\v1\LoggingConfig $value){
      return $this->_set(6, $value);
    }
  }
}

namespace google\cloud\dataproc\v1\PigJob {

  class ScriptVariablesEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $key = null;
    
    /**  @var string */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.dataproc.v1.PigJob.ScriptVariablesEntry');

      // OPTIONAL STRING key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <key> has a value
     *
     * @return boolean
     */
    public function hasKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <key> value
     *
     * @return \google\cloud\dataproc\v1\PigJob\ScriptVariablesEntry
     */
    public function clearKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <key> value
     *
     * @return string
     */
    public function getKey(){
      return $this->_get(1);
    }
    
    /**
     * Set <key> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\PigJob\ScriptVariablesEntry
     */
    public function setKey( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\cloud\dataproc\v1\PigJob\ScriptVariablesEntry
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return string
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\PigJob\ScriptVariablesEntry
     */
    public function setValue( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\cloud\dataproc\v1\PigJob {

  class PropertiesEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $key = null;
    
    /**  @var string */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.dataproc.v1.PigJob.PropertiesEntry');

      // OPTIONAL STRING key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <key> has a value
     *
     * @return boolean
     */
    public function hasKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <key> value
     *
     * @return \google\cloud\dataproc\v1\PigJob\PropertiesEntry
     */
    public function clearKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <key> value
     *
     * @return string
     */
    public function getKey(){
      return $this->_get(1);
    }
    
    /**
     * Set <key> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\PigJob\PropertiesEntry
     */
    public function setKey( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\cloud\dataproc\v1\PigJob\PropertiesEntry
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return string
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\PigJob\PropertiesEntry
     */
    public function setValue( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\cloud\dataproc\v1 {

  class PigJob extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $query_file_uri = null;
    
    /**  @var \google\cloud\dataproc\v1\QueryList */
    public $query_list = null;
    
    /**  @var boolean */
    public $continue_on_failure = null;
    
    /**  @var \google\cloud\dataproc\v1\PigJob\ScriptVariablesEntry[]  */
    public $script_variables = array();
    
    /**  @var \google\cloud\dataproc\v1\PigJob\PropertiesEntry[]  */
    public $properties = array();
    
    /**  @var string[]  */
    public $jar_file_uris = array();
    
    /**  @var \google\cloud\dataproc\v1\LoggingConfig */
    public $logging_config = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.dataproc.v1.PigJob');

      // OPTIONAL STRING query_file_uri = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "query_file_uri";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE query_list = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "query_list";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\dataproc\v1\QueryList';
      $descriptor->addField($f);

      // OPTIONAL BOOL continue_on_failure = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "continue_on_failure";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE script_variables = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "script_variables";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\cloud\dataproc\v1\PigJob\ScriptVariablesEntry';
      $descriptor->addField($f);

      // REPEATED MESSAGE properties = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "properties";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\cloud\dataproc\v1\PigJob\PropertiesEntry';
      $descriptor->addField($f);

      // REPEATED STRING jar_file_uris = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "jar_file_uris";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE logging_config = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "logging_config";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\dataproc\v1\LoggingConfig';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <query_file_uri> has a value
     *
     * @return boolean
     */
    public function hasQueryFileUri(){
      return $this->_has(1);
    }
    
    /**
     * Clear <query_file_uri> value
     *
     * @return \google\cloud\dataproc\v1\PigJob
     */
    public function clearQueryFileUri(){
      return $this->_clear(1);
    }
    
    /**
     * Get <query_file_uri> value
     *
     * @return string
     */
    public function getQueryFileUri(){
      return $this->_get(1);
    }
    
    /**
     * Set <query_file_uri> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\PigJob
     */
    public function setQueryFileUri( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <query_list> has a value
     *
     * @return boolean
     */
    public function hasQueryList(){
      return $this->_has(2);
    }
    
    /**
     * Clear <query_list> value
     *
     * @return \google\cloud\dataproc\v1\PigJob
     */
    public function clearQueryList(){
      return $this->_clear(2);
    }
    
    /**
     * Get <query_list> value
     *
     * @return \google\cloud\dataproc\v1\QueryList
     */
    public function getQueryList(){
      return $this->_get(2);
    }
    
    /**
     * Set <query_list> value
     *
     * @param \google\cloud\dataproc\v1\QueryList $value
     * @return \google\cloud\dataproc\v1\PigJob
     */
    public function setQueryList(\google\cloud\dataproc\v1\QueryList $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <continue_on_failure> has a value
     *
     * @return boolean
     */
    public function hasContinueOnFailure(){
      return $this->_has(3);
    }
    
    /**
     * Clear <continue_on_failure> value
     *
     * @return \google\cloud\dataproc\v1\PigJob
     */
    public function clearContinueOnFailure(){
      return $this->_clear(3);
    }
    
    /**
     * Get <continue_on_failure> value
     *
     * @return boolean
     */
    public function getContinueOnFailure(){
      return $this->_get(3);
    }
    
    /**
     * Set <continue_on_failure> value
     *
     * @param boolean $value
     * @return \google\cloud\dataproc\v1\PigJob
     */
    public function setContinueOnFailure( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <script_variables> has a value
     *
     * @return boolean
     */
    public function hasScriptVariables(){
      return $this->_has(4);
    }
    
    /**
     * Clear <script_variables> value
     *
     * @return \google\cloud\dataproc\v1\PigJob
     */
    public function clearScriptVariables(){
      return $this->_clear(4);
    }
    
    /**
     * Get <script_variables> value
     *
     * @param int $idx
     * @return \google\cloud\dataproc\v1\PigJob\ScriptVariablesEntry
     */
    public function getScriptVariables($idx = NULL){
      return $this->_get(4, $idx);
    }
    
    /**
     * Set <script_variables> value
     *
     * @param \google\cloud\dataproc\v1\PigJob\ScriptVariablesEntry $value
     * @return \google\cloud\dataproc\v1\PigJob
     */
    public function setScriptVariables(\google\cloud\dataproc\v1\PigJob\ScriptVariablesEntry $value, $idx = NULL){
      return $this->_set(4, $value, $idx);
    }
    
    /**
     * Get all elements of <script_variables>
     *
     * @return \google\cloud\dataproc\v1\PigJob\ScriptVariablesEntry[]
     */
    public function getScriptVariablesList(){
     return $this->_get(4);
    }
    
    /**
     * Add a new element to <script_variables>
     *
     * @param \google\cloud\dataproc\v1\PigJob\ScriptVariablesEntry $value
     * @return \google\cloud\dataproc\v1\PigJob
     */
    public function addScriptVariables(\google\cloud\dataproc\v1\PigJob\ScriptVariablesEntry $value){
     return $this->_add(4, $value);
    }
    
    /**
     * Check if <properties> has a value
     *
     * @return boolean
     */
    public function hasProperties(){
      return $this->_has(5);
    }
    
    /**
     * Clear <properties> value
     *
     * @return \google\cloud\dataproc\v1\PigJob
     */
    public function clearProperties(){
      return $this->_clear(5);
    }
    
    /**
     * Get <properties> value
     *
     * @param int $idx
     * @return \google\cloud\dataproc\v1\PigJob\PropertiesEntry
     */
    public function getProperties($idx = NULL){
      return $this->_get(5, $idx);
    }
    
    /**
     * Set <properties> value
     *
     * @param \google\cloud\dataproc\v1\PigJob\PropertiesEntry $value
     * @return \google\cloud\dataproc\v1\PigJob
     */
    public function setProperties(\google\cloud\dataproc\v1\PigJob\PropertiesEntry $value, $idx = NULL){
      return $this->_set(5, $value, $idx);
    }
    
    /**
     * Get all elements of <properties>
     *
     * @return \google\cloud\dataproc\v1\PigJob\PropertiesEntry[]
     */
    public function getPropertiesList(){
     return $this->_get(5);
    }
    
    /**
     * Add a new element to <properties>
     *
     * @param \google\cloud\dataproc\v1\PigJob\PropertiesEntry $value
     * @return \google\cloud\dataproc\v1\PigJob
     */
    public function addProperties(\google\cloud\dataproc\v1\PigJob\PropertiesEntry $value){
     return $this->_add(5, $value);
    }
    
    /**
     * Check if <jar_file_uris> has a value
     *
     * @return boolean
     */
    public function hasJarFileUris(){
      return $this->_has(6);
    }
    
    /**
     * Clear <jar_file_uris> value
     *
     * @return \google\cloud\dataproc\v1\PigJob
     */
    public function clearJarFileUris(){
      return $this->_clear(6);
    }
    
    /**
     * Get <jar_file_uris> value
     *
     * @param int $idx
     * @return string
     */
    public function getJarFileUris($idx = NULL){
      return $this->_get(6, $idx);
    }
    
    /**
     * Set <jar_file_uris> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\PigJob
     */
    public function setJarFileUris( $value, $idx = NULL){
      return $this->_set(6, $value, $idx);
    }
    
    /**
     * Get all elements of <jar_file_uris>
     *
     * @return string[]
     */
    public function getJarFileUrisList(){
     return $this->_get(6);
    }
    
    /**
     * Add a new element to <jar_file_uris>
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\PigJob
     */
    public function addJarFileUris( $value){
     return $this->_add(6, $value);
    }
    
    /**
     * Check if <logging_config> has a value
     *
     * @return boolean
     */
    public function hasLoggingConfig(){
      return $this->_has(7);
    }
    
    /**
     * Clear <logging_config> value
     *
     * @return \google\cloud\dataproc\v1\PigJob
     */
    public function clearLoggingConfig(){
      return $this->_clear(7);
    }
    
    /**
     * Get <logging_config> value
     *
     * @return \google\cloud\dataproc\v1\LoggingConfig
     */
    public function getLoggingConfig(){
      return $this->_get(7);
    }
    
    /**
     * Set <logging_config> value
     *
     * @param \google\cloud\dataproc\v1\LoggingConfig $value
     * @return \google\cloud\dataproc\v1\PigJob
     */
    public function setLoggingConfig(\google\cloud\dataproc\v1\LoggingConfig $value){
      return $this->_set(7, $value);
    }
  }
}

namespace google\cloud\dataproc\v1 {

  class JobPlacement extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $cluster_name = null;
    
    /**  @var string */
    public $cluster_uuid = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.dataproc.v1.JobPlacement');

      // OPTIONAL STRING cluster_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "cluster_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING cluster_uuid = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "cluster_uuid";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <cluster_name> has a value
     *
     * @return boolean
     */
    public function hasClusterName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <cluster_name> value
     *
     * @return \google\cloud\dataproc\v1\JobPlacement
     */
    public function clearClusterName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <cluster_name> value
     *
     * @return string
     */
    public function getClusterName(){
      return $this->_get(1);
    }
    
    /**
     * Set <cluster_name> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\JobPlacement
     */
    public function setClusterName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <cluster_uuid> has a value
     *
     * @return boolean
     */
    public function hasClusterUuid(){
      return $this->_has(2);
    }
    
    /**
     * Clear <cluster_uuid> value
     *
     * @return \google\cloud\dataproc\v1\JobPlacement
     */
    public function clearClusterUuid(){
      return $this->_clear(2);
    }
    
    /**
     * Get <cluster_uuid> value
     *
     * @return string
     */
    public function getClusterUuid(){
      return $this->_get(2);
    }
    
    /**
     * Set <cluster_uuid> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\JobPlacement
     */
    public function setClusterUuid( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\cloud\dataproc\v1\JobStatus {

  class State extends \DrSlump\Protobuf\Enum {
    const STATE_UNSPECIFIED = 0;
    const PENDING = 1;
    const SETUP_DONE = 8;
    const RUNNING = 2;
    const CANCEL_PENDING = 3;
    const CANCEL_STARTED = 7;
    const CANCELLED = 4;
    const DONE = 5;
    const ERROR = 6;
  }
}
namespace google\cloud\dataproc\v1 {

  class JobStatus extends \DrSlump\Protobuf\Message {

    /**  @var int - \google\cloud\dataproc\v1\JobStatus\State */
    public $state = null;
    
    /**  @var string */
    public $details = null;
    
    /**  @var \google\protobuf\Timestamp */
    public $state_start_time = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.dataproc.v1.JobStatus');

      // OPTIONAL ENUM state = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "state";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\dataproc\v1\JobStatus\State';
      $descriptor->addField($f);

      // OPTIONAL STRING details = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "details";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE state_start_time = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "state_start_time";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Timestamp';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <state> has a value
     *
     * @return boolean
     */
    public function hasState(){
      return $this->_has(1);
    }
    
    /**
     * Clear <state> value
     *
     * @return \google\cloud\dataproc\v1\JobStatus
     */
    public function clearState(){
      return $this->_clear(1);
    }
    
    /**
     * Get <state> value
     *
     * @return int - \google\cloud\dataproc\v1\JobStatus\State
     */
    public function getState(){
      return $this->_get(1);
    }
    
    /**
     * Set <state> value
     *
     * @param int - \google\cloud\dataproc\v1\JobStatus\State $value
     * @return \google\cloud\dataproc\v1\JobStatus
     */
    public function setState( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <details> has a value
     *
     * @return boolean
     */
    public function hasDetails(){
      return $this->_has(2);
    }
    
    /**
     * Clear <details> value
     *
     * @return \google\cloud\dataproc\v1\JobStatus
     */
    public function clearDetails(){
      return $this->_clear(2);
    }
    
    /**
     * Get <details> value
     *
     * @return string
     */
    public function getDetails(){
      return $this->_get(2);
    }
    
    /**
     * Set <details> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\JobStatus
     */
    public function setDetails( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <state_start_time> has a value
     *
     * @return boolean
     */
    public function hasStateStartTime(){
      return $this->_has(6);
    }
    
    /**
     * Clear <state_start_time> value
     *
     * @return \google\cloud\dataproc\v1\JobStatus
     */
    public function clearStateStartTime(){
      return $this->_clear(6);
    }
    
    /**
     * Get <state_start_time> value
     *
     * @return \google\protobuf\Timestamp
     */
    public function getStateStartTime(){
      return $this->_get(6);
    }
    
    /**
     * Set <state_start_time> value
     *
     * @param \google\protobuf\Timestamp $value
     * @return \google\cloud\dataproc\v1\JobStatus
     */
    public function setStateStartTime(\google\protobuf\Timestamp $value){
      return $this->_set(6, $value);
    }
  }
}

namespace google\cloud\dataproc\v1 {

  class JobReference extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $project_id = null;
    
    /**  @var string */
    public $job_id = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.dataproc.v1.JobReference');

      // OPTIONAL STRING project_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "project_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING job_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "job_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <project_id> has a value
     *
     * @return boolean
     */
    public function hasProjectId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <project_id> value
     *
     * @return \google\cloud\dataproc\v1\JobReference
     */
    public function clearProjectId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <project_id> value
     *
     * @return string
     */
    public function getProjectId(){
      return $this->_get(1);
    }
    
    /**
     * Set <project_id> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\JobReference
     */
    public function setProjectId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <job_id> has a value
     *
     * @return boolean
     */
    public function hasJobId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <job_id> value
     *
     * @return \google\cloud\dataproc\v1\JobReference
     */
    public function clearJobId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <job_id> value
     *
     * @return string
     */
    public function getJobId(){
      return $this->_get(2);
    }
    
    /**
     * Set <job_id> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\JobReference
     */
    public function setJobId( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\cloud\dataproc\v1 {

  class Job extends \DrSlump\Protobuf\Message {

    /**  @var \google\cloud\dataproc\v1\JobReference */
    public $reference = null;
    
    /**  @var \google\cloud\dataproc\v1\JobPlacement */
    public $placement = null;
    
    /**  @var \google\cloud\dataproc\v1\HadoopJob */
    public $hadoop_job = null;
    
    /**  @var \google\cloud\dataproc\v1\SparkJob */
    public $spark_job = null;
    
    /**  @var \google\cloud\dataproc\v1\PySparkJob */
    public $pyspark_job = null;
    
    /**  @var \google\cloud\dataproc\v1\HiveJob */
    public $hive_job = null;
    
    /**  @var \google\cloud\dataproc\v1\PigJob */
    public $pig_job = null;
    
    /**  @var \google\cloud\dataproc\v1\SparkSqlJob */
    public $spark_sql_job = null;
    
    /**  @var \google\cloud\dataproc\v1\JobStatus */
    public $status = null;
    
    /**  @var \google\cloud\dataproc\v1\JobStatus[]  */
    public $status_history = array();
    
    /**  @var string */
    public $driver_output_resource_uri = null;
    
    /**  @var string */
    public $driver_control_files_uri = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.dataproc.v1.Job');

      // OPTIONAL MESSAGE reference = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "reference";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\dataproc\v1\JobReference';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE placement = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "placement";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\dataproc\v1\JobPlacement';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE hadoop_job = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "hadoop_job";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\dataproc\v1\HadoopJob';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE spark_job = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "spark_job";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\dataproc\v1\SparkJob';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE pyspark_job = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "pyspark_job";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\dataproc\v1\PySparkJob';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE hive_job = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "hive_job";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\dataproc\v1\HiveJob';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE pig_job = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "pig_job";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\dataproc\v1\PigJob';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE spark_sql_job = 12
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 12;
      $f->name      = "spark_sql_job";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\dataproc\v1\SparkSqlJob';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE status = 8
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 8;
      $f->name      = "status";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\dataproc\v1\JobStatus';
      $descriptor->addField($f);

      // REPEATED MESSAGE status_history = 13
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 13;
      $f->name      = "status_history";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\cloud\dataproc\v1\JobStatus';
      $descriptor->addField($f);

      // OPTIONAL STRING driver_output_resource_uri = 17
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 17;
      $f->name      = "driver_output_resource_uri";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING driver_control_files_uri = 15
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 15;
      $f->name      = "driver_control_files_uri";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <reference> has a value
     *
     * @return boolean
     */
    public function hasReference(){
      return $this->_has(1);
    }
    
    /**
     * Clear <reference> value
     *
     * @return \google\cloud\dataproc\v1\Job
     */
    public function clearReference(){
      return $this->_clear(1);
    }
    
    /**
     * Get <reference> value
     *
     * @return \google\cloud\dataproc\v1\JobReference
     */
    public function getReference(){
      return $this->_get(1);
    }
    
    /**
     * Set <reference> value
     *
     * @param \google\cloud\dataproc\v1\JobReference $value
     * @return \google\cloud\dataproc\v1\Job
     */
    public function setReference(\google\cloud\dataproc\v1\JobReference $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <placement> has a value
     *
     * @return boolean
     */
    public function hasPlacement(){
      return $this->_has(2);
    }
    
    /**
     * Clear <placement> value
     *
     * @return \google\cloud\dataproc\v1\Job
     */
    public function clearPlacement(){
      return $this->_clear(2);
    }
    
    /**
     * Get <placement> value
     *
     * @return \google\cloud\dataproc\v1\JobPlacement
     */
    public function getPlacement(){
      return $this->_get(2);
    }
    
    /**
     * Set <placement> value
     *
     * @param \google\cloud\dataproc\v1\JobPlacement $value
     * @return \google\cloud\dataproc\v1\Job
     */
    public function setPlacement(\google\cloud\dataproc\v1\JobPlacement $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <hadoop_job> has a value
     *
     * @return boolean
     */
    public function hasHadoopJob(){
      return $this->_has(3);
    }
    
    /**
     * Clear <hadoop_job> value
     *
     * @return \google\cloud\dataproc\v1\Job
     */
    public function clearHadoopJob(){
      return $this->_clear(3);
    }
    
    /**
     * Get <hadoop_job> value
     *
     * @return \google\cloud\dataproc\v1\HadoopJob
     */
    public function getHadoopJob(){
      return $this->_get(3);
    }
    
    /**
     * Set <hadoop_job> value
     *
     * @param \google\cloud\dataproc\v1\HadoopJob $value
     * @return \google\cloud\dataproc\v1\Job
     */
    public function setHadoopJob(\google\cloud\dataproc\v1\HadoopJob $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <spark_job> has a value
     *
     * @return boolean
     */
    public function hasSparkJob(){
      return $this->_has(4);
    }
    
    /**
     * Clear <spark_job> value
     *
     * @return \google\cloud\dataproc\v1\Job
     */
    public function clearSparkJob(){
      return $this->_clear(4);
    }
    
    /**
     * Get <spark_job> value
     *
     * @return \google\cloud\dataproc\v1\SparkJob
     */
    public function getSparkJob(){
      return $this->_get(4);
    }
    
    /**
     * Set <spark_job> value
     *
     * @param \google\cloud\dataproc\v1\SparkJob $value
     * @return \google\cloud\dataproc\v1\Job
     */
    public function setSparkJob(\google\cloud\dataproc\v1\SparkJob $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <pyspark_job> has a value
     *
     * @return boolean
     */
    public function hasPysparkJob(){
      return $this->_has(5);
    }
    
    /**
     * Clear <pyspark_job> value
     *
     * @return \google\cloud\dataproc\v1\Job
     */
    public function clearPysparkJob(){
      return $this->_clear(5);
    }
    
    /**
     * Get <pyspark_job> value
     *
     * @return \google\cloud\dataproc\v1\PySparkJob
     */
    public function getPysparkJob(){
      return $this->_get(5);
    }
    
    /**
     * Set <pyspark_job> value
     *
     * @param \google\cloud\dataproc\v1\PySparkJob $value
     * @return \google\cloud\dataproc\v1\Job
     */
    public function setPysparkJob(\google\cloud\dataproc\v1\PySparkJob $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <hive_job> has a value
     *
     * @return boolean
     */
    public function hasHiveJob(){
      return $this->_has(6);
    }
    
    /**
     * Clear <hive_job> value
     *
     * @return \google\cloud\dataproc\v1\Job
     */
    public function clearHiveJob(){
      return $this->_clear(6);
    }
    
    /**
     * Get <hive_job> value
     *
     * @return \google\cloud\dataproc\v1\HiveJob
     */
    public function getHiveJob(){
      return $this->_get(6);
    }
    
    /**
     * Set <hive_job> value
     *
     * @param \google\cloud\dataproc\v1\HiveJob $value
     * @return \google\cloud\dataproc\v1\Job
     */
    public function setHiveJob(\google\cloud\dataproc\v1\HiveJob $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <pig_job> has a value
     *
     * @return boolean
     */
    public function hasPigJob(){
      return $this->_has(7);
    }
    
    /**
     * Clear <pig_job> value
     *
     * @return \google\cloud\dataproc\v1\Job
     */
    public function clearPigJob(){
      return $this->_clear(7);
    }
    
    /**
     * Get <pig_job> value
     *
     * @return \google\cloud\dataproc\v1\PigJob
     */
    public function getPigJob(){
      return $this->_get(7);
    }
    
    /**
     * Set <pig_job> value
     *
     * @param \google\cloud\dataproc\v1\PigJob $value
     * @return \google\cloud\dataproc\v1\Job
     */
    public function setPigJob(\google\cloud\dataproc\v1\PigJob $value){
      return $this->_set(7, $value);
    }
    
    /**
     * Check if <spark_sql_job> has a value
     *
     * @return boolean
     */
    public function hasSparkSqlJob(){
      return $this->_has(12);
    }
    
    /**
     * Clear <spark_sql_job> value
     *
     * @return \google\cloud\dataproc\v1\Job
     */
    public function clearSparkSqlJob(){
      return $this->_clear(12);
    }
    
    /**
     * Get <spark_sql_job> value
     *
     * @return \google\cloud\dataproc\v1\SparkSqlJob
     */
    public function getSparkSqlJob(){
      return $this->_get(12);
    }
    
    /**
     * Set <spark_sql_job> value
     *
     * @param \google\cloud\dataproc\v1\SparkSqlJob $value
     * @return \google\cloud\dataproc\v1\Job
     */
    public function setSparkSqlJob(\google\cloud\dataproc\v1\SparkSqlJob $value){
      return $this->_set(12, $value);
    }
    
    /**
     * Check if <status> has a value
     *
     * @return boolean
     */
    public function hasStatus(){
      return $this->_has(8);
    }
    
    /**
     * Clear <status> value
     *
     * @return \google\cloud\dataproc\v1\Job
     */
    public function clearStatus(){
      return $this->_clear(8);
    }
    
    /**
     * Get <status> value
     *
     * @return \google\cloud\dataproc\v1\JobStatus
     */
    public function getStatus(){
      return $this->_get(8);
    }
    
    /**
     * Set <status> value
     *
     * @param \google\cloud\dataproc\v1\JobStatus $value
     * @return \google\cloud\dataproc\v1\Job
     */
    public function setStatus(\google\cloud\dataproc\v1\JobStatus $value){
      return $this->_set(8, $value);
    }
    
    /**
     * Check if <status_history> has a value
     *
     * @return boolean
     */
    public function hasStatusHistory(){
      return $this->_has(13);
    }
    
    /**
     * Clear <status_history> value
     *
     * @return \google\cloud\dataproc\v1\Job
     */
    public function clearStatusHistory(){
      return $this->_clear(13);
    }
    
    /**
     * Get <status_history> value
     *
     * @param int $idx
     * @return \google\cloud\dataproc\v1\JobStatus
     */
    public function getStatusHistory($idx = NULL){
      return $this->_get(13, $idx);
    }
    
    /**
     * Set <status_history> value
     *
     * @param \google\cloud\dataproc\v1\JobStatus $value
     * @return \google\cloud\dataproc\v1\Job
     */
    public function setStatusHistory(\google\cloud\dataproc\v1\JobStatus $value, $idx = NULL){
      return $this->_set(13, $value, $idx);
    }
    
    /**
     * Get all elements of <status_history>
     *
     * @return \google\cloud\dataproc\v1\JobStatus[]
     */
    public function getStatusHistoryList(){
     return $this->_get(13);
    }
    
    /**
     * Add a new element to <status_history>
     *
     * @param \google\cloud\dataproc\v1\JobStatus $value
     * @return \google\cloud\dataproc\v1\Job
     */
    public function addStatusHistory(\google\cloud\dataproc\v1\JobStatus $value){
     return $this->_add(13, $value);
    }
    
    /**
     * Check if <driver_output_resource_uri> has a value
     *
     * @return boolean
     */
    public function hasDriverOutputResourceUri(){
      return $this->_has(17);
    }
    
    /**
     * Clear <driver_output_resource_uri> value
     *
     * @return \google\cloud\dataproc\v1\Job
     */
    public function clearDriverOutputResourceUri(){
      return $this->_clear(17);
    }
    
    /**
     * Get <driver_output_resource_uri> value
     *
     * @return string
     */
    public function getDriverOutputResourceUri(){
      return $this->_get(17);
    }
    
    /**
     * Set <driver_output_resource_uri> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\Job
     */
    public function setDriverOutputResourceUri( $value){
      return $this->_set(17, $value);
    }
    
    /**
     * Check if <driver_control_files_uri> has a value
     *
     * @return boolean
     */
    public function hasDriverControlFilesUri(){
      return $this->_has(15);
    }
    
    /**
     * Clear <driver_control_files_uri> value
     *
     * @return \google\cloud\dataproc\v1\Job
     */
    public function clearDriverControlFilesUri(){
      return $this->_clear(15);
    }
    
    /**
     * Get <driver_control_files_uri> value
     *
     * @return string
     */
    public function getDriverControlFilesUri(){
      return $this->_get(15);
    }
    
    /**
     * Set <driver_control_files_uri> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\Job
     */
    public function setDriverControlFilesUri( $value){
      return $this->_set(15, $value);
    }
  }
}

namespace google\cloud\dataproc\v1 {

  class SubmitJobRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $project_id = null;
    
    /**  @var string */
    public $region = null;
    
    /**  @var \google\cloud\dataproc\v1\Job */
    public $job = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.dataproc.v1.SubmitJobRequest');

      // OPTIONAL STRING project_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "project_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING region = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "region";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE job = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "job";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\dataproc\v1\Job';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <project_id> has a value
     *
     * @return boolean
     */
    public function hasProjectId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <project_id> value
     *
     * @return \google\cloud\dataproc\v1\SubmitJobRequest
     */
    public function clearProjectId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <project_id> value
     *
     * @return string
     */
    public function getProjectId(){
      return $this->_get(1);
    }
    
    /**
     * Set <project_id> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\SubmitJobRequest
     */
    public function setProjectId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <region> has a value
     *
     * @return boolean
     */
    public function hasRegion(){
      return $this->_has(3);
    }
    
    /**
     * Clear <region> value
     *
     * @return \google\cloud\dataproc\v1\SubmitJobRequest
     */
    public function clearRegion(){
      return $this->_clear(3);
    }
    
    /**
     * Get <region> value
     *
     * @return string
     */
    public function getRegion(){
      return $this->_get(3);
    }
    
    /**
     * Set <region> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\SubmitJobRequest
     */
    public function setRegion( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <job> has a value
     *
     * @return boolean
     */
    public function hasJob(){
      return $this->_has(2);
    }
    
    /**
     * Clear <job> value
     *
     * @return \google\cloud\dataproc\v1\SubmitJobRequest
     */
    public function clearJob(){
      return $this->_clear(2);
    }
    
    /**
     * Get <job> value
     *
     * @return \google\cloud\dataproc\v1\Job
     */
    public function getJob(){
      return $this->_get(2);
    }
    
    /**
     * Set <job> value
     *
     * @param \google\cloud\dataproc\v1\Job $value
     * @return \google\cloud\dataproc\v1\SubmitJobRequest
     */
    public function setJob(\google\cloud\dataproc\v1\Job $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\cloud\dataproc\v1 {

  class GetJobRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $project_id = null;
    
    /**  @var string */
    public $region = null;
    
    /**  @var string */
    public $job_id = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.dataproc.v1.GetJobRequest');

      // OPTIONAL STRING project_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "project_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING region = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "region";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING job_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "job_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <project_id> has a value
     *
     * @return boolean
     */
    public function hasProjectId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <project_id> value
     *
     * @return \google\cloud\dataproc\v1\GetJobRequest
     */
    public function clearProjectId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <project_id> value
     *
     * @return string
     */
    public function getProjectId(){
      return $this->_get(1);
    }
    
    /**
     * Set <project_id> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\GetJobRequest
     */
    public function setProjectId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <region> has a value
     *
     * @return boolean
     */
    public function hasRegion(){
      return $this->_has(3);
    }
    
    /**
     * Clear <region> value
     *
     * @return \google\cloud\dataproc\v1\GetJobRequest
     */
    public function clearRegion(){
      return $this->_clear(3);
    }
    
    /**
     * Get <region> value
     *
     * @return string
     */
    public function getRegion(){
      return $this->_get(3);
    }
    
    /**
     * Set <region> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\GetJobRequest
     */
    public function setRegion( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <job_id> has a value
     *
     * @return boolean
     */
    public function hasJobId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <job_id> value
     *
     * @return \google\cloud\dataproc\v1\GetJobRequest
     */
    public function clearJobId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <job_id> value
     *
     * @return string
     */
    public function getJobId(){
      return $this->_get(2);
    }
    
    /**
     * Set <job_id> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\GetJobRequest
     */
    public function setJobId( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\cloud\dataproc\v1\ListJobsRequest {

  class JobStateMatcher extends \DrSlump\Protobuf\Enum {
    const ALL = 0;
    const ACTIVE = 1;
    const NON_ACTIVE = 2;
  }
}
namespace google\cloud\dataproc\v1 {

  class ListJobsRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $project_id = null;
    
    /**  @var string */
    public $region = null;
    
    /**  @var int */
    public $page_size = null;
    
    /**  @var string */
    public $page_token = null;
    
    /**  @var string */
    public $cluster_name = null;
    
    /**  @var int - \google\cloud\dataproc\v1\ListJobsRequest\JobStateMatcher */
    public $job_state_matcher = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.dataproc.v1.ListJobsRequest');

      // OPTIONAL STRING project_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "project_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING region = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "region";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 page_size = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "page_size";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING page_token = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING cluster_name = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "cluster_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL ENUM job_state_matcher = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "job_state_matcher";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\cloud\dataproc\v1\ListJobsRequest\JobStateMatcher';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <project_id> has a value
     *
     * @return boolean
     */
    public function hasProjectId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <project_id> value
     *
     * @return \google\cloud\dataproc\v1\ListJobsRequest
     */
    public function clearProjectId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <project_id> value
     *
     * @return string
     */
    public function getProjectId(){
      return $this->_get(1);
    }
    
    /**
     * Set <project_id> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\ListJobsRequest
     */
    public function setProjectId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <region> has a value
     *
     * @return boolean
     */
    public function hasRegion(){
      return $this->_has(6);
    }
    
    /**
     * Clear <region> value
     *
     * @return \google\cloud\dataproc\v1\ListJobsRequest
     */
    public function clearRegion(){
      return $this->_clear(6);
    }
    
    /**
     * Get <region> value
     *
     * @return string
     */
    public function getRegion(){
      return $this->_get(6);
    }
    
    /**
     * Set <region> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\ListJobsRequest
     */
    public function setRegion( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <page_size> has a value
     *
     * @return boolean
     */
    public function hasPageSize(){
      return $this->_has(2);
    }
    
    /**
     * Clear <page_size> value
     *
     * @return \google\cloud\dataproc\v1\ListJobsRequest
     */
    public function clearPageSize(){
      return $this->_clear(2);
    }
    
    /**
     * Get <page_size> value
     *
     * @return int
     */
    public function getPageSize(){
      return $this->_get(2);
    }
    
    /**
     * Set <page_size> value
     *
     * @param int $value
     * @return \google\cloud\dataproc\v1\ListJobsRequest
     */
    public function setPageSize( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <page_token> has a value
     *
     * @return boolean
     */
    public function hasPageToken(){
      return $this->_has(3);
    }
    
    /**
     * Clear <page_token> value
     *
     * @return \google\cloud\dataproc\v1\ListJobsRequest
     */
    public function clearPageToken(){
      return $this->_clear(3);
    }
    
    /**
     * Get <page_token> value
     *
     * @return string
     */
    public function getPageToken(){
      return $this->_get(3);
    }
    
    /**
     * Set <page_token> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\ListJobsRequest
     */
    public function setPageToken( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <cluster_name> has a value
     *
     * @return boolean
     */
    public function hasClusterName(){
      return $this->_has(4);
    }
    
    /**
     * Clear <cluster_name> value
     *
     * @return \google\cloud\dataproc\v1\ListJobsRequest
     */
    public function clearClusterName(){
      return $this->_clear(4);
    }
    
    /**
     * Get <cluster_name> value
     *
     * @return string
     */
    public function getClusterName(){
      return $this->_get(4);
    }
    
    /**
     * Set <cluster_name> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\ListJobsRequest
     */
    public function setClusterName( $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <job_state_matcher> has a value
     *
     * @return boolean
     */
    public function hasJobStateMatcher(){
      return $this->_has(5);
    }
    
    /**
     * Clear <job_state_matcher> value
     *
     * @return \google\cloud\dataproc\v1\ListJobsRequest
     */
    public function clearJobStateMatcher(){
      return $this->_clear(5);
    }
    
    /**
     * Get <job_state_matcher> value
     *
     * @return int - \google\cloud\dataproc\v1\ListJobsRequest\JobStateMatcher
     */
    public function getJobStateMatcher(){
      return $this->_get(5);
    }
    
    /**
     * Set <job_state_matcher> value
     *
     * @param int - \google\cloud\dataproc\v1\ListJobsRequest\JobStateMatcher $value
     * @return \google\cloud\dataproc\v1\ListJobsRequest
     */
    public function setJobStateMatcher( $value){
      return $this->_set(5, $value);
    }
  }
}

namespace google\cloud\dataproc\v1 {

  class ListJobsResponse extends \DrSlump\Protobuf\Message {

    /**  @var \google\cloud\dataproc\v1\Job[]  */
    public $jobs = array();
    
    /**  @var string */
    public $next_page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.dataproc.v1.ListJobsResponse');

      // REPEATED MESSAGE jobs = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "jobs";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\cloud\dataproc\v1\Job';
      $descriptor->addField($f);

      // OPTIONAL STRING next_page_token = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "next_page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <jobs> has a value
     *
     * @return boolean
     */
    public function hasJobs(){
      return $this->_has(1);
    }
    
    /**
     * Clear <jobs> value
     *
     * @return \google\cloud\dataproc\v1\ListJobsResponse
     */
    public function clearJobs(){
      return $this->_clear(1);
    }
    
    /**
     * Get <jobs> value
     *
     * @param int $idx
     * @return \google\cloud\dataproc\v1\Job
     */
    public function getJobs($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <jobs> value
     *
     * @param \google\cloud\dataproc\v1\Job $value
     * @return \google\cloud\dataproc\v1\ListJobsResponse
     */
    public function setJobs(\google\cloud\dataproc\v1\Job $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <jobs>
     *
     * @return \google\cloud\dataproc\v1\Job[]
     */
    public function getJobsList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <jobs>
     *
     * @param \google\cloud\dataproc\v1\Job $value
     * @return \google\cloud\dataproc\v1\ListJobsResponse
     */
    public function addJobs(\google\cloud\dataproc\v1\Job $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <next_page_token> has a value
     *
     * @return boolean
     */
    public function hasNextPageToken(){
      return $this->_has(2);
    }
    
    /**
     * Clear <next_page_token> value
     *
     * @return \google\cloud\dataproc\v1\ListJobsResponse
     */
    public function clearNextPageToken(){
      return $this->_clear(2);
    }
    
    /**
     * Get <next_page_token> value
     *
     * @return string
     */
    public function getNextPageToken(){
      return $this->_get(2);
    }
    
    /**
     * Set <next_page_token> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\ListJobsResponse
     */
    public function setNextPageToken( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\cloud\dataproc\v1 {

  class CancelJobRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $project_id = null;
    
    /**  @var string */
    public $region = null;
    
    /**  @var string */
    public $job_id = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.dataproc.v1.CancelJobRequest');

      // OPTIONAL STRING project_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "project_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING region = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "region";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING job_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "job_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <project_id> has a value
     *
     * @return boolean
     */
    public function hasProjectId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <project_id> value
     *
     * @return \google\cloud\dataproc\v1\CancelJobRequest
     */
    public function clearProjectId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <project_id> value
     *
     * @return string
     */
    public function getProjectId(){
      return $this->_get(1);
    }
    
    /**
     * Set <project_id> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\CancelJobRequest
     */
    public function setProjectId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <region> has a value
     *
     * @return boolean
     */
    public function hasRegion(){
      return $this->_has(3);
    }
    
    /**
     * Clear <region> value
     *
     * @return \google\cloud\dataproc\v1\CancelJobRequest
     */
    public function clearRegion(){
      return $this->_clear(3);
    }
    
    /**
     * Get <region> value
     *
     * @return string
     */
    public function getRegion(){
      return $this->_get(3);
    }
    
    /**
     * Set <region> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\CancelJobRequest
     */
    public function setRegion( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <job_id> has a value
     *
     * @return boolean
     */
    public function hasJobId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <job_id> value
     *
     * @return \google\cloud\dataproc\v1\CancelJobRequest
     */
    public function clearJobId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <job_id> value
     *
     * @return string
     */
    public function getJobId(){
      return $this->_get(2);
    }
    
    /**
     * Set <job_id> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\CancelJobRequest
     */
    public function setJobId( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\cloud\dataproc\v1 {

  class DeleteJobRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $project_id = null;
    
    /**  @var string */
    public $region = null;
    
    /**  @var string */
    public $job_id = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.cloud.dataproc.v1.DeleteJobRequest');

      // OPTIONAL STRING project_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "project_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING region = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "region";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING job_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "job_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <project_id> has a value
     *
     * @return boolean
     */
    public function hasProjectId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <project_id> value
     *
     * @return \google\cloud\dataproc\v1\DeleteJobRequest
     */
    public function clearProjectId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <project_id> value
     *
     * @return string
     */
    public function getProjectId(){
      return $this->_get(1);
    }
    
    /**
     * Set <project_id> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\DeleteJobRequest
     */
    public function setProjectId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <region> has a value
     *
     * @return boolean
     */
    public function hasRegion(){
      return $this->_has(3);
    }
    
    /**
     * Clear <region> value
     *
     * @return \google\cloud\dataproc\v1\DeleteJobRequest
     */
    public function clearRegion(){
      return $this->_clear(3);
    }
    
    /**
     * Get <region> value
     *
     * @return string
     */
    public function getRegion(){
      return $this->_get(3);
    }
    
    /**
     * Set <region> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\DeleteJobRequest
     */
    public function setRegion( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <job_id> has a value
     *
     * @return boolean
     */
    public function hasJobId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <job_id> value
     *
     * @return \google\cloud\dataproc\v1\DeleteJobRequest
     */
    public function clearJobId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <job_id> value
     *
     * @return string
     */
    public function getJobId(){
      return $this->_get(2);
    }
    
    /**
     * Set <job_id> value
     *
     * @param string $value
     * @return \google\cloud\dataproc\v1\DeleteJobRequest
     */
    public function setJobId( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\cloud\dataproc\v1 {

  class JobControllerClient extends \Grpc\BaseStub {

    public function __construct($hostname, $opts, $channel = null) {
      parent::__construct($hostname, $opts, $channel);
    }
    /**
     * @param google\cloud\dataproc\v1\SubmitJobRequest $input
     */
    public function SubmitJob(\google\cloud\dataproc\v1\SubmitJobRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.cloud.dataproc.v1.JobController/SubmitJob', $argument, '\google\cloud\dataproc\v1\Job::deserialize', $metadata, $options);
    }
    /**
     * @param google\cloud\dataproc\v1\GetJobRequest $input
     */
    public function GetJob(\google\cloud\dataproc\v1\GetJobRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.cloud.dataproc.v1.JobController/GetJob', $argument, '\google\cloud\dataproc\v1\Job::deserialize', $metadata, $options);
    }
    /**
     * @param google\cloud\dataproc\v1\ListJobsRequest $input
     */
    public function ListJobs(\google\cloud\dataproc\v1\ListJobsRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.cloud.dataproc.v1.JobController/ListJobs', $argument, '\google\cloud\dataproc\v1\ListJobsResponse::deserialize', $metadata, $options);
    }
    /**
     * @param google\cloud\dataproc\v1\CancelJobRequest $input
     */
    public function CancelJob(\google\cloud\dataproc\v1\CancelJobRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.cloud.dataproc.v1.JobController/CancelJob', $argument, '\google\cloud\dataproc\v1\Job::deserialize', $metadata, $options);
    }
    /**
     * @param google\cloud\dataproc\v1\DeleteJobRequest $input
     */
    public function DeleteJob(\google\cloud\dataproc\v1\DeleteJobRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.cloud.dataproc.v1.JobController/DeleteJob', $argument, '\google\protobuf\Empty::deserialize', $metadata, $options);
    }
  }
}
