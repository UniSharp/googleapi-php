<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: google/appengine/v1/deploy.proto
//   Date: 2017-06-13 04:23:25

namespace google\appengine\v1\Deployment {

  class FilesEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $key = null;
    
    /**  @var \google\appengine\v1\FileInfo */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.Deployment.FilesEntry');

      // OPTIONAL STRING key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\appengine\v1\FileInfo';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <key> has a value
     *
     * @return boolean
     */
    public function hasKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <key> value
     *
     * @return \google\appengine\v1\Deployment\FilesEntry
     */
    public function clearKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <key> value
     *
     * @return string
     */
    public function getKey(){
      return $this->_get(1);
    }
    
    /**
     * Set <key> value
     *
     * @param string $value
     * @return \google\appengine\v1\Deployment\FilesEntry
     */
    public function setKey( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\appengine\v1\Deployment\FilesEntry
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return \google\appengine\v1\FileInfo
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param \google\appengine\v1\FileInfo $value
     * @return \google\appengine\v1\Deployment\FilesEntry
     */
    public function setValue(\google\appengine\v1\FileInfo $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\appengine\v1 {

  class Deployment extends \DrSlump\Protobuf\Message {

    /**  @var \google\appengine\v1\Deployment\FilesEntry[]  */
    public $files = array();
    
    /**  @var \google\appengine\v1\ContainerInfo */
    public $container = null;
    
    /**  @var \google\appengine\v1\ZipInfo */
    public $zip = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.Deployment');

      // REPEATED MESSAGE files = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "files";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\appengine\v1\Deployment\FilesEntry';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE container = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "container";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\appengine\v1\ContainerInfo';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE zip = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "zip";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\appengine\v1\ZipInfo';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <files> has a value
     *
     * @return boolean
     */
    public function hasFiles(){
      return $this->_has(1);
    }
    
    /**
     * Clear <files> value
     *
     * @return \google\appengine\v1\Deployment
     */
    public function clearFiles(){
      return $this->_clear(1);
    }
    
    /**
     * Get <files> value
     *
     * @param int $idx
     * @return \google\appengine\v1\Deployment\FilesEntry
     */
    public function getFiles($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <files> value
     *
     * @param \google\appengine\v1\Deployment\FilesEntry $value
     * @return \google\appengine\v1\Deployment
     */
    public function setFiles(\google\appengine\v1\Deployment\FilesEntry $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <files>
     *
     * @return \google\appengine\v1\Deployment\FilesEntry[]
     */
    public function getFilesList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <files>
     *
     * @param \google\appengine\v1\Deployment\FilesEntry $value
     * @return \google\appengine\v1\Deployment
     */
    public function addFiles(\google\appengine\v1\Deployment\FilesEntry $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <container> has a value
     *
     * @return boolean
     */
    public function hasContainer(){
      return $this->_has(2);
    }
    
    /**
     * Clear <container> value
     *
     * @return \google\appengine\v1\Deployment
     */
    public function clearContainer(){
      return $this->_clear(2);
    }
    
    /**
     * Get <container> value
     *
     * @return \google\appengine\v1\ContainerInfo
     */
    public function getContainer(){
      return $this->_get(2);
    }
    
    /**
     * Set <container> value
     *
     * @param \google\appengine\v1\ContainerInfo $value
     * @return \google\appengine\v1\Deployment
     */
    public function setContainer(\google\appengine\v1\ContainerInfo $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <zip> has a value
     *
     * @return boolean
     */
    public function hasZip(){
      return $this->_has(3);
    }
    
    /**
     * Clear <zip> value
     *
     * @return \google\appengine\v1\Deployment
     */
    public function clearZip(){
      return $this->_clear(3);
    }
    
    /**
     * Get <zip> value
     *
     * @return \google\appengine\v1\ZipInfo
     */
    public function getZip(){
      return $this->_get(3);
    }
    
    /**
     * Set <zip> value
     *
     * @param \google\appengine\v1\ZipInfo $value
     * @return \google\appengine\v1\Deployment
     */
    public function setZip(\google\appengine\v1\ZipInfo $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\appengine\v1 {

  class FileInfo extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $source_url = null;
    
    /**  @var string */
    public $sha1_sum = null;
    
    /**  @var string */
    public $mime_type = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.FileInfo');

      // OPTIONAL STRING source_url = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "source_url";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING sha1_sum = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "sha1_sum";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING mime_type = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "mime_type";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <source_url> has a value
     *
     * @return boolean
     */
    public function hasSourceUrl(){
      return $this->_has(1);
    }
    
    /**
     * Clear <source_url> value
     *
     * @return \google\appengine\v1\FileInfo
     */
    public function clearSourceUrl(){
      return $this->_clear(1);
    }
    
    /**
     * Get <source_url> value
     *
     * @return string
     */
    public function getSourceUrl(){
      return $this->_get(1);
    }
    
    /**
     * Set <source_url> value
     *
     * @param string $value
     * @return \google\appengine\v1\FileInfo
     */
    public function setSourceUrl( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <sha1_sum> has a value
     *
     * @return boolean
     */
    public function hasSha1Sum(){
      return $this->_has(2);
    }
    
    /**
     * Clear <sha1_sum> value
     *
     * @return \google\appengine\v1\FileInfo
     */
    public function clearSha1Sum(){
      return $this->_clear(2);
    }
    
    /**
     * Get <sha1_sum> value
     *
     * @return string
     */
    public function getSha1Sum(){
      return $this->_get(2);
    }
    
    /**
     * Set <sha1_sum> value
     *
     * @param string $value
     * @return \google\appengine\v1\FileInfo
     */
    public function setSha1Sum( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <mime_type> has a value
     *
     * @return boolean
     */
    public function hasMimeType(){
      return $this->_has(3);
    }
    
    /**
     * Clear <mime_type> value
     *
     * @return \google\appengine\v1\FileInfo
     */
    public function clearMimeType(){
      return $this->_clear(3);
    }
    
    /**
     * Get <mime_type> value
     *
     * @return string
     */
    public function getMimeType(){
      return $this->_get(3);
    }
    
    /**
     * Set <mime_type> value
     *
     * @param string $value
     * @return \google\appengine\v1\FileInfo
     */
    public function setMimeType( $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\appengine\v1 {

  class ContainerInfo extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $image = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.ContainerInfo');

      // OPTIONAL STRING image = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "image";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <image> has a value
     *
     * @return boolean
     */
    public function hasImage(){
      return $this->_has(1);
    }
    
    /**
     * Clear <image> value
     *
     * @return \google\appengine\v1\ContainerInfo
     */
    public function clearImage(){
      return $this->_clear(1);
    }
    
    /**
     * Get <image> value
     *
     * @return string
     */
    public function getImage(){
      return $this->_get(1);
    }
    
    /**
     * Set <image> value
     *
     * @param string $value
     * @return \google\appengine\v1\ContainerInfo
     */
    public function setImage( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\appengine\v1 {

  class ZipInfo extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $source_url = null;
    
    /**  @var int */
    public $files_count = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.appengine.v1.ZipInfo');

      // OPTIONAL STRING source_url = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "source_url";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 files_count = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "files_count";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <source_url> has a value
     *
     * @return boolean
     */
    public function hasSourceUrl(){
      return $this->_has(3);
    }
    
    /**
     * Clear <source_url> value
     *
     * @return \google\appengine\v1\ZipInfo
     */
    public function clearSourceUrl(){
      return $this->_clear(3);
    }
    
    /**
     * Get <source_url> value
     *
     * @return string
     */
    public function getSourceUrl(){
      return $this->_get(3);
    }
    
    /**
     * Set <source_url> value
     *
     * @param string $value
     * @return \google\appengine\v1\ZipInfo
     */
    public function setSourceUrl( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <files_count> has a value
     *
     * @return boolean
     */
    public function hasFilesCount(){
      return $this->_has(4);
    }
    
    /**
     * Clear <files_count> value
     *
     * @return \google\appengine\v1\ZipInfo
     */
    public function clearFilesCount(){
      return $this->_clear(4);
    }
    
    /**
     * Get <files_count> value
     *
     * @return int
     */
    public function getFilesCount(){
      return $this->_get(4);
    }
    
    /**
     * Set <files_count> value
     *
     * @param int $value
     * @return \google\appengine\v1\ZipInfo
     */
    public function setFilesCount( $value){
      return $this->_set(4, $value);
    }
  }
}

