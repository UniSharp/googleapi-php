<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: google/api/servicemanagement/v1/servicemanager.proto
//   Date: 2017-06-13 04:23:07

namespace google\api\servicemanagement\v1 {

  class ListServicesRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $producer_project_id = null;
    
    /**  @var int */
    public $page_size = null;
    
    /**  @var string */
    public $page_token = null;
    
    /**  @var string */
    public $consumer_id = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.servicemanagement.v1.ListServicesRequest');

      // OPTIONAL STRING producer_project_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "producer_project_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 page_size = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "page_size";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING page_token = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING consumer_id = 7
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 7;
      $f->name      = "consumer_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <producer_project_id> has a value
     *
     * @return boolean
     */
    public function hasProducerProjectId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <producer_project_id> value
     *
     * @return \google\api\servicemanagement\v1\ListServicesRequest
     */
    public function clearProducerProjectId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <producer_project_id> value
     *
     * @return string
     */
    public function getProducerProjectId(){
      return $this->_get(1);
    }
    
    /**
     * Set <producer_project_id> value
     *
     * @param string $value
     * @return \google\api\servicemanagement\v1\ListServicesRequest
     */
    public function setProducerProjectId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <page_size> has a value
     *
     * @return boolean
     */
    public function hasPageSize(){
      return $this->_has(5);
    }
    
    /**
     * Clear <page_size> value
     *
     * @return \google\api\servicemanagement\v1\ListServicesRequest
     */
    public function clearPageSize(){
      return $this->_clear(5);
    }
    
    /**
     * Get <page_size> value
     *
     * @return int
     */
    public function getPageSize(){
      return $this->_get(5);
    }
    
    /**
     * Set <page_size> value
     *
     * @param int $value
     * @return \google\api\servicemanagement\v1\ListServicesRequest
     */
    public function setPageSize( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <page_token> has a value
     *
     * @return boolean
     */
    public function hasPageToken(){
      return $this->_has(6);
    }
    
    /**
     * Clear <page_token> value
     *
     * @return \google\api\servicemanagement\v1\ListServicesRequest
     */
    public function clearPageToken(){
      return $this->_clear(6);
    }
    
    /**
     * Get <page_token> value
     *
     * @return string
     */
    public function getPageToken(){
      return $this->_get(6);
    }
    
    /**
     * Set <page_token> value
     *
     * @param string $value
     * @return \google\api\servicemanagement\v1\ListServicesRequest
     */
    public function setPageToken( $value){
      return $this->_set(6, $value);
    }
    
    /**
     * Check if <consumer_id> has a value
     *
     * @return boolean
     */
    public function hasConsumerId(){
      return $this->_has(7);
    }
    
    /**
     * Clear <consumer_id> value
     *
     * @return \google\api\servicemanagement\v1\ListServicesRequest
     */
    public function clearConsumerId(){
      return $this->_clear(7);
    }
    
    /**
     * Get <consumer_id> value
     *
     * @return string
     */
    public function getConsumerId(){
      return $this->_get(7);
    }
    
    /**
     * Set <consumer_id> value
     *
     * @param string $value
     * @return \google\api\servicemanagement\v1\ListServicesRequest
     */
    public function setConsumerId( $value){
      return $this->_set(7, $value);
    }
  }
}

namespace google\api\servicemanagement\v1 {

  class ListServicesResponse extends \DrSlump\Protobuf\Message {

    /**  @var \google\api\servicemanagement\v1\ManagedService[]  */
    public $services = array();
    
    /**  @var string */
    public $next_page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.servicemanagement.v1.ListServicesResponse');

      // REPEATED MESSAGE services = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "services";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\api\servicemanagement\v1\ManagedService';
      $descriptor->addField($f);

      // OPTIONAL STRING next_page_token = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "next_page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <services> has a value
     *
     * @return boolean
     */
    public function hasServices(){
      return $this->_has(1);
    }
    
    /**
     * Clear <services> value
     *
     * @return \google\api\servicemanagement\v1\ListServicesResponse
     */
    public function clearServices(){
      return $this->_clear(1);
    }
    
    /**
     * Get <services> value
     *
     * @param int $idx
     * @return \google\api\servicemanagement\v1\ManagedService
     */
    public function getServices($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <services> value
     *
     * @param \google\api\servicemanagement\v1\ManagedService $value
     * @return \google\api\servicemanagement\v1\ListServicesResponse
     */
    public function setServices(\google\api\servicemanagement\v1\ManagedService $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <services>
     *
     * @return \google\api\servicemanagement\v1\ManagedService[]
     */
    public function getServicesList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <services>
     *
     * @param \google\api\servicemanagement\v1\ManagedService $value
     * @return \google\api\servicemanagement\v1\ListServicesResponse
     */
    public function addServices(\google\api\servicemanagement\v1\ManagedService $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <next_page_token> has a value
     *
     * @return boolean
     */
    public function hasNextPageToken(){
      return $this->_has(2);
    }
    
    /**
     * Clear <next_page_token> value
     *
     * @return \google\api\servicemanagement\v1\ListServicesResponse
     */
    public function clearNextPageToken(){
      return $this->_clear(2);
    }
    
    /**
     * Get <next_page_token> value
     *
     * @return string
     */
    public function getNextPageToken(){
      return $this->_get(2);
    }
    
    /**
     * Set <next_page_token> value
     *
     * @param string $value
     * @return \google\api\servicemanagement\v1\ListServicesResponse
     */
    public function setNextPageToken( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\api\servicemanagement\v1 {

  class GetServiceRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $service_name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.servicemanagement.v1.GetServiceRequest');

      // OPTIONAL STRING service_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "service_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <service_name> has a value
     *
     * @return boolean
     */
    public function hasServiceName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <service_name> value
     *
     * @return \google\api\servicemanagement\v1\GetServiceRequest
     */
    public function clearServiceName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <service_name> value
     *
     * @return string
     */
    public function getServiceName(){
      return $this->_get(1);
    }
    
    /**
     * Set <service_name> value
     *
     * @param string $value
     * @return \google\api\servicemanagement\v1\GetServiceRequest
     */
    public function setServiceName( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\api\servicemanagement\v1 {

  class CreateServiceRequest extends \DrSlump\Protobuf\Message {

    /**  @var \google\api\servicemanagement\v1\ManagedService */
    public $service = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.servicemanagement.v1.CreateServiceRequest');

      // OPTIONAL MESSAGE service = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "service";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\api\servicemanagement\v1\ManagedService';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <service> has a value
     *
     * @return boolean
     */
    public function hasService(){
      return $this->_has(1);
    }
    
    /**
     * Clear <service> value
     *
     * @return \google\api\servicemanagement\v1\CreateServiceRequest
     */
    public function clearService(){
      return $this->_clear(1);
    }
    
    /**
     * Get <service> value
     *
     * @return \google\api\servicemanagement\v1\ManagedService
     */
    public function getService(){
      return $this->_get(1);
    }
    
    /**
     * Set <service> value
     *
     * @param \google\api\servicemanagement\v1\ManagedService $value
     * @return \google\api\servicemanagement\v1\CreateServiceRequest
     */
    public function setService(\google\api\servicemanagement\v1\ManagedService $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\api\servicemanagement\v1 {

  class DeleteServiceRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $service_name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.servicemanagement.v1.DeleteServiceRequest');

      // OPTIONAL STRING service_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "service_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <service_name> has a value
     *
     * @return boolean
     */
    public function hasServiceName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <service_name> value
     *
     * @return \google\api\servicemanagement\v1\DeleteServiceRequest
     */
    public function clearServiceName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <service_name> value
     *
     * @return string
     */
    public function getServiceName(){
      return $this->_get(1);
    }
    
    /**
     * Set <service_name> value
     *
     * @param string $value
     * @return \google\api\servicemanagement\v1\DeleteServiceRequest
     */
    public function setServiceName( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\api\servicemanagement\v1 {

  class UndeleteServiceRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $service_name = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.servicemanagement.v1.UndeleteServiceRequest');

      // OPTIONAL STRING service_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "service_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <service_name> has a value
     *
     * @return boolean
     */
    public function hasServiceName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <service_name> value
     *
     * @return \google\api\servicemanagement\v1\UndeleteServiceRequest
     */
    public function clearServiceName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <service_name> value
     *
     * @return string
     */
    public function getServiceName(){
      return $this->_get(1);
    }
    
    /**
     * Set <service_name> value
     *
     * @param string $value
     * @return \google\api\servicemanagement\v1\UndeleteServiceRequest
     */
    public function setServiceName( $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\api\servicemanagement\v1 {

  class UndeleteServiceResponse extends \DrSlump\Protobuf\Message {

    /**  @var \google\api\servicemanagement\v1\ManagedService */
    public $service = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.servicemanagement.v1.UndeleteServiceResponse');

      // OPTIONAL MESSAGE service = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "service";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\api\servicemanagement\v1\ManagedService';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <service> has a value
     *
     * @return boolean
     */
    public function hasService(){
      return $this->_has(1);
    }
    
    /**
     * Clear <service> value
     *
     * @return \google\api\servicemanagement\v1\UndeleteServiceResponse
     */
    public function clearService(){
      return $this->_clear(1);
    }
    
    /**
     * Get <service> value
     *
     * @return \google\api\servicemanagement\v1\ManagedService
     */
    public function getService(){
      return $this->_get(1);
    }
    
    /**
     * Set <service> value
     *
     * @param \google\api\servicemanagement\v1\ManagedService $value
     * @return \google\api\servicemanagement\v1\UndeleteServiceResponse
     */
    public function setService(\google\api\servicemanagement\v1\ManagedService $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\api\servicemanagement\v1\GetServiceConfigRequest {

  class ConfigView extends \DrSlump\Protobuf\Enum {
    const BASIC = 0;
    const FULL = 1;
  }
}
namespace google\api\servicemanagement\v1 {

  class GetServiceConfigRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $service_name = null;
    
    /**  @var string */
    public $config_id = null;
    
    /**  @var int - \google\api\servicemanagement\v1\GetServiceConfigRequest\ConfigView */
    public $view = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.servicemanagement.v1.GetServiceConfigRequest');

      // OPTIONAL STRING service_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "service_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING config_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "config_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL ENUM view = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "view";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\api\servicemanagement\v1\GetServiceConfigRequest\ConfigView';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <service_name> has a value
     *
     * @return boolean
     */
    public function hasServiceName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <service_name> value
     *
     * @return \google\api\servicemanagement\v1\GetServiceConfigRequest
     */
    public function clearServiceName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <service_name> value
     *
     * @return string
     */
    public function getServiceName(){
      return $this->_get(1);
    }
    
    /**
     * Set <service_name> value
     *
     * @param string $value
     * @return \google\api\servicemanagement\v1\GetServiceConfigRequest
     */
    public function setServiceName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <config_id> has a value
     *
     * @return boolean
     */
    public function hasConfigId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <config_id> value
     *
     * @return \google\api\servicemanagement\v1\GetServiceConfigRequest
     */
    public function clearConfigId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <config_id> value
     *
     * @return string
     */
    public function getConfigId(){
      return $this->_get(2);
    }
    
    /**
     * Set <config_id> value
     *
     * @param string $value
     * @return \google\api\servicemanagement\v1\GetServiceConfigRequest
     */
    public function setConfigId( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <view> has a value
     *
     * @return boolean
     */
    public function hasView(){
      return $this->_has(3);
    }
    
    /**
     * Clear <view> value
     *
     * @return \google\api\servicemanagement\v1\GetServiceConfigRequest
     */
    public function clearView(){
      return $this->_clear(3);
    }
    
    /**
     * Get <view> value
     *
     * @return int - \google\api\servicemanagement\v1\GetServiceConfigRequest\ConfigView
     */
    public function getView(){
      return $this->_get(3);
    }
    
    /**
     * Set <view> value
     *
     * @param int - \google\api\servicemanagement\v1\GetServiceConfigRequest\ConfigView $value
     * @return \google\api\servicemanagement\v1\GetServiceConfigRequest
     */
    public function setView( $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\api\servicemanagement\v1 {

  class ListServiceConfigsRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $service_name = null;
    
    /**  @var string */
    public $page_token = null;
    
    /**  @var int */
    public $page_size = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.servicemanagement.v1.ListServiceConfigsRequest');

      // OPTIONAL STRING service_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "service_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING page_token = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 page_size = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "page_size";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <service_name> has a value
     *
     * @return boolean
     */
    public function hasServiceName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <service_name> value
     *
     * @return \google\api\servicemanagement\v1\ListServiceConfigsRequest
     */
    public function clearServiceName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <service_name> value
     *
     * @return string
     */
    public function getServiceName(){
      return $this->_get(1);
    }
    
    /**
     * Set <service_name> value
     *
     * @param string $value
     * @return \google\api\servicemanagement\v1\ListServiceConfigsRequest
     */
    public function setServiceName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <page_token> has a value
     *
     * @return boolean
     */
    public function hasPageToken(){
      return $this->_has(2);
    }
    
    /**
     * Clear <page_token> value
     *
     * @return \google\api\servicemanagement\v1\ListServiceConfigsRequest
     */
    public function clearPageToken(){
      return $this->_clear(2);
    }
    
    /**
     * Get <page_token> value
     *
     * @return string
     */
    public function getPageToken(){
      return $this->_get(2);
    }
    
    /**
     * Set <page_token> value
     *
     * @param string $value
     * @return \google\api\servicemanagement\v1\ListServiceConfigsRequest
     */
    public function setPageToken( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <page_size> has a value
     *
     * @return boolean
     */
    public function hasPageSize(){
      return $this->_has(3);
    }
    
    /**
     * Clear <page_size> value
     *
     * @return \google\api\servicemanagement\v1\ListServiceConfigsRequest
     */
    public function clearPageSize(){
      return $this->_clear(3);
    }
    
    /**
     * Get <page_size> value
     *
     * @return int
     */
    public function getPageSize(){
      return $this->_get(3);
    }
    
    /**
     * Set <page_size> value
     *
     * @param int $value
     * @return \google\api\servicemanagement\v1\ListServiceConfigsRequest
     */
    public function setPageSize( $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\api\servicemanagement\v1 {

  class ListServiceConfigsResponse extends \DrSlump\Protobuf\Message {

    /**  @var \google\api\Service[]  */
    public $service_configs = array();
    
    /**  @var string */
    public $next_page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.servicemanagement.v1.ListServiceConfigsResponse');

      // REPEATED MESSAGE service_configs = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "service_configs";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\api\Service';
      $descriptor->addField($f);

      // OPTIONAL STRING next_page_token = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "next_page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <service_configs> has a value
     *
     * @return boolean
     */
    public function hasServiceConfigs(){
      return $this->_has(1);
    }
    
    /**
     * Clear <service_configs> value
     *
     * @return \google\api\servicemanagement\v1\ListServiceConfigsResponse
     */
    public function clearServiceConfigs(){
      return $this->_clear(1);
    }
    
    /**
     * Get <service_configs> value
     *
     * @param int $idx
     * @return \google\api\Service
     */
    public function getServiceConfigs($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <service_configs> value
     *
     * @param \google\api\Service $value
     * @return \google\api\servicemanagement\v1\ListServiceConfigsResponse
     */
    public function setServiceConfigs(\google\api\Service $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <service_configs>
     *
     * @return \google\api\Service[]
     */
    public function getServiceConfigsList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <service_configs>
     *
     * @param \google\api\Service $value
     * @return \google\api\servicemanagement\v1\ListServiceConfigsResponse
     */
    public function addServiceConfigs(\google\api\Service $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <next_page_token> has a value
     *
     * @return boolean
     */
    public function hasNextPageToken(){
      return $this->_has(2);
    }
    
    /**
     * Clear <next_page_token> value
     *
     * @return \google\api\servicemanagement\v1\ListServiceConfigsResponse
     */
    public function clearNextPageToken(){
      return $this->_clear(2);
    }
    
    /**
     * Get <next_page_token> value
     *
     * @return string
     */
    public function getNextPageToken(){
      return $this->_get(2);
    }
    
    /**
     * Set <next_page_token> value
     *
     * @param string $value
     * @return \google\api\servicemanagement\v1\ListServiceConfigsResponse
     */
    public function setNextPageToken( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\api\servicemanagement\v1 {

  class CreateServiceConfigRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $service_name = null;
    
    /**  @var \google\api\Service */
    public $service_config = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.servicemanagement.v1.CreateServiceConfigRequest');

      // OPTIONAL STRING service_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "service_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE service_config = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "service_config";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\api\Service';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <service_name> has a value
     *
     * @return boolean
     */
    public function hasServiceName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <service_name> value
     *
     * @return \google\api\servicemanagement\v1\CreateServiceConfigRequest
     */
    public function clearServiceName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <service_name> value
     *
     * @return string
     */
    public function getServiceName(){
      return $this->_get(1);
    }
    
    /**
     * Set <service_name> value
     *
     * @param string $value
     * @return \google\api\servicemanagement\v1\CreateServiceConfigRequest
     */
    public function setServiceName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <service_config> has a value
     *
     * @return boolean
     */
    public function hasServiceConfig(){
      return $this->_has(2);
    }
    
    /**
     * Clear <service_config> value
     *
     * @return \google\api\servicemanagement\v1\CreateServiceConfigRequest
     */
    public function clearServiceConfig(){
      return $this->_clear(2);
    }
    
    /**
     * Get <service_config> value
     *
     * @return \google\api\Service
     */
    public function getServiceConfig(){
      return $this->_get(2);
    }
    
    /**
     * Set <service_config> value
     *
     * @param \google\api\Service $value
     * @return \google\api\servicemanagement\v1\CreateServiceConfigRequest
     */
    public function setServiceConfig(\google\api\Service $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\api\servicemanagement\v1 {

  class SubmitConfigSourceRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $service_name = null;
    
    /**  @var \google\api\servicemanagement\v1\ConfigSource */
    public $config_source = null;
    
    /**  @var boolean */
    public $validate_only = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.servicemanagement.v1.SubmitConfigSourceRequest');

      // OPTIONAL STRING service_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "service_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE config_source = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "config_source";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\api\servicemanagement\v1\ConfigSource';
      $descriptor->addField($f);

      // OPTIONAL BOOL validate_only = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "validate_only";
      $f->type      = \DrSlump\Protobuf::TYPE_BOOL;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <service_name> has a value
     *
     * @return boolean
     */
    public function hasServiceName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <service_name> value
     *
     * @return \google\api\servicemanagement\v1\SubmitConfigSourceRequest
     */
    public function clearServiceName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <service_name> value
     *
     * @return string
     */
    public function getServiceName(){
      return $this->_get(1);
    }
    
    /**
     * Set <service_name> value
     *
     * @param string $value
     * @return \google\api\servicemanagement\v1\SubmitConfigSourceRequest
     */
    public function setServiceName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <config_source> has a value
     *
     * @return boolean
     */
    public function hasConfigSource(){
      return $this->_has(2);
    }
    
    /**
     * Clear <config_source> value
     *
     * @return \google\api\servicemanagement\v1\SubmitConfigSourceRequest
     */
    public function clearConfigSource(){
      return $this->_clear(2);
    }
    
    /**
     * Get <config_source> value
     *
     * @return \google\api\servicemanagement\v1\ConfigSource
     */
    public function getConfigSource(){
      return $this->_get(2);
    }
    
    /**
     * Set <config_source> value
     *
     * @param \google\api\servicemanagement\v1\ConfigSource $value
     * @return \google\api\servicemanagement\v1\SubmitConfigSourceRequest
     */
    public function setConfigSource(\google\api\servicemanagement\v1\ConfigSource $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <validate_only> has a value
     *
     * @return boolean
     */
    public function hasValidateOnly(){
      return $this->_has(3);
    }
    
    /**
     * Clear <validate_only> value
     *
     * @return \google\api\servicemanagement\v1\SubmitConfigSourceRequest
     */
    public function clearValidateOnly(){
      return $this->_clear(3);
    }
    
    /**
     * Get <validate_only> value
     *
     * @return boolean
     */
    public function getValidateOnly(){
      return $this->_get(3);
    }
    
    /**
     * Set <validate_only> value
     *
     * @param boolean $value
     * @return \google\api\servicemanagement\v1\SubmitConfigSourceRequest
     */
    public function setValidateOnly( $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\api\servicemanagement\v1 {

  class SubmitConfigSourceResponse extends \DrSlump\Protobuf\Message {

    /**  @var \google\api\Service */
    public $service_config = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.servicemanagement.v1.SubmitConfigSourceResponse');

      // OPTIONAL MESSAGE service_config = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "service_config";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\api\Service';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <service_config> has a value
     *
     * @return boolean
     */
    public function hasServiceConfig(){
      return $this->_has(1);
    }
    
    /**
     * Clear <service_config> value
     *
     * @return \google\api\servicemanagement\v1\SubmitConfigSourceResponse
     */
    public function clearServiceConfig(){
      return $this->_clear(1);
    }
    
    /**
     * Get <service_config> value
     *
     * @return \google\api\Service
     */
    public function getServiceConfig(){
      return $this->_get(1);
    }
    
    /**
     * Set <service_config> value
     *
     * @param \google\api\Service $value
     * @return \google\api\servicemanagement\v1\SubmitConfigSourceResponse
     */
    public function setServiceConfig(\google\api\Service $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\api\servicemanagement\v1 {

  class CreateServiceRolloutRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $service_name = null;
    
    /**  @var \google\api\servicemanagement\v1\Rollout */
    public $rollout = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.servicemanagement.v1.CreateServiceRolloutRequest');

      // OPTIONAL STRING service_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "service_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL MESSAGE rollout = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "rollout";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\api\servicemanagement\v1\Rollout';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <service_name> has a value
     *
     * @return boolean
     */
    public function hasServiceName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <service_name> value
     *
     * @return \google\api\servicemanagement\v1\CreateServiceRolloutRequest
     */
    public function clearServiceName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <service_name> value
     *
     * @return string
     */
    public function getServiceName(){
      return $this->_get(1);
    }
    
    /**
     * Set <service_name> value
     *
     * @param string $value
     * @return \google\api\servicemanagement\v1\CreateServiceRolloutRequest
     */
    public function setServiceName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <rollout> has a value
     *
     * @return boolean
     */
    public function hasRollout(){
      return $this->_has(2);
    }
    
    /**
     * Clear <rollout> value
     *
     * @return \google\api\servicemanagement\v1\CreateServiceRolloutRequest
     */
    public function clearRollout(){
      return $this->_clear(2);
    }
    
    /**
     * Get <rollout> value
     *
     * @return \google\api\servicemanagement\v1\Rollout
     */
    public function getRollout(){
      return $this->_get(2);
    }
    
    /**
     * Set <rollout> value
     *
     * @param \google\api\servicemanagement\v1\Rollout $value
     * @return \google\api\servicemanagement\v1\CreateServiceRolloutRequest
     */
    public function setRollout(\google\api\servicemanagement\v1\Rollout $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\api\servicemanagement\v1 {

  class ListServiceRolloutsRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $service_name = null;
    
    /**  @var string */
    public $page_token = null;
    
    /**  @var int */
    public $page_size = null;
    
    /**  @var string */
    public $filter = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.servicemanagement.v1.ListServiceRolloutsRequest');

      // OPTIONAL STRING service_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "service_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING page_token = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL INT32 page_size = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "page_size";
      $f->type      = \DrSlump\Protobuf::TYPE_INT32;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING filter = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "filter";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <service_name> has a value
     *
     * @return boolean
     */
    public function hasServiceName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <service_name> value
     *
     * @return \google\api\servicemanagement\v1\ListServiceRolloutsRequest
     */
    public function clearServiceName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <service_name> value
     *
     * @return string
     */
    public function getServiceName(){
      return $this->_get(1);
    }
    
    /**
     * Set <service_name> value
     *
     * @param string $value
     * @return \google\api\servicemanagement\v1\ListServiceRolloutsRequest
     */
    public function setServiceName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <page_token> has a value
     *
     * @return boolean
     */
    public function hasPageToken(){
      return $this->_has(2);
    }
    
    /**
     * Clear <page_token> value
     *
     * @return \google\api\servicemanagement\v1\ListServiceRolloutsRequest
     */
    public function clearPageToken(){
      return $this->_clear(2);
    }
    
    /**
     * Get <page_token> value
     *
     * @return string
     */
    public function getPageToken(){
      return $this->_get(2);
    }
    
    /**
     * Set <page_token> value
     *
     * @param string $value
     * @return \google\api\servicemanagement\v1\ListServiceRolloutsRequest
     */
    public function setPageToken( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <page_size> has a value
     *
     * @return boolean
     */
    public function hasPageSize(){
      return $this->_has(3);
    }
    
    /**
     * Clear <page_size> value
     *
     * @return \google\api\servicemanagement\v1\ListServiceRolloutsRequest
     */
    public function clearPageSize(){
      return $this->_clear(3);
    }
    
    /**
     * Get <page_size> value
     *
     * @return int
     */
    public function getPageSize(){
      return $this->_get(3);
    }
    
    /**
     * Set <page_size> value
     *
     * @param int $value
     * @return \google\api\servicemanagement\v1\ListServiceRolloutsRequest
     */
    public function setPageSize( $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <filter> has a value
     *
     * @return boolean
     */
    public function hasFilter(){
      return $this->_has(4);
    }
    
    /**
     * Clear <filter> value
     *
     * @return \google\api\servicemanagement\v1\ListServiceRolloutsRequest
     */
    public function clearFilter(){
      return $this->_clear(4);
    }
    
    /**
     * Get <filter> value
     *
     * @return string
     */
    public function getFilter(){
      return $this->_get(4);
    }
    
    /**
     * Set <filter> value
     *
     * @param string $value
     * @return \google\api\servicemanagement\v1\ListServiceRolloutsRequest
     */
    public function setFilter( $value){
      return $this->_set(4, $value);
    }
  }
}

namespace google\api\servicemanagement\v1 {

  class ListServiceRolloutsResponse extends \DrSlump\Protobuf\Message {

    /**  @var \google\api\servicemanagement\v1\Rollout[]  */
    public $rollouts = array();
    
    /**  @var string */
    public $next_page_token = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.servicemanagement.v1.ListServiceRolloutsResponse');

      // REPEATED MESSAGE rollouts = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "rollouts";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\api\servicemanagement\v1\Rollout';
      $descriptor->addField($f);

      // OPTIONAL STRING next_page_token = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "next_page_token";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <rollouts> has a value
     *
     * @return boolean
     */
    public function hasRollouts(){
      return $this->_has(1);
    }
    
    /**
     * Clear <rollouts> value
     *
     * @return \google\api\servicemanagement\v1\ListServiceRolloutsResponse
     */
    public function clearRollouts(){
      return $this->_clear(1);
    }
    
    /**
     * Get <rollouts> value
     *
     * @param int $idx
     * @return \google\api\servicemanagement\v1\Rollout
     */
    public function getRollouts($idx = NULL){
      return $this->_get(1, $idx);
    }
    
    /**
     * Set <rollouts> value
     *
     * @param \google\api\servicemanagement\v1\Rollout $value
     * @return \google\api\servicemanagement\v1\ListServiceRolloutsResponse
     */
    public function setRollouts(\google\api\servicemanagement\v1\Rollout $value, $idx = NULL){
      return $this->_set(1, $value, $idx);
    }
    
    /**
     * Get all elements of <rollouts>
     *
     * @return \google\api\servicemanagement\v1\Rollout[]
     */
    public function getRolloutsList(){
     return $this->_get(1);
    }
    
    /**
     * Add a new element to <rollouts>
     *
     * @param \google\api\servicemanagement\v1\Rollout $value
     * @return \google\api\servicemanagement\v1\ListServiceRolloutsResponse
     */
    public function addRollouts(\google\api\servicemanagement\v1\Rollout $value){
     return $this->_add(1, $value);
    }
    
    /**
     * Check if <next_page_token> has a value
     *
     * @return boolean
     */
    public function hasNextPageToken(){
      return $this->_has(2);
    }
    
    /**
     * Clear <next_page_token> value
     *
     * @return \google\api\servicemanagement\v1\ListServiceRolloutsResponse
     */
    public function clearNextPageToken(){
      return $this->_clear(2);
    }
    
    /**
     * Get <next_page_token> value
     *
     * @return string
     */
    public function getNextPageToken(){
      return $this->_get(2);
    }
    
    /**
     * Set <next_page_token> value
     *
     * @param string $value
     * @return \google\api\servicemanagement\v1\ListServiceRolloutsResponse
     */
    public function setNextPageToken( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\api\servicemanagement\v1 {

  class GetServiceRolloutRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $service_name = null;
    
    /**  @var string */
    public $rollout_id = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.servicemanagement.v1.GetServiceRolloutRequest');

      // OPTIONAL STRING service_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "service_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING rollout_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "rollout_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <service_name> has a value
     *
     * @return boolean
     */
    public function hasServiceName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <service_name> value
     *
     * @return \google\api\servicemanagement\v1\GetServiceRolloutRequest
     */
    public function clearServiceName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <service_name> value
     *
     * @return string
     */
    public function getServiceName(){
      return $this->_get(1);
    }
    
    /**
     * Set <service_name> value
     *
     * @param string $value
     * @return \google\api\servicemanagement\v1\GetServiceRolloutRequest
     */
    public function setServiceName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <rollout_id> has a value
     *
     * @return boolean
     */
    public function hasRolloutId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <rollout_id> value
     *
     * @return \google\api\servicemanagement\v1\GetServiceRolloutRequest
     */
    public function clearRolloutId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <rollout_id> value
     *
     * @return string
     */
    public function getRolloutId(){
      return $this->_get(2);
    }
    
    /**
     * Set <rollout_id> value
     *
     * @param string $value
     * @return \google\api\servicemanagement\v1\GetServiceRolloutRequest
     */
    public function setRolloutId( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\api\servicemanagement\v1 {

  class EnableServiceRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $service_name = null;
    
    /**  @var string */
    public $consumer_id = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.servicemanagement.v1.EnableServiceRequest');

      // OPTIONAL STRING service_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "service_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING consumer_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "consumer_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <service_name> has a value
     *
     * @return boolean
     */
    public function hasServiceName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <service_name> value
     *
     * @return \google\api\servicemanagement\v1\EnableServiceRequest
     */
    public function clearServiceName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <service_name> value
     *
     * @return string
     */
    public function getServiceName(){
      return $this->_get(1);
    }
    
    /**
     * Set <service_name> value
     *
     * @param string $value
     * @return \google\api\servicemanagement\v1\EnableServiceRequest
     */
    public function setServiceName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <consumer_id> has a value
     *
     * @return boolean
     */
    public function hasConsumerId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <consumer_id> value
     *
     * @return \google\api\servicemanagement\v1\EnableServiceRequest
     */
    public function clearConsumerId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <consumer_id> value
     *
     * @return string
     */
    public function getConsumerId(){
      return $this->_get(2);
    }
    
    /**
     * Set <consumer_id> value
     *
     * @param string $value
     * @return \google\api\servicemanagement\v1\EnableServiceRequest
     */
    public function setConsumerId( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\api\servicemanagement\v1 {

  class DisableServiceRequest extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $service_name = null;
    
    /**  @var string */
    public $consumer_id = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.servicemanagement.v1.DisableServiceRequest');

      // OPTIONAL STRING service_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "service_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING consumer_id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "consumer_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <service_name> has a value
     *
     * @return boolean
     */
    public function hasServiceName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <service_name> value
     *
     * @return \google\api\servicemanagement\v1\DisableServiceRequest
     */
    public function clearServiceName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <service_name> value
     *
     * @return string
     */
    public function getServiceName(){
      return $this->_get(1);
    }
    
    /**
     * Set <service_name> value
     *
     * @param string $value
     * @return \google\api\servicemanagement\v1\DisableServiceRequest
     */
    public function setServiceName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <consumer_id> has a value
     *
     * @return boolean
     */
    public function hasConsumerId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <consumer_id> value
     *
     * @return \google\api\servicemanagement\v1\DisableServiceRequest
     */
    public function clearConsumerId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <consumer_id> value
     *
     * @return string
     */
    public function getConsumerId(){
      return $this->_get(2);
    }
    
    /**
     * Set <consumer_id> value
     *
     * @param string $value
     * @return \google\api\servicemanagement\v1\DisableServiceRequest
     */
    public function setConsumerId( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\api\servicemanagement\v1 {

  class GenerateConfigReportRequest extends \DrSlump\Protobuf\Message {

    /**  @var \google\protobuf\Any */
    public $new_config = null;
    
    /**  @var \google\protobuf\Any */
    public $old_config = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.servicemanagement.v1.GenerateConfigReportRequest');

      // OPTIONAL MESSAGE new_config = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "new_config";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Any';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE old_config = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "old_config";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Any';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <new_config> has a value
     *
     * @return boolean
     */
    public function hasNewConfig(){
      return $this->_has(1);
    }
    
    /**
     * Clear <new_config> value
     *
     * @return \google\api\servicemanagement\v1\GenerateConfigReportRequest
     */
    public function clearNewConfig(){
      return $this->_clear(1);
    }
    
    /**
     * Get <new_config> value
     *
     * @return \google\protobuf\Any
     */
    public function getNewConfig(){
      return $this->_get(1);
    }
    
    /**
     * Set <new_config> value
     *
     * @param \google\protobuf\Any $value
     * @return \google\api\servicemanagement\v1\GenerateConfigReportRequest
     */
    public function setNewConfig(\google\protobuf\Any $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <old_config> has a value
     *
     * @return boolean
     */
    public function hasOldConfig(){
      return $this->_has(2);
    }
    
    /**
     * Clear <old_config> value
     *
     * @return \google\api\servicemanagement\v1\GenerateConfigReportRequest
     */
    public function clearOldConfig(){
      return $this->_clear(2);
    }
    
    /**
     * Get <old_config> value
     *
     * @return \google\protobuf\Any
     */
    public function getOldConfig(){
      return $this->_get(2);
    }
    
    /**
     * Set <old_config> value
     *
     * @param \google\protobuf\Any $value
     * @return \google\api\servicemanagement\v1\GenerateConfigReportRequest
     */
    public function setOldConfig(\google\protobuf\Any $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\api\servicemanagement\v1 {

  class GenerateConfigReportResponse extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $service_name = null;
    
    /**  @var string */
    public $id = null;
    
    /**  @var \google\api\servicemanagement\v1\ChangeReport[]  */
    public $change_reports = array();
    
    /**  @var \google\api\servicemanagement\v1\Diagnostic[]  */
    public $diagnostics = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.api.servicemanagement.v1.GenerateConfigReportResponse');

      // OPTIONAL STRING service_name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "service_name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING id = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE change_reports = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "change_reports";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\api\servicemanagement\v1\ChangeReport';
      $descriptor->addField($f);

      // REPEATED MESSAGE diagnostics = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "diagnostics";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\api\servicemanagement\v1\Diagnostic';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <service_name> has a value
     *
     * @return boolean
     */
    public function hasServiceName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <service_name> value
     *
     * @return \google\api\servicemanagement\v1\GenerateConfigReportResponse
     */
    public function clearServiceName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <service_name> value
     *
     * @return string
     */
    public function getServiceName(){
      return $this->_get(1);
    }
    
    /**
     * Set <service_name> value
     *
     * @param string $value
     * @return \google\api\servicemanagement\v1\GenerateConfigReportResponse
     */
    public function setServiceName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <id> has a value
     *
     * @return boolean
     */
    public function hasId(){
      return $this->_has(2);
    }
    
    /**
     * Clear <id> value
     *
     * @return \google\api\servicemanagement\v1\GenerateConfigReportResponse
     */
    public function clearId(){
      return $this->_clear(2);
    }
    
    /**
     * Get <id> value
     *
     * @return string
     */
    public function getId(){
      return $this->_get(2);
    }
    
    /**
     * Set <id> value
     *
     * @param string $value
     * @return \google\api\servicemanagement\v1\GenerateConfigReportResponse
     */
    public function setId( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <change_reports> has a value
     *
     * @return boolean
     */
    public function hasChangeReports(){
      return $this->_has(3);
    }
    
    /**
     * Clear <change_reports> value
     *
     * @return \google\api\servicemanagement\v1\GenerateConfigReportResponse
     */
    public function clearChangeReports(){
      return $this->_clear(3);
    }
    
    /**
     * Get <change_reports> value
     *
     * @param int $idx
     * @return \google\api\servicemanagement\v1\ChangeReport
     */
    public function getChangeReports($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <change_reports> value
     *
     * @param \google\api\servicemanagement\v1\ChangeReport $value
     * @return \google\api\servicemanagement\v1\GenerateConfigReportResponse
     */
    public function setChangeReports(\google\api\servicemanagement\v1\ChangeReport $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <change_reports>
     *
     * @return \google\api\servicemanagement\v1\ChangeReport[]
     */
    public function getChangeReportsList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <change_reports>
     *
     * @param \google\api\servicemanagement\v1\ChangeReport $value
     * @return \google\api\servicemanagement\v1\GenerateConfigReportResponse
     */
    public function addChangeReports(\google\api\servicemanagement\v1\ChangeReport $value){
     return $this->_add(3, $value);
    }
    
    /**
     * Check if <diagnostics> has a value
     *
     * @return boolean
     */
    public function hasDiagnostics(){
      return $this->_has(4);
    }
    
    /**
     * Clear <diagnostics> value
     *
     * @return \google\api\servicemanagement\v1\GenerateConfigReportResponse
     */
    public function clearDiagnostics(){
      return $this->_clear(4);
    }
    
    /**
     * Get <diagnostics> value
     *
     * @param int $idx
     * @return \google\api\servicemanagement\v1\Diagnostic
     */
    public function getDiagnostics($idx = NULL){
      return $this->_get(4, $idx);
    }
    
    /**
     * Set <diagnostics> value
     *
     * @param \google\api\servicemanagement\v1\Diagnostic $value
     * @return \google\api\servicemanagement\v1\GenerateConfigReportResponse
     */
    public function setDiagnostics(\google\api\servicemanagement\v1\Diagnostic $value, $idx = NULL){
      return $this->_set(4, $value, $idx);
    }
    
    /**
     * Get all elements of <diagnostics>
     *
     * @return \google\api\servicemanagement\v1\Diagnostic[]
     */
    public function getDiagnosticsList(){
     return $this->_get(4);
    }
    
    /**
     * Add a new element to <diagnostics>
     *
     * @param \google\api\servicemanagement\v1\Diagnostic $value
     * @return \google\api\servicemanagement\v1\GenerateConfigReportResponse
     */
    public function addDiagnostics(\google\api\servicemanagement\v1\Diagnostic $value){
     return $this->_add(4, $value);
    }
  }
}

namespace google\api\servicemanagement\v1 {

  class ServiceManagerClient extends \Grpc\BaseStub {

    public function __construct($hostname, $opts, $channel = null) {
      parent::__construct($hostname, $opts, $channel);
    }
    /**
     * @param google\api\servicemanagement\v1\ListServicesRequest $input
     */
    public function ListServices(\google\api\servicemanagement\v1\ListServicesRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.api.servicemanagement.v1.ServiceManager/ListServices', $argument, '\google\api\servicemanagement\v1\ListServicesResponse::deserialize', $metadata, $options);
    }
    /**
     * @param google\api\servicemanagement\v1\GetServiceRequest $input
     */
    public function GetService(\google\api\servicemanagement\v1\GetServiceRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.api.servicemanagement.v1.ServiceManager/GetService', $argument, '\google\api\servicemanagement\v1\ManagedService::deserialize', $metadata, $options);
    }
    /**
     * @param google\api\servicemanagement\v1\CreateServiceRequest $input
     */
    public function CreateService(\google\api\servicemanagement\v1\CreateServiceRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.api.servicemanagement.v1.ServiceManager/CreateService', $argument, '\google\longrunning\Operation::deserialize', $metadata, $options);
    }
    /**
     * @param google\api\servicemanagement\v1\DeleteServiceRequest $input
     */
    public function DeleteService(\google\api\servicemanagement\v1\DeleteServiceRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.api.servicemanagement.v1.ServiceManager/DeleteService', $argument, '\google\longrunning\Operation::deserialize', $metadata, $options);
    }
    /**
     * @param google\api\servicemanagement\v1\UndeleteServiceRequest $input
     */
    public function UndeleteService(\google\api\servicemanagement\v1\UndeleteServiceRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.api.servicemanagement.v1.ServiceManager/UndeleteService', $argument, '\google\longrunning\Operation::deserialize', $metadata, $options);
    }
    /**
     * @param google\api\servicemanagement\v1\ListServiceConfigsRequest $input
     */
    public function ListServiceConfigs(\google\api\servicemanagement\v1\ListServiceConfigsRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.api.servicemanagement.v1.ServiceManager/ListServiceConfigs', $argument, '\google\api\servicemanagement\v1\ListServiceConfigsResponse::deserialize', $metadata, $options);
    }
    /**
     * @param google\api\servicemanagement\v1\GetServiceConfigRequest $input
     */
    public function GetServiceConfig(\google\api\servicemanagement\v1\GetServiceConfigRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.api.servicemanagement.v1.ServiceManager/GetServiceConfig', $argument, '\google\api\Service::deserialize', $metadata, $options);
    }
    /**
     * @param google\api\servicemanagement\v1\CreateServiceConfigRequest $input
     */
    public function CreateServiceConfig(\google\api\servicemanagement\v1\CreateServiceConfigRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.api.servicemanagement.v1.ServiceManager/CreateServiceConfig', $argument, '\google\api\Service::deserialize', $metadata, $options);
    }
    /**
     * @param google\api\servicemanagement\v1\SubmitConfigSourceRequest $input
     */
    public function SubmitConfigSource(\google\api\servicemanagement\v1\SubmitConfigSourceRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.api.servicemanagement.v1.ServiceManager/SubmitConfigSource', $argument, '\google\longrunning\Operation::deserialize', $metadata, $options);
    }
    /**
     * @param google\api\servicemanagement\v1\ListServiceRolloutsRequest $input
     */
    public function ListServiceRollouts(\google\api\servicemanagement\v1\ListServiceRolloutsRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.api.servicemanagement.v1.ServiceManager/ListServiceRollouts', $argument, '\google\api\servicemanagement\v1\ListServiceRolloutsResponse::deserialize', $metadata, $options);
    }
    /**
     * @param google\api\servicemanagement\v1\GetServiceRolloutRequest $input
     */
    public function GetServiceRollout(\google\api\servicemanagement\v1\GetServiceRolloutRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.api.servicemanagement.v1.ServiceManager/GetServiceRollout', $argument, '\google\api\servicemanagement\v1\Rollout::deserialize', $metadata, $options);
    }
    /**
     * @param google\api\servicemanagement\v1\CreateServiceRolloutRequest $input
     */
    public function CreateServiceRollout(\google\api\servicemanagement\v1\CreateServiceRolloutRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.api.servicemanagement.v1.ServiceManager/CreateServiceRollout', $argument, '\google\longrunning\Operation::deserialize', $metadata, $options);
    }
    /**
     * @param google\api\servicemanagement\v1\GenerateConfigReportRequest $input
     */
    public function GenerateConfigReport(\google\api\servicemanagement\v1\GenerateConfigReportRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.api.servicemanagement.v1.ServiceManager/GenerateConfigReport', $argument, '\google\api\servicemanagement\v1\GenerateConfigReportResponse::deserialize', $metadata, $options);
    }
    /**
     * @param google\api\servicemanagement\v1\EnableServiceRequest $input
     */
    public function EnableService(\google\api\servicemanagement\v1\EnableServiceRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.api.servicemanagement.v1.ServiceManager/EnableService', $argument, '\google\longrunning\Operation::deserialize', $metadata, $options);
    }
    /**
     * @param google\api\servicemanagement\v1\DisableServiceRequest $input
     */
    public function DisableService(\google\api\servicemanagement\v1\DisableServiceRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.api.servicemanagement.v1.ServiceManager/DisableService', $argument, '\google\longrunning\Operation::deserialize', $metadata, $options);
    }
  }
}
