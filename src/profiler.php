<?php
// DO NOT EDIT! Generated by Protobuf-PHP protoc plugin @package_version@
// Source: google/devtools/cloudprofiler/v2/profiler.proto
//   Date: 2017-06-13 04:25:20

namespace google\devtools\cloudprofiler\v2 {

  class ProfileType extends \DrSlump\Protobuf\Enum {
    const PROFILE_TYPE_UNSPECIFIED = 0;
    const CPU = 1;
    const WALL = 2;
    const HEAP = 3;
    const THREADS = 4;
    const CONTENTION = 5;
  }
}
namespace google\devtools\cloudprofiler\v2 {

  class CreateProfileRequest extends \DrSlump\Protobuf\Message {

    /**  @var \google\devtools\cloudprofiler\v2\Deployment */
    public $deployment = null;
    
    /**  @var int - \google\devtools\cloudprofiler\v2\ProfileType[]  */
    public $profile_type = array();
    
    /**  @var \google\devtools\cloudprofiler\v2\Profile */
    public $profile = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.devtools.cloudprofiler.v2.CreateProfileRequest');

      // OPTIONAL MESSAGE deployment = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "deployment";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\devtools\cloudprofiler\v2\Deployment';
      $descriptor->addField($f);

      // REPEATED ENUM profile_type = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "profile_type";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\devtools\cloudprofiler\v2\ProfileType';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE profile = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "profile";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\devtools\cloudprofiler\v2\Profile';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <deployment> has a value
     *
     * @return boolean
     */
    public function hasDeployment(){
      return $this->_has(1);
    }
    
    /**
     * Clear <deployment> value
     *
     * @return \google\devtools\cloudprofiler\v2\CreateProfileRequest
     */
    public function clearDeployment(){
      return $this->_clear(1);
    }
    
    /**
     * Get <deployment> value
     *
     * @return \google\devtools\cloudprofiler\v2\Deployment
     */
    public function getDeployment(){
      return $this->_get(1);
    }
    
    /**
     * Set <deployment> value
     *
     * @param \google\devtools\cloudprofiler\v2\Deployment $value
     * @return \google\devtools\cloudprofiler\v2\CreateProfileRequest
     */
    public function setDeployment(\google\devtools\cloudprofiler\v2\Deployment $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <profile_type> has a value
     *
     * @return boolean
     */
    public function hasProfileType(){
      return $this->_has(2);
    }
    
    /**
     * Clear <profile_type> value
     *
     * @return \google\devtools\cloudprofiler\v2\CreateProfileRequest
     */
    public function clearProfileType(){
      return $this->_clear(2);
    }
    
    /**
     * Get <profile_type> value
     *
     * @param int $idx
     * @return int - \google\devtools\cloudprofiler\v2\ProfileType
     */
    public function getProfileType($idx = NULL){
      return $this->_get(2, $idx);
    }
    
    /**
     * Set <profile_type> value
     *
     * @param int - \google\devtools\cloudprofiler\v2\ProfileType $value
     * @return \google\devtools\cloudprofiler\v2\CreateProfileRequest
     */
    public function setProfileType( $value, $idx = NULL){
      return $this->_set(2, $value, $idx);
    }
    
    /**
     * Get all elements of <profile_type>
     *
     * @return int - \google\devtools\cloudprofiler\v2\ProfileType[]
     */
    public function getProfileTypeList(){
     return $this->_get(2);
    }
    
    /**
     * Add a new element to <profile_type>
     *
     * @param int - \google\devtools\cloudprofiler\v2\ProfileType $value
     * @return \google\devtools\cloudprofiler\v2\CreateProfileRequest
     */
    public function addProfileType( $value){
     return $this->_add(2, $value);
    }
    
    /**
     * Check if <profile> has a value
     *
     * @return boolean
     */
    public function hasProfile(){
      return $this->_has(3);
    }
    
    /**
     * Clear <profile> value
     *
     * @return \google\devtools\cloudprofiler\v2\CreateProfileRequest
     */
    public function clearProfile(){
      return $this->_clear(3);
    }
    
    /**
     * Get <profile> value
     *
     * @return \google\devtools\cloudprofiler\v2\Profile
     */
    public function getProfile(){
      return $this->_get(3);
    }
    
    /**
     * Set <profile> value
     *
     * @param \google\devtools\cloudprofiler\v2\Profile $value
     * @return \google\devtools\cloudprofiler\v2\CreateProfileRequest
     */
    public function setProfile(\google\devtools\cloudprofiler\v2\Profile $value){
      return $this->_set(3, $value);
    }
  }
}

namespace google\devtools\cloudprofiler\v2 {

  class UpdateProfileRequest extends \DrSlump\Protobuf\Message {

    /**  @var \google\devtools\cloudprofiler\v2\Profile */
    public $profile = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.devtools.cloudprofiler.v2.UpdateProfileRequest');

      // OPTIONAL MESSAGE profile = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "profile";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\devtools\cloudprofiler\v2\Profile';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <profile> has a value
     *
     * @return boolean
     */
    public function hasProfile(){
      return $this->_has(1);
    }
    
    /**
     * Clear <profile> value
     *
     * @return \google\devtools\cloudprofiler\v2\UpdateProfileRequest
     */
    public function clearProfile(){
      return $this->_clear(1);
    }
    
    /**
     * Get <profile> value
     *
     * @return \google\devtools\cloudprofiler\v2\Profile
     */
    public function getProfile(){
      return $this->_get(1);
    }
    
    /**
     * Set <profile> value
     *
     * @param \google\devtools\cloudprofiler\v2\Profile $value
     * @return \google\devtools\cloudprofiler\v2\UpdateProfileRequest
     */
    public function setProfile(\google\devtools\cloudprofiler\v2\Profile $value){
      return $this->_set(1, $value);
    }
  }
}

namespace google\devtools\cloudprofiler\v2\Profile {

  class LabelsEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $key = null;
    
    /**  @var string */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.devtools.cloudprofiler.v2.Profile.LabelsEntry');

      // OPTIONAL STRING key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <key> has a value
     *
     * @return boolean
     */
    public function hasKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <key> value
     *
     * @return \google\devtools\cloudprofiler\v2\Profile\LabelsEntry
     */
    public function clearKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <key> value
     *
     * @return string
     */
    public function getKey(){
      return $this->_get(1);
    }
    
    /**
     * Set <key> value
     *
     * @param string $value
     * @return \google\devtools\cloudprofiler\v2\Profile\LabelsEntry
     */
    public function setKey( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\devtools\cloudprofiler\v2\Profile\LabelsEntry
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return string
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param string $value
     * @return \google\devtools\cloudprofiler\v2\Profile\LabelsEntry
     */
    public function setValue( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\devtools\cloudprofiler\v2 {

  class Profile extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $name = null;
    
    /**  @var int - \google\devtools\cloudprofiler\v2\ProfileType */
    public $profile_type = null;
    
    /**  @var \google\devtools\cloudprofiler\v2\Deployment */
    public $deployment = null;
    
    /**  @var \google\protobuf\Duration */
    public $duration = null;
    
    /**  @var string */
    public $profile_bytes = null;
    
    /**  @var \google\devtools\cloudprofiler\v2\Profile\LabelsEntry[]  */
    public $labels = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.devtools.cloudprofiler.v2.Profile');

      // OPTIONAL STRING name = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "name";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL ENUM profile_type = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "profile_type";
      $f->type      = \DrSlump\Protobuf::TYPE_ENUM;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\devtools\cloudprofiler\v2\ProfileType';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE deployment = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "deployment";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\devtools\cloudprofiler\v2\Deployment';
      $descriptor->addField($f);

      // OPTIONAL MESSAGE duration = 4
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 4;
      $f->name      = "duration";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $f->reference = '\google\protobuf\Duration';
      $descriptor->addField($f);

      // OPTIONAL BYTES profile_bytes = 5
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 5;
      $f->name      = "profile_bytes";
      $f->type      = \DrSlump\Protobuf::TYPE_BYTES;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE labels = 6
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 6;
      $f->name      = "labels";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\devtools\cloudprofiler\v2\Profile\LabelsEntry';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <name> has a value
     *
     * @return boolean
     */
    public function hasName(){
      return $this->_has(1);
    }
    
    /**
     * Clear <name> value
     *
     * @return \google\devtools\cloudprofiler\v2\Profile
     */
    public function clearName(){
      return $this->_clear(1);
    }
    
    /**
     * Get <name> value
     *
     * @return string
     */
    public function getName(){
      return $this->_get(1);
    }
    
    /**
     * Set <name> value
     *
     * @param string $value
     * @return \google\devtools\cloudprofiler\v2\Profile
     */
    public function setName( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <profile_type> has a value
     *
     * @return boolean
     */
    public function hasProfileType(){
      return $this->_has(2);
    }
    
    /**
     * Clear <profile_type> value
     *
     * @return \google\devtools\cloudprofiler\v2\Profile
     */
    public function clearProfileType(){
      return $this->_clear(2);
    }
    
    /**
     * Get <profile_type> value
     *
     * @return int - \google\devtools\cloudprofiler\v2\ProfileType
     */
    public function getProfileType(){
      return $this->_get(2);
    }
    
    /**
     * Set <profile_type> value
     *
     * @param int - \google\devtools\cloudprofiler\v2\ProfileType $value
     * @return \google\devtools\cloudprofiler\v2\Profile
     */
    public function setProfileType( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <deployment> has a value
     *
     * @return boolean
     */
    public function hasDeployment(){
      return $this->_has(3);
    }
    
    /**
     * Clear <deployment> value
     *
     * @return \google\devtools\cloudprofiler\v2\Profile
     */
    public function clearDeployment(){
      return $this->_clear(3);
    }
    
    /**
     * Get <deployment> value
     *
     * @return \google\devtools\cloudprofiler\v2\Deployment
     */
    public function getDeployment(){
      return $this->_get(3);
    }
    
    /**
     * Set <deployment> value
     *
     * @param \google\devtools\cloudprofiler\v2\Deployment $value
     * @return \google\devtools\cloudprofiler\v2\Profile
     */
    public function setDeployment(\google\devtools\cloudprofiler\v2\Deployment $value){
      return $this->_set(3, $value);
    }
    
    /**
     * Check if <duration> has a value
     *
     * @return boolean
     */
    public function hasDuration(){
      return $this->_has(4);
    }
    
    /**
     * Clear <duration> value
     *
     * @return \google\devtools\cloudprofiler\v2\Profile
     */
    public function clearDuration(){
      return $this->_clear(4);
    }
    
    /**
     * Get <duration> value
     *
     * @return \google\protobuf\Duration
     */
    public function getDuration(){
      return $this->_get(4);
    }
    
    /**
     * Set <duration> value
     *
     * @param \google\protobuf\Duration $value
     * @return \google\devtools\cloudprofiler\v2\Profile
     */
    public function setDuration(\google\protobuf\Duration $value){
      return $this->_set(4, $value);
    }
    
    /**
     * Check if <profile_bytes> has a value
     *
     * @return boolean
     */
    public function hasProfileBytes(){
      return $this->_has(5);
    }
    
    /**
     * Clear <profile_bytes> value
     *
     * @return \google\devtools\cloudprofiler\v2\Profile
     */
    public function clearProfileBytes(){
      return $this->_clear(5);
    }
    
    /**
     * Get <profile_bytes> value
     *
     * @return string
     */
    public function getProfileBytes(){
      return $this->_get(5);
    }
    
    /**
     * Set <profile_bytes> value
     *
     * @param string $value
     * @return \google\devtools\cloudprofiler\v2\Profile
     */
    public function setProfileBytes( $value){
      return $this->_set(5, $value);
    }
    
    /**
     * Check if <labels> has a value
     *
     * @return boolean
     */
    public function hasLabels(){
      return $this->_has(6);
    }
    
    /**
     * Clear <labels> value
     *
     * @return \google\devtools\cloudprofiler\v2\Profile
     */
    public function clearLabels(){
      return $this->_clear(6);
    }
    
    /**
     * Get <labels> value
     *
     * @param int $idx
     * @return \google\devtools\cloudprofiler\v2\Profile\LabelsEntry
     */
    public function getLabels($idx = NULL){
      return $this->_get(6, $idx);
    }
    
    /**
     * Set <labels> value
     *
     * @param \google\devtools\cloudprofiler\v2\Profile\LabelsEntry $value
     * @return \google\devtools\cloudprofiler\v2\Profile
     */
    public function setLabels(\google\devtools\cloudprofiler\v2\Profile\LabelsEntry $value, $idx = NULL){
      return $this->_set(6, $value, $idx);
    }
    
    /**
     * Get all elements of <labels>
     *
     * @return \google\devtools\cloudprofiler\v2\Profile\LabelsEntry[]
     */
    public function getLabelsList(){
     return $this->_get(6);
    }
    
    /**
     * Add a new element to <labels>
     *
     * @param \google\devtools\cloudprofiler\v2\Profile\LabelsEntry $value
     * @return \google\devtools\cloudprofiler\v2\Profile
     */
    public function addLabels(\google\devtools\cloudprofiler\v2\Profile\LabelsEntry $value){
     return $this->_add(6, $value);
    }
  }
}

namespace google\devtools\cloudprofiler\v2\Deployment {

  class LabelsEntry extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $key = null;
    
    /**  @var string */
    public $value = null;
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.devtools.cloudprofiler.v2.Deployment.LabelsEntry');

      // OPTIONAL STRING key = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "key";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING value = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "value";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <key> has a value
     *
     * @return boolean
     */
    public function hasKey(){
      return $this->_has(1);
    }
    
    /**
     * Clear <key> value
     *
     * @return \google\devtools\cloudprofiler\v2\Deployment\LabelsEntry
     */
    public function clearKey(){
      return $this->_clear(1);
    }
    
    /**
     * Get <key> value
     *
     * @return string
     */
    public function getKey(){
      return $this->_get(1);
    }
    
    /**
     * Set <key> value
     *
     * @param string $value
     * @return \google\devtools\cloudprofiler\v2\Deployment\LabelsEntry
     */
    public function setKey( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <value> has a value
     *
     * @return boolean
     */
    public function hasValue(){
      return $this->_has(2);
    }
    
    /**
     * Clear <value> value
     *
     * @return \google\devtools\cloudprofiler\v2\Deployment\LabelsEntry
     */
    public function clearValue(){
      return $this->_clear(2);
    }
    
    /**
     * Get <value> value
     *
     * @return string
     */
    public function getValue(){
      return $this->_get(2);
    }
    
    /**
     * Set <value> value
     *
     * @param string $value
     * @return \google\devtools\cloudprofiler\v2\Deployment\LabelsEntry
     */
    public function setValue( $value){
      return $this->_set(2, $value);
    }
  }
}

namespace google\devtools\cloudprofiler\v2 {

  class Deployment extends \DrSlump\Protobuf\Message {

    /**  @var string */
    public $project_id = null;
    
    /**  @var string */
    public $target = null;
    
    /**  @var \google\devtools\cloudprofiler\v2\Deployment\LabelsEntry[]  */
    public $labels = array();
    

    /** @var \Closure[] */
    protected static $__extensions = array();

    public static function descriptor()
    {
      $descriptor = new \DrSlump\Protobuf\Descriptor(__CLASS__, 'google.devtools.cloudprofiler.v2.Deployment');

      // OPTIONAL STRING project_id = 1
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 1;
      $f->name      = "project_id";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // OPTIONAL STRING target = 2
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 2;
      $f->name      = "target";
      $f->type      = \DrSlump\Protobuf::TYPE_STRING;
      $f->rule      = \DrSlump\Protobuf::RULE_OPTIONAL;
      $descriptor->addField($f);

      // REPEATED MESSAGE labels = 3
      $f = new \DrSlump\Protobuf\Field();
      $f->number    = 3;
      $f->name      = "labels";
      $f->type      = \DrSlump\Protobuf::TYPE_MESSAGE;
      $f->rule      = \DrSlump\Protobuf::RULE_REPEATED;
      $f->reference = '\google\devtools\cloudprofiler\v2\Deployment\LabelsEntry';
      $descriptor->addField($f);

      foreach (self::$__extensions as $cb) {
        $descriptor->addField($cb(), true);
      }

      return $descriptor;
    }

    /**
     * Check if <project_id> has a value
     *
     * @return boolean
     */
    public function hasProjectId(){
      return $this->_has(1);
    }
    
    /**
     * Clear <project_id> value
     *
     * @return \google\devtools\cloudprofiler\v2\Deployment
     */
    public function clearProjectId(){
      return $this->_clear(1);
    }
    
    /**
     * Get <project_id> value
     *
     * @return string
     */
    public function getProjectId(){
      return $this->_get(1);
    }
    
    /**
     * Set <project_id> value
     *
     * @param string $value
     * @return \google\devtools\cloudprofiler\v2\Deployment
     */
    public function setProjectId( $value){
      return $this->_set(1, $value);
    }
    
    /**
     * Check if <target> has a value
     *
     * @return boolean
     */
    public function hasTarget(){
      return $this->_has(2);
    }
    
    /**
     * Clear <target> value
     *
     * @return \google\devtools\cloudprofiler\v2\Deployment
     */
    public function clearTarget(){
      return $this->_clear(2);
    }
    
    /**
     * Get <target> value
     *
     * @return string
     */
    public function getTarget(){
      return $this->_get(2);
    }
    
    /**
     * Set <target> value
     *
     * @param string $value
     * @return \google\devtools\cloudprofiler\v2\Deployment
     */
    public function setTarget( $value){
      return $this->_set(2, $value);
    }
    
    /**
     * Check if <labels> has a value
     *
     * @return boolean
     */
    public function hasLabels(){
      return $this->_has(3);
    }
    
    /**
     * Clear <labels> value
     *
     * @return \google\devtools\cloudprofiler\v2\Deployment
     */
    public function clearLabels(){
      return $this->_clear(3);
    }
    
    /**
     * Get <labels> value
     *
     * @param int $idx
     * @return \google\devtools\cloudprofiler\v2\Deployment\LabelsEntry
     */
    public function getLabels($idx = NULL){
      return $this->_get(3, $idx);
    }
    
    /**
     * Set <labels> value
     *
     * @param \google\devtools\cloudprofiler\v2\Deployment\LabelsEntry $value
     * @return \google\devtools\cloudprofiler\v2\Deployment
     */
    public function setLabels(\google\devtools\cloudprofiler\v2\Deployment\LabelsEntry $value, $idx = NULL){
      return $this->_set(3, $value, $idx);
    }
    
    /**
     * Get all elements of <labels>
     *
     * @return \google\devtools\cloudprofiler\v2\Deployment\LabelsEntry[]
     */
    public function getLabelsList(){
     return $this->_get(3);
    }
    
    /**
     * Add a new element to <labels>
     *
     * @param \google\devtools\cloudprofiler\v2\Deployment\LabelsEntry $value
     * @return \google\devtools\cloudprofiler\v2\Deployment
     */
    public function addLabels(\google\devtools\cloudprofiler\v2\Deployment\LabelsEntry $value){
     return $this->_add(3, $value);
    }
  }
}

namespace google\devtools\cloudprofiler\v2 {

  class ProfilerServiceClient extends \Grpc\BaseStub {

    public function __construct($hostname, $opts, $channel = null) {
      parent::__construct($hostname, $opts, $channel);
    }
    /**
     * @param google\devtools\cloudprofiler\v2\CreateProfileRequest $input
     */
    public function CreateProfile(\google\devtools\cloudprofiler\v2\CreateProfileRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.devtools.cloudprofiler.v2.ProfilerService/CreateProfile', $argument, '\google\devtools\cloudprofiler\v2\Profile::deserialize', $metadata, $options);
    }
    /**
     * @param google\devtools\cloudprofiler\v2\UpdateProfileRequest $input
     */
    public function UpdateProfile(\google\devtools\cloudprofiler\v2\UpdateProfileRequest $argument, $metadata = array(), $options = array()) {
      return $this->_simpleRequest('/google.devtools.cloudprofiler.v2.ProfilerService/UpdateProfile', $argument, '\google\devtools\cloudprofiler\v2\Profile::deserialize', $metadata, $options);
    }
  }
}
